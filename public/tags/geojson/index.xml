<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Geojson on Recology</title>
    <link>http://localhost:1313/tags/geojson/</link>
    <description>Recent content in Geojson on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 May 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/geojson/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>lawn - a new package to do geospatial analysis</title>
      <link>http://localhost:1313/2015/05/mow-the-lawn/</link>
      <pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/05/mow-the-lawn/</guid>
      <description>lawn is an R wrapper for the Javascript library turf.js for advanced geospatial analysis. In addition, we have a few functions to interface with the geojson-random Javascript library.
lawn includes traditional spatial operations, helper functions for creating GeoJSON data, and data classification and statistics tools.
There is an additional helper function (see view()) in this package to help visualize data with interactive maps via the leaflet package (https://github.com/rstudio/leaflet). Note that leaflet is not required to install lawn - it&amp;rsquo;s in Suggests, not Imports or Depends.</description>
    </item>
    <item>
      <title>geojsonio - a new package to do geojson things</title>
      <link>http://localhost:1313/2015/04/geojson-io/</link>
      <pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/04/geojson-io/</guid>
      <description>geojsonio converts geographic data to GeoJSON and TopoJSON formats - though the focus is mostly on GeoJSON
For those not familiar GeoJSON it is a format for encoding a variety of geographic data structures. GeoJSON supports the following geometry types: Point, LineString, Polygon, MultiPoint, MultiLineString, MultiPolygon, and GeometryCollection. These geometry types are also found in well known text (WKT), and have equivalents in R&amp;rsquo;s spatial classes. Read the spec for more detailed information.</description>
    </item>
    <item>
      <title>R I/O for geojson and topojson</title>
      <link>http://localhost:1313/2015/01/geojson-topojson-io/</link>
      <pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/geojson-topojson-io/</guid>
      <description>At rOpenSci we&amp;rsquo;ve been working on an R package (geojsonio) to make converting R data in various formats to geoJSON and topoJSON, and vice versa. We hope to do this one job very well, and handle all reasonable use cases.
Functions in this package are organized first around what you&amp;rsquo;re working with or want to get, geojson or topojson, then convert to or read from various formats:
geojson_list()/topojson_list() - convert to geojson/topojson as R list format geojson_json()/topojson_json() - convert to geojson/topojson as json geojson_read()``topojson_read() - read a geojson/topojson file from file path or URL geojson_write()/topojson_write() - write a geojson/topojson file locally Each of the above functions have methods for various objects/classes, including numeric, data.</description>
    </item>
    <item>
      <title>R to GeoJSON</title>
      <link>http://localhost:1313/2013/06/geojson/</link>
      <pubDate>Sun, 30 Jun 2013 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2013/06/geojson/</guid>
      <description>UPDATE As you can see in Patrick&amp;rsquo;s comment below you can convert to GeoJSON format files with rgdal as an alternative to calling the Ogre web API described below. See here for example code for converting to GeoJSON with rgdal.
GitHub recently introduced the ability to render GeoJSON files on their site as maps here, and recently introduced here support for TopoJSON, an extension of GeoJSON can be up to 80% smaller than GeoJSON, support for other file extensions (.</description>
    </item>
  </channel>
</rss>
