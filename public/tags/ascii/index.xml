<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ascii on Recology</title>
    <link>http://localhost:1313/tags/ascii/</link>
    <description>Recent content in Ascii on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Feb 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ascii/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cowsay - ascii messages and warnings for R</title>
      <link>http://localhost:1313/2014/02/cowsay/</link>
      <pubDate>Thu, 20 Feb 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/02/cowsay/</guid>
      <description><![CDATA[<h2 id="the-history">The history</h2>
<p>Cowsay is a terminal program that generates ascii pictures of a cow saying what you tell the cow to say in a bubble. See the Wikipedia page for more information: <a href="https://en.wikipedia.org/wiki/Cowsay">https://en.wikipedia.org/wiki/Cowsay</a> - Install cowsay to use in your terminal (on OSX):</p>
<pre tabindex="0"><code>brew update
brew install cowsay
</code></pre><p>Type <code>cowsay hello world!</code>, and you get:</p>
<pre tabindex="0"><code> ______________
&lt; hello world! &gt;
 --------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||
</code></pre><p>Optionally, you can install <a href="https://en.wikipedia.org/wiki/Fortune_(Unix)">fortune</a> to get pseudorandom messages from a database of quotations. On OSX do <code>brew install fortune</code>, then you can pipe a fortune quote to <code>cowsay</code>:</p>
<pre tabindex="0"><code>fortune | cowsay
</code></pre><p>And get something like:</p>
<pre tabindex="0"><code> ______________________________________
/ &#34;To take a significant step forward, \
| you must make a series of finite     |
| improvements.&#34; -- Donald J. Atwood,  |
\ General Motors                       /
 --------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||
</code></pre><p>You can also get different animals. Try <code>cowsay -f tux &lt;yourmessage&gt;</code></p>
<h2 id="cowsay-in-r">Cowsay in R</h2>
<p>Why cowsay for R?  Why not. You never know what you will learn in fun side projects. Basically, this cowsay R package we are making prints messages that you pass to the function <code>say</code>.  There are three arguments to the <code>say</code> function:</p>
<ul>
<li><strong>what</strong>: What do you want to say?  You can pass it a custom message, anything you want, like <em>what&rsquo;s up</em>, or <em>howdy!</em>. You can also get R&rsquo;s version of fortunes, quotes about R. Just pass the exact term <em>forture</em>. If you want a fact about cats from the <a href="https://catfacts-api.appspot.com/">Cat Facts API</a>, pass in <em>catfact</em>. Last, you can get the current time by passing <em>time</em> to this parameter.</li>
<li><strong>by</strong>: Type of animal, one of cow, chicken, poop, cat, ant, pumpkin, ghost, spider, rabbit, pig, snowman, or frog. If you want more animals, send a pull request, or ask and at some point it will be added.</li>
<li><strong>type</strong>: One of message (default), warning, or string (returns string). You could use string to pass into other functions, etc., instead of printing a warning or message.</li>
</ul>
<p>There are three other contributors so far (a big thanks to them):</p>
<ul>
<li>Tyler Rinker</li>
<li>Thomas Leeper</li>
<li>Noam Ross</li>
</ul>
<h3 id="installation">Installation</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(devtools)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">install_github</span>(<span style="color:#e6db74">&#34;cowsay&#34;</span>, <span style="color:#e6db74">&#34;sckott&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(cowsay)
</span></span></code></pre></div><p>p.s. or <code>install_github(&quot;sckott/cowsay&quot;)</code> if you have a newer version of devtools</p>
<h3 id="get-time">Get time</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;time&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>
 ----- 
 2014-02-20 14:15:35 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;time&#34;</span>, <span style="color:#e6db74">&#34;chicken&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>

 ----- 
 2014-02-20 14:15:35 
 ------ 
    \   
     \  
         _
       _/ }
      `&gt;&#39; \
      `|   \
       |   /&#39;-.     .-.
        \&#39;     &#39;;`--&#39; .&#39;
         \&#39;.    `&#39;-./
          &#39;.`-..-;`
            `;-..&#39;
            _| _|
            /` /`
  
</code></pre><h3 id="vary-type-of-output-default-calls-message">Vary type of output, default calls message</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;hello world&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>
 ----- 
 hello world 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;hello world&#34;</span>, type <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;warning&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>Warning: 
 ----- 
 hello world 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;hello world&#34;</span>, type <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;string&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>[1] &#34;\n ----- \n hello world \n ------ \n    \\   ^__^ \n     \\  (oo)\\ ________ \n        (__)\\         )\\ /\\ \n             ||------w|\n             ||      ||&#34;
</code></pre><h3 id="catfacts">Catfacts!!!!</h3>
<p>From the <a href="https://catfacts-api.appspot.com/">catfacts API</a>, we can get random cat facts. If you put in <em>catfact</em> you by default get a cat saying it.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;catfact&#34;</span>, <span style="color:#e6db74">&#34;cat&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>

 ----- 
 Neutering a cat extends its life span by two or three years. 
 ------ 
    \   
     \  
               \`*-.
                 )  _`-.                 
                .  : `. .                
                : _   &#39;                 
                ; *` _.   `*-._          
                `-.-&#39;          `-.       
                  ;       `       `.     
                  :.       .       \
                  .\  .   :   .-&#39;   .   
                  &#39;  `+.;  ;  &#39;      :   
                  :  &#39;  |    ;       ;-. 
                  ; &#39;   : :`-:     _.`* ;
               .*&#39; /  .*&#39; ; .*`- +&#39;  `*&#39; 
               `*-*   `*-*  `*-*&#39;        
    
</code></pre><h3 id="r-fortunes">R fortunes</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;fortune&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>
 ----- 
 If I were to be treated by a cure created by stepwise regression, I would prefer voodoo.
 Dieter Menne
 in a thread about regressions with many variables
 R-help
 October 2009 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;fortune&#34;</span>, <span style="color:#e6db74">&#34;pig&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>

 ----- 
 Cross posting is sociopathic.
 Roger Koenker
 NA
 R-help
 November 2008 
 ------ 
    \   
     \  
       _//| .-~~~-.
     _/oo  }       }-@
    (&#39;&#39;)_  }       |
     `--&#39;| { }--{  }
          //_/  /_/
  
</code></pre><h3 id="incorporate-into-a-function">Incorporate into a function</h3>
<p>Define a function</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>foo <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (x <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">5</span>) 
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">say</span>(<span style="color:#e6db74">&#34;woops, x should be 5 or greater&#34;</span>)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Call the function, with an error on purpose</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">foo</span>(<span style="color:#ae81ff">3</span>)
</span></span></code></pre></div><pre tabindex="0"><code>
 ----- 
 woops, x should be 5 or greater 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre><p>Or capture a warning or message and pass to the <code>say</code> function</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>foo2 <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>    err <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">tryCatch</span>(x^2, error <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(e) e)
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">say</span>(err<span style="color:#f92672">$</span>message, <span style="color:#e6db74">&#34;frog&#34;</span>)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Then call the function</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">foo2</span>(<span style="color:#e6db74">&#34;hello&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>

 ----- 
 non-numeric argument to binary operator 
 ------ 
    \   
     \  
        (.)_(.)
     _ (   _   ) _
    / \/`-----&#39;\/ \
  __\ ( (     ) ) /__
  )   /\ \._./ /\   (
   )_/ /|\   /|\ \_(
  
</code></pre><p>Awesome. Much better to have an error message from a frog than just the harsh console alone :)</p>
]]></description>
    </item>
  </channel>
</rss>
