<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Httr on Recology</title>
    <link>http://localhost:1313/tags/httr/</link>
    <description>Recent content in Httr on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/httr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>request - a high level HTTP client for R</title>
      <link>http://localhost:1313/2016/01/request-hello-world/</link>
      <pubDate>Tue, 05 Jan 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2016/01/request-hello-world/</guid>
      <description>request is DSL for http requests for R, and is inspired by the CLI tool httpie. It&amp;rsquo;s built on httr.
The following were driving principles for this package:
The web is increasingly a JSON world, so we assume applications/json by default, but give back other types if not The workflow follows logically, or at least should, from, hey, I got this url, to i need to add some options, to execute request - and functions support piping so that you can execute functions in this order Whenever possible, we transform output to data.</description>
    </item>
    <item>
      <title>the new way - httsnap</title>
      <link>http://localhost:1313/2015/04/the-new-way/</link>
      <pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/04/the-new-way/</guid>
      <description>Inspired by httpie, a Python command line client as a sort of drop in replacement for curl, I am playing around with something similar-ish in R, at least in spirit. I started a little R pkg called httsnap with the following ideas:
The web is increasingly a JSON world, so set content-type and accept headers to applications/json by default The workflow follows logically, or at least should, from, hey, I got this url, to i need to add some options, to execute request Whenever possible, transform output to data.</description>
    </item>
    <item>
      <title>Dealing with multi handle errors</title>
      <link>http://localhost:1313/2014/12/multi-handle/</link>
      <pubDate>Mon, 08 Dec 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/12/multi-handle/</guid>
      <description>At rOpenSci we occasssionally hear from our users that they run into an error like:
Error in function (type, msg, asError = TRUE) : easy handled already used in multi handle This error occurs in the httr package that we use to do http requests to sources of data on the web. It happens when e.g., you make a lot of requests to a resource, then it gets interrupted somehow - then you make another call, and you get the error above.</description>
    </item>
  </channel>
</rss>
