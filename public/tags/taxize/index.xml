<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Taxize on Recology</title>
    <link>http://localhost:1313/tags/taxize/</link>
    <description>Recent content in Taxize on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Dec 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/taxize/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>taxize workflows</title>
      <link>http://localhost:1313/2014/12/taxize-workflows/</link>
      <pubDate>Tue, 02 Dec 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/12/taxize-workflows/</guid>
      <description>A missed chat on the rOpenSci website the other day asked:
Hi there, i am trying to use the taxize package and have a .csv file of species names to run through taxize updating them. What would be the code i would need to run to achieve this?
One way to answer this is to talk about the basic approach to importing data, doing stuff to the data, then recombining data.</description>
    </item>
    <item>
      <title>1000 commits to taxize</title>
      <link>http://localhost:1313/2014/11/taxize-1000/</link>
      <pubDate>Fri, 28 Nov 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/11/taxize-1000/</guid>
      <description>Just today we&amp;rsquo;ve hit 1000 commits on taxize! taxize is an R client to search across lots of taxonomic databases on the web. In honor of the 1000 commit milestone, here&amp;rsquo;s some stats on the project.
Before that, lots of people have contributed to taxize, it&amp;rsquo;s a big group effort:
Eduard Sz√∂cs Zachary Foster Carl Boettiger Karthik Ram Jari Oksanen Francis Michonneau Oliver Keyes David LeBauer Ben Marwick Anirvan Chatterjee In addition, we&amp;rsquo;ve had lots of feedback from users, including feature requests and bug reports, making taxize a lot better.</description>
    </item>
    <item>
      <title>Resolving species names when you have a lot of them</title>
      <link>http://localhost:1313/2013/01/tnrs-use-case/</link>
      <pubDate>Fri, 25 Jan 2013 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2013/01/tnrs-use-case/</guid>
      <description>taxize use case: Resolving species names when you have a lot of them Species names can be a pain in the ass, especially if you are an ecologist. We ecologists aren&amp;rsquo;t trained in taxonomy, yet we often end up with huge species lists. Of course we want to correct any spelling errors in the names, and get the newest names for our species, resolve any synonyms, etc.
We are building tools into our R package taxize, that will let you check your species names to make sure they are correct.</description>
    </item>
    <item>
      <title>Is invasive?</title>
      <link>http://localhost:1313/2012/12/is-invasive/</link>
      <pubDate>Thu, 13 Dec 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2012/12/is-invasive/</guid>
      <description>The Global Invasive Species Database (GISD) (see their website for more info here) has data on the invasiveness status of many species. From taxize you can now query the GISD database.
Introducing the function gisd_isinvasive. This function was contributed to taxize by Ignasi Bartomeus, a postdoc at the Swedish University Agricultural Sciences.
There are two possible outputs from using gisd_isinvasive: &amp;ldquo;Invasive&amp;rdquo; or &amp;ldquo;Not in GISD&amp;rdquo;. If you use simplify=TRUE in the function you get &amp;ldquo;Invasive&amp;rdquo; or &amp;ldquo;Not in GISD&amp;rdquo;, but if you use simplify=FALSE you get verbose description of the invasive species instead of just &amp;ldquo;Invasive&amp;rdquo; (and you still just get &amp;ldquo;Not in GISD&amp;rdquo;).</description>
    </item>
    <item>
      <title>One R package for all your taxonomic needs</title>
      <link>http://localhost:1313/2012/12/taxize/</link>
      <pubDate>Thu, 06 Dec 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2012/12/taxize/</guid>
      <description>UPDATE: there were some errors in the tests for taxize, so the binaries aren&amp;rsquo;t avaiable yet. You can install from source though, see below.
Getting taxonomic information for the set of species you are studying can be a pain in the ass. You have to manually type, or paste in, your species one-by-one. Or, if you are lucky, there is a web service in which you can upload a list of species.</description>
    </item>
    <item>
      <title>Getting taxonomic names downstream</title>
      <link>http://localhost:1313/2012/10/get-taxa-downstream/</link>
      <pubDate>Tue, 16 Oct 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2012/10/get-taxa-downstream/</guid>
      <description>It can be a pain in the ass to get taxonomic names. For example, I sometimes need to get all the Class names for a set of species. This is a relatively easy problem using the ITIS API (example below).
The much harder problem is getting all the taxonomic names downstream. ITIS doesn&amp;rsquo;t provide an API method for this - well, they do (getHirerachyDownFromTSN), but it only provides direct children (e.</description>
    </item>
    <item>
      <title>Hitting the Global Names Resolver API</title>
      <link>http://localhost:1313/2012/07/global-names-resolver/</link>
      <pubDate>Fri, 20 Jul 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2012/07/global-names-resolver/</guid>
      <description>Example of using the Global Names Resolver API to check species names There are a number of options for resolution of taxonomic names. The Taxonomic Name Resolution Service (TNRS) comes to mind. There is a new service for taxonomic name resoultion called the Global Names Resolver. They describe the service thusly &amp;ldquo;Resolve lists of scientific names against known sources. This service parses incoming names, executes exact or fuzzy matching as required, and displays a confidence score for each match along with its identifier.</description>
    </item>
    <item>
      <title>searching ITIS and fetching Phylomatic trees</title>
      <link>http://localhost:1313/2011/06/searching-itis-and-fetching-phylomatic-trees/</link>
      <pubDate>Fri, 03 Jun 2011 17:35:00 -0500</pubDate>
      <guid>http://localhost:1313/2011/06/searching-itis-and-fetching-phylomatic-trees/</guid>
      <description>I am writing a set of functions to search ITIS for taxonomic information (more databases to come) and functions to fetch plant phylogenetic trees from Phylomatic. Code at github.
Also, see the examples in the demos folder on the Github site above.</description>
    </item>
  </channel>
</rss>
