<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Builder-Pattern on Recology</title>
    <link>http://localhost:1313/tags/builder-pattern/</link>
    <description>Recent content in Builder-Pattern on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Dec 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/builder-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>API client design: how to deal with lots of parameters?</title>
      <link>http://localhost:1313/2020/12/api-client-params/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/12/api-client-params/</guid>
      <description>In February this year I wroute about how many parameters functions should have, looking at some other languages, with a detailed look at R. On a related topic &amp;hellip;
As I work on many R packages that are API clients for various web services, I began wondering: What is the best way to deal with API routes that have a lot of parameters?
The general programming wisdom I&amp;rsquo;ve seen is that a function should have no more than 3-4 parameters (e.</description>
    </item>
  </channel>
</rss>
