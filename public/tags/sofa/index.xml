<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sofa on Recology</title>
    <link>http://localhost:1313/tags/sofa/</link>
    <description>Recent content in Sofa on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Mar 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/sofa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PUT dataframes on your couch</title>
      <link>http://localhost:1313/2015/03/couch-dataframes/</link>
      <pubDate>Thu, 12 Mar 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/03/couch-dataframes/</guid>
      <description>It would be nice to easily push each row or column of a data.frame into CouchDB instead of having to prepare them yourself into JSON, then push in to couch. I recently added ability to push data.frame&amp;rsquo;s into couch using the normal PUT /{db} method, and added support for the couch bulk API.
Install install.packages(&amp;#34;devtools&amp;#34;) devtools::install_github(&amp;#34;sckott/sofa&amp;#34;) library(&amp;#34;sofa&amp;#34;) PUT /db You can write directly from a data.frame, either by rows or columns.</description>
      <content:encoded><![CDATA[<p>It would be nice to easily push each row or column of a data.frame into CouchDB instead of having to prepare them yourself into JSON, then push in to couch. I recently added ability to push data.frame&rsquo;s into couch using the normal <code>PUT /{db}</code> method, and added support for the couch bulk API.</p>
<h2 id="install">Install</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">install.packages</span>(<span style="color:#e6db74">&#34;devtools&#34;</span>)
</span></span><span style="display:flex;"><span>devtools<span style="color:#f92672">::</span><span style="color:#a6e22e">install_github</span>(<span style="color:#e6db74">&#34;sckott/sofa&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(<span style="color:#e6db74">&#34;sofa&#34;</span>)
</span></span></code></pre></div><h2 id="put-db">PUT /db</h2>
<p>You can write directly from a data.frame, either by rows or columns. First, rows:</p>
<pre tabindex="0"><code>#&gt; $ok
#&gt; [1] TRUE
</code></pre><p>Create a database</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">db_create</span>(dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;mtcarsdb&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">doc_create</span>(mtcars, dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;mtcarsdb&#34;</span>, how<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;rows&#34;</span>)
</span></span><span style="display:flex;"><span>out[1<span style="color:#f92672">:</span><span style="color:#ae81ff">2</span>]
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $`Mazda RX4`</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $`Mazda RX4`$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $`Mazda RX4`$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;0063109bfb1c15765854cbc9525c3a7a&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $`Mazda RX4`$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-3946941c894a874697554e3e6d9bc176&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $`Mazda RX4 Wag`</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $`Mazda RX4 Wag`$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $`Mazda RX4 Wag`$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;0063109bfb1c15765854cbc9525c461d&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $`Mazda RX4 Wag`$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-273ff17a938cb956cba21051ab428b95&#34;</span>
</span></span></code></pre></div><p>Then by columns</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">doc_create</span>(mtcars, dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;mtcarsdb&#34;</span>, how<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;columns&#34;</span>)
</span></span><span style="display:flex;"><span>out[1<span style="color:#f92672">:</span><span style="color:#ae81ff">2</span>]
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $mpg</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $mpg$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $mpg$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;0063109bfb1c15765854cbc9525d4f1f&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $mpg$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-4b83d0ef53a28849a872d47ad03fef9a&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $cyl</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $cyl$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $cyl$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;0063109bfb1c15765854cbc9525d57d3&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $cyl$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-c21bfa5425c67743f0826fd4b44b0dbf&#34;</span>
</span></span></code></pre></div><h2 id="bulk-api">Bulk API</h2>
<p>The bulk API will/should be faster for larger data.frames</p>
<pre tabindex="0"><code>#&gt; $ok
#&gt; [1] TRUE
</code></pre><p>We&rsquo;ll use part of the diamonds dataset</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(<span style="color:#e6db74">&#34;ggplot2&#34;</span>)
</span></span><span style="display:flex;"><span>dat <span style="color:#f92672">&lt;-</span> diamonds[1<span style="color:#f92672">:</span><span style="color:#ae81ff">20000</span>,]
</span></span></code></pre></div><p>Create a database</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">db_create</span>(dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;bulktest&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span></code></pre></div><p>Load by row (could instead do each column, see <code>how</code> parameter), printing the time it takes</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">bulk_create</span>(dat, dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;bulktest&#34;</span>))
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;    user  system elapsed </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  16.832   6.039  24.432</span>
</span></span></code></pre></div><p>The returned data is the same as with <code>doc_create()</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>out[1<span style="color:#f92672">:</span><span style="color:#ae81ff">2</span>]
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;0063109bfb1c15765854cbc9525d8b8d&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-f407fe4935af7fd17c101f13d3c81679&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;0063109bfb1c15765854cbc9525d998b&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-cf8b9a9dcdc026052a663d6fef8a36fe&#34;</span>
</span></span></code></pre></div><p>So that&rsquo;s 20,000 rows in not that much time, not bad.</p>
<h3 id="not-dataframes">not dataframes</h3>
<p>You can also pass in lists or vectors of json as character strings, e.g.,</p>
<p><em>lists</em></p>
<pre tabindex="0"><code>#&gt; $ok
#&gt; [1] TRUE
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">row.names</span>(mtcars) <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">NULL</span> <span style="color:#75715e"># get rid of row.names</span>
</span></span><span style="display:flex;"><span>lst <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">parse_df</span>(mtcars, tojson<span style="color:#f92672">=</span><span style="color:#66d9ef">FALSE</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">db_create</span>(dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;bulkfromlist&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span>out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">bulk_create</span>(lst, dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;bulkfromlist&#34;</span>)
</span></span><span style="display:flex;"><span>out[1<span style="color:#f92672">:</span><span style="color:#ae81ff">2</span>]
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;ba70c46d73707662b1e204a90fcd9bb8&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-3946941c894a874697554e3e6d9bc176&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;ba70c46d73707662b1e204a90fcda9f6&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-273ff17a938cb956cba21051ab428b95&#34;</span>
</span></span></code></pre></div><p><em>json</em></p>
<pre tabindex="0"><code>#&gt; $ok
#&gt; [1] TRUE
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>strs <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.character</span>(<span style="color:#a6e22e">parse_df</span>(mtcars, <span style="color:#e6db74">&#34;columns&#34;</span>))
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">db_create</span>(dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;bulkfromchr&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; $ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span>out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">bulk_create</span>(strs, dbname<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;bulkfromchr&#34;</span>)
</span></span><span style="display:flex;"><span>out[1<span style="color:#f92672">:</span><span style="color:#ae81ff">2</span>]
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;ba70c46d73707662b1e204a90fce8c20&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[1]]$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-4b83d0ef53a28849a872d47ad03fef9a&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$ok</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$id</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;ba70c46d73707662b1e204a90fce9bc1&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [[2]]$rev</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] &#34;1-c21bfa5425c67743f0826fd4b44b0dbf&#34;</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
  </channel>
</rss>
