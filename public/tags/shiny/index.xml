<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Shiny on Recology</title>
    <link>http://localhost:1313/tags/shiny/</link>
    <description>Recent content in Shiny on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/shiny/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shiny file inputs</title>
      <link>http://localhost:1313/2024/03/shiny-file-inputs/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/03/shiny-file-inputs/</guid>
      <description>I wrote the other day about overcoming an issue with Shiny.
Another issue I ran into concurrently was about file inputs. The issue was that file inputs (i.e., shiny::fileInput) was difficult to clear. That is, after a user uploads a file, it was easy to get some of the various parts cleared/cleaned up, but not others:
(Not Easy) The UI components of fileInput (the text of the file name, the loading display) (Not Easy) The data behind the fileInput handler (Easy) Displaying some feedback in the UI after handling file input Load libraries</description>
    </item>
    <item>
      <title>Shiny button weirdness</title>
      <link>http://localhost:1313/2024/03/shiny-events/</link>
      <pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/03/shiny-events/</guid>
      <description>I&amp;rsquo;ve been working on Shiny app at work for the past few months. One of the many frustrating things about Shiny lately has been around buttons. Well, it wasn&amp;rsquo;t really about buttons, but that&amp;rsquo;s where it started.
Load libraries
library(shiny) library(bslib) library(crul) Helper function, returned a random UUID from an httpbin server
httpbin_uuid &amp;lt;- function(...) { con &amp;lt;- crul::HttpClient$new(&amp;#34;https://hb.opencpu.org&amp;#34;) res &amp;lt;- con$get(&amp;#34;uuid&amp;#34;) jsonlite::fromJSON(res$parse(&amp;#34;UTF-8&amp;#34;))$uuid } A bslib ui component
ui &amp;lt;- page_sidebar( title = &amp;#34;My dashboard&amp;#34;, sidebar = list( actionButton(&amp;#34;submit&amp;#34;, &amp;#34;Submit&amp;#34;), actionButton(&amp;#34;reset&amp;#34;, &amp;#34;Reset&amp;#34;) ), textInput(inputId = &amp;#34;name&amp;#34;, &amp;#34;Your name&amp;#34;), textOutput(&amp;#34;uuid&amp;#34;) ) Here&amp;rsquo;s the server part that was giving me trouble.</description>
    </item>
    <item>
      <title>Shiny apps are awesome</title>
      <link>http://localhost:1313/2012/12/shiny-r/</link>
      <pubDate>Mon, 10 Dec 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2012/12/shiny-r/</guid>
      <description>RStudio has a new product called Shiny that, quoting from their website, &amp;ldquo;makes it super simple for R users like you to turn analyses into interactive web applications that anyone can use&amp;rdquo;. See here for more information.
A Shiny basically consists of two files: a ui.r file and a server.r file. The ui.r file, as it says, provides the user interface, and the server.r file provides the the server logic.</description>
    </item>
  </channel>
</rss>
