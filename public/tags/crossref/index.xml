<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Crossref on Recology</title>
    <link>http://localhost:1313/tags/crossref/</link>
    <description>Recent content in Crossref on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/crossref/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>habanero update: Crossref data from Python</title>
      <link>http://localhost:1313/2017/10/habanero-update/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2017/10/habanero-update/</guid>
      <description>I wrote about Crossref clients back nearly two years ago on this blog: Crossref programmatic clients.
Since it&amp;rsquo;s been a while, it seems worth talking again about the the many ways to work programmatically with Crossref data - and focus in on the Python client habanero since it has some recent updates.
The 3 clients work with the main Crossref API, which lets you do things like search for works by title, author, etc.</description>
    </item>
    <item>
      <title>Crossref programmatic clients</title>
      <link>http://localhost:1313/2015/11/crossref-clients/</link>
      <pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/11/crossref-clients/</guid>
      <description>I gave two talks recently at the annual Crossref meeting, one of which was a somewhat technical overview of programmatic clients for Crossref APIs. Check out the talk here. I talked about the motivation for working with Crossref data by writing code/etc. rather than going the GUI route, then went over the various clients, with brief examples.
We (rOpenSci) have been working on the R client rcrossref for a while now, but I&amp;rsquo;m also working on the Python and Ruby clients for Crossref.</description>
    </item>
    <item>
      <title>cites - citation stuff from the command line</title>
      <link>http://localhost:1313/2014/01/cites/</link>
      <pubDate>Sat, 18 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/01/cites/</guid>
      <description>I&amp;rsquo;ve been learning Ruby, and decided to scratch an itch: getting citations for papers to put in a bibtex file or my Zotero library. This usually requires two parts: 1) searching for an article with keywords, and then 2) getting the citation once the paper is found. Since I am lazy, I would prefer to do this from the command line instead of opening up a browser. Thus =&amp;gt; cites. (Note, I&amp;rsquo;m sure someone has created something better - the point is I&amp;rsquo;m learnin&amp;rsquo; me some Ruby) cites does two things:</description>
    </item>
  </channel>
</rss>
