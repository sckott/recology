<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Crossref on Recology</title>
    <link>http://localhost:1313/tags/crossref/</link>
    <description>Recent content in Crossref on Recology</description>
    <generator>Hugo -- 0.144.2</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/crossref/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>habanero update: Crossref data from Python</title>
      <link>http://localhost:1313/2017/10/habanero-update/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2017/10/habanero-update/</guid>
      <description>&lt;p&gt;I wrote about Crossref clients back nearly two years ago on this blog: &lt;a href=&#34;https://recology.info/2015/11/crossref-clients/&#34;&gt;Crossref programmatic clients&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since it&amp;rsquo;s been a while, it seems worth talking again about the the many ways to work programmatically with Crossref data - and focus in on the Python client &lt;code&gt;habanero&lt;/code&gt; since it has some recent updates.&lt;/p&gt;
&lt;p&gt;The 3 clients work with the main &lt;a href=&#34;https://api.crossref.org&#34;&gt;Crossref API&lt;/a&gt;, which lets you do things like search for works by title, author, etc. (e.g., books, articles), search for publishing members, for funders, for journals, for DOI prefixes, and for licenses. It&amp;rsquo;s a powerful API with basically no rate limits, so you can work through lots of data quickly.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I wrote about Crossref clients back nearly two years ago on this blog: <a href="https://recology.info/2015/11/crossref-clients/">Crossref programmatic clients</a>.</p>
<p>Since it&rsquo;s been a while, it seems worth talking again about the the many ways to work programmatically with Crossref data - and focus in on the Python client <code>habanero</code> since it has some recent updates.</p>
<p>The 3 clients work with the main <a href="https://api.crossref.org">Crossref API</a>, which lets you do things like search for works by title, author, etc. (e.g., books, articles), search for publishing members, for funders, for journals, for DOI prefixes, and for licenses. It&rsquo;s a powerful API with basically no rate limits, so you can work through lots of data quickly.</p>
<p>Some deets:</p>
<ul>
<li>Crossref API documentation: <a href="https://api.crossref.org">https://api.crossref.org</a></li>
<li>Python client <code>habanero</code>: <a href="https://github.com/sckott/habanero">https://github.com/sckott/habanero</a></li>
<li>Ruby client <code>serrano</code>: <a href="https://github.com/sckott/serrano">https://github.com/sckott/serrano</a></li>
<li>R client <code>rcrossref</code>: <a href="https://github.com/ropensci/rcrossref">https://github.com/ropensci/rcrossref</a></li>
</ul>
<p>At rOpenSci we&rsquo;ve maintained the R client for quite a few years now, but the Python and Ruby clients were a result of consulting work I did for Crossref.</p>
<p>The R, Ruby, and Python clients are all quite feature complete, although software is never perfect :), and the thing about talking to an API to some other software is they can change stuff on their end - then we have to change suff on our end, on and on &hellip;</p>
<p>Back when the earlier blog post was written about these Crossref clients, we were at the first versions of both <a href="https://github.com/sckott/serrano/tree/v0.1.1">serrano</a> and <a href="https://github.com/sckott/habanero/tree/v0.1.0">habanero</a>. As you can see in the changelogs of the three clients (<a href="https://github.com/sckott/serrano/blob/master/CHANGELOG.md">serrano</a>, <a href="https://github.com/sckott/habanero/blob/master/Changelog.rst">habanero</a>, <a href="https://github.com/ropensci/rcrossref/blob/master/NEWS.md">rcrossref</a>) alot has changed in the last two years as we&rsquo;ve made improvements and kept up with Crossref API changes.</p>
<h3 id="ruby-and-r">Ruby and R</h3>
<p>Nothing new to report for the Ruby (<a href="https://github.com/sckott/serrano">serrano</a>) and R (<a href="https://github.com/ropensci/rcrossref">rcrossref</a>) clients, though both will soon be getting the previous features just mentioned (<code>mailto</code> and <code>select</code>).</p>
<h3 id="python-habanero">Python: habanero</h3>
<p>I&rsquo;ve just released a new version of <code>habanero</code> - <a href="https://pypi.python.org/pypi/habanero">v0.6</a>. Noteable changes include adding ability to add a <code>mailto</code> to each request to get into the so called <a href="https://github.com/CrossRef/rest-api-doc#good-manners--more-reliable-service">&ldquo;polite pool&rdquo;</a>; <a href="https://github.com/CrossRef/rest-api-doc#selecting-which-elements-to-return"><code>select</code> parameter</a> added to select certain fields to get back; and the docs got a major overhaul (check em out at <a href="https://habanero.readthedocs.io/en/latest/">https://habanero.readthedocs.io/en/latest/</a>; hope you like it; get in touch if you think docs can be improved).</p>
<p>To install:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>pip3 install habanero
</span></span><span style="display:flex;"><span><span style="color:#75715e"># or</span>
</span></span><span style="display:flex;"><span>pip install habanero
</span></span></code></pre></div><p>To get into the polite pool, add your <code>mailto</code> email address when you instantiate a Crossref object</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">from</span> habanero <span style="color:#f92672">import</span> Crossref
</span></span><span style="display:flex;"><span>cr <span style="color:#f92672">=</span> Crossref(mailto <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;foo@bar.com&#34;</span>)
</span></span></code></pre></div><p>Then when you call any  methods on <code>cr</code> your email address is sent in the request headers and you&rsquo;ll get into the polite pool.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>cr<span style="color:#f92672">.</span>works()
</span></span></code></pre></div><p>To use the select parameter, pass a comma separated string or a list of strings (both work):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>cr<span style="color:#f92672">.</span>works(select <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;DOI,title&#34;</span>)
</span></span></code></pre></div><h3 id="habanero-use-cases">habanero use cases</h3>
<p>I&rsquo;ve seen some cool use cases using <code>habanero</code> lately.</p>
<ul>
<li>A bibliographic application at <a href="https://taccimo.info/tbl_sector_list.php">https://taccimo.info/tbl_sector_list.php</a> from <a href="https://github.com/sngordon">Sean Gordon</a>.</li>
<li>An application called <a href="https://github.com/pr-omethe-us/PyKED">PyKED</a> from <a href="https://github.com/kyleniemeyer">Kyle Niemeyer</a> - &ldquo;a Python-based software package for validating and interacting with ChemKED (Chemical Kinetics Experimental Data format) files that describe fundamental experimental measurements of combustion phenomena&rdquo;.</li>
<li>A Django app called <a href="https://tailordev-biblio.herokuapp.com/">TailorDev Biblio</a> from <a href="https://github.com/jmaupetit">Julien Maupetit</a> that manages references.</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Crossref programmatic clients</title>
      <link>http://localhost:1313/2015/11/crossref-clients/</link>
      <pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/11/crossref-clients/</guid>
      <description>&lt;p&gt;I gave two talks recently at the annual &lt;a href=&#34;https://www.crossref.org/annualmeeting/agenda.html&#34;&gt;Crossref meeting&lt;/a&gt;, one of which was a somewhat technical overview of programmatic clients for Crossref APIs. Check out the talk &lt;a href=&#34;https://crossref.wistia.com/medias/8rh0jm5eda&#34;&gt;here&lt;/a&gt;. I talked about the motivation for working with Crossref data by writing code/etc. rather than going the GUI route, then went over the various clients, with brief examples.&lt;/p&gt;
&lt;p&gt;We (rOpenSci) have been working on the R client &lt;a href=&#34;https://github.com/ropensci/rcrossref&#34;&gt;rcrossref&lt;/a&gt; for a while now, but I&amp;rsquo;m also working on the Python and Ruby clients for Crossref. In addition, the Ruby client has a CLI client inside. The Javascript client is worked on independently by &lt;a href=&#34;https://science.ai/&#34;&gt;ScienceAI&lt;/a&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I gave two talks recently at the annual <a href="https://www.crossref.org/annualmeeting/agenda.html">Crossref meeting</a>, one of which was a somewhat technical overview of programmatic clients for Crossref APIs. Check out the talk <a href="https://crossref.wistia.com/medias/8rh0jm5eda">here</a>. I talked about the motivation for working with Crossref data by writing code/etc. rather than going the GUI route, then went over the various clients, with brief examples.</p>
<p>We (rOpenSci) have been working on the R client <a href="https://github.com/ropensci/rcrossref">rcrossref</a> for a while now, but I&rsquo;m also working on the Python and Ruby clients for Crossref. In addition, the Ruby client has a CLI client inside. The Javascript client is worked on independently by <a href="https://science.ai/">ScienceAI</a>.</p>
<p>The R, Ruby, and Python clients are useable but not feature complete yet, and would benefit from lots of users surfacing bugs and highlighting nice to have features.</p>
<p>The main Crossref API used in all the clients is documented at <a href="https://github.com/CrossRef/rest-api-doc/blob/master/rest_api.md">api.crossref.org</a>.</p>
<p>I&rsquo;ve tried to make the APIs similar-ish across clients. Functions in each client match the main Crossref search API (api.crossref.org) routes:</p>
<ul>
<li><code>/works</code></li>
<li><code>/members</code></li>
<li><code>/funders</code></li>
<li><code>/journals</code></li>
<li><code>/types</code></li>
<li><code>/licenses</code></li>
</ul>
<p>Other methods in all three clients:</p>
<ul>
<li>Get DOI minting agency
<ul>
<li>Uses api.crossref.org API</li>
</ul>
</li>
<li>Get random DOIs
<ul>
<li>Uses api.crossref.org API</li>
</ul>
</li>
<li>Content negotiation
<ul>
<li>Documented at <a href="https://www.crosscite.org/cn">https://www.crosscite.org/cn</a></li>
</ul>
</li>
<li>Get full text
<ul>
<li>other clients in each language will focus on this use case</li>
</ul>
</li>
<li>Get citation count
<ul>
<li>Uses service at <a href="https://www.crossref.org/openurl">https://www.crossref.org/openurl</a> - though this functionality may be in the api.crossref.org API at some point</li>
</ul>
</li>
</ul>
<p>The following shows how to install, and then examples from each client for a few use cases.</p>
<h2 id="installation">Installation</h2>
<h3 id="python">Python</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>pip install habanero
</span></span></code></pre></div><h3 id="ruby">Ruby</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>gem install serrano
</span></span></code></pre></div><h3 id="r">R</h3>
<p>Inside R:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-R" data-lang="R"><span style="display:flex;"><span><span style="color:#a6e22e">install.packages</span>(<span style="color:#e6db74">&#34;rcrossref&#34;</span>)
</span></span></code></pre></div><h3 id="javascript">Javascript</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>npm install crossref
</span></span></code></pre></div><p>I won&rsquo;t do any examples with the js library, as I don&rsquo;t maintain it.</p>
<h2 id="use-case-get-orcid-ids-for-authors">Use case: get ORCID IDs for authors</h2>
<p>Python</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python3" data-lang="python3"><span style="display:flex;"><span><span style="color:#f92672">from</span> habanero <span style="color:#f92672">import</span> Crossref
</span></span><span style="display:flex;"><span>cr <span style="color:#f92672">=</span> Crossref()
</span></span><span style="display:flex;"><span>res <span style="color:#f92672">=</span> cr<span style="color:#f92672">.</span>works(filter <span style="color:#f92672">=</span> {<span style="color:#e6db74">&#39;has_orcid&#39;</span>: <span style="color:#66d9ef">True</span>}, limit <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>res2 <span style="color:#f92672">=</span> [ [ z<span style="color:#f92672">.</span>get(<span style="color:#e6db74">&#39;ORCID&#39;</span>) <span style="color:#66d9ef">for</span> z <span style="color:#f92672">in</span> x[<span style="color:#e6db74">&#39;author&#39;</span>] ] <span style="color:#66d9ef">for</span> x <span style="color:#f92672">in</span> res<span style="color:#f92672">.</span>result[<span style="color:#e6db74">&#39;message&#39;</span>][<span style="color:#e6db74">&#39;items&#39;</span>] ]
</span></span><span style="display:flex;"><span>filter(<span style="color:#66d9ef">None</span>, reduce(<span style="color:#66d9ef">lambda</span> x, y: x<span style="color:#f92672">+</span>y, res2))
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python3" data-lang="python3"><span style="display:flex;"><span>[<span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-4087-8021&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0002-2076-5452&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-4087-8021&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0002-2076-5452&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-1710-1580&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-1710-1580&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-4637-238X&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-4637-238X&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-4637-238X&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-4637-238X&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-4637-238X&#39;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;https://orcid.org/0000-0003-2510-4271&#39;</span>]
</span></span></code></pre></div><p>Ruby</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ruby" data-lang="ruby"><span style="display:flex;"><span>require <span style="color:#e6db74">&#39;serrano&#39;</span>
</span></span><span style="display:flex;"><span>res <span style="color:#f92672">=</span> <span style="color:#66d9ef">Serrano</span><span style="color:#f92672">.</span>works(<span style="color:#e6db74">filter</span>: {<span style="color:#e6db74">&#39;has_orcid&#39;</span>: <span style="color:#66d9ef">true</span>}, <span style="color:#e6db74">limit</span>: <span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>res2 <span style="color:#f92672">=</span> res<span style="color:#f92672">[</span><span style="color:#e6db74">&#39;message&#39;</span><span style="color:#f92672">][</span><span style="color:#e6db74">&#39;items&#39;</span><span style="color:#f92672">].</span>collect { <span style="color:#f92672">|</span>x<span style="color:#f92672">|</span> x<span style="color:#f92672">[</span><span style="color:#e6db74">&#39;author&#39;</span><span style="color:#f92672">].</span>collect { <span style="color:#f92672">|</span>z<span style="color:#f92672">|</span> z<span style="color:#f92672">[</span><span style="color:#e6db74">&#39;ORCID&#39;</span><span style="color:#f92672">]</span> } }
</span></span><span style="display:flex;"><span>res2<span style="color:#f92672">.</span>flatten<span style="color:#f92672">.</span>compact
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ruby" data-lang="ruby"><span style="display:flex;"><span><span style="color:#f92672">=&gt;</span> <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4087-8021&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0002-2076-5452&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4087-8021&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0002-2076-5452&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-1710-1580&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-1710-1580&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>,
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-2510-4271&#34;</span><span style="color:#f92672">]</span>
</span></span></code></pre></div><p>R</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-R" data-lang="R"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(<span style="color:#e6db74">&#34;rcrossref&#34;</span>)
</span></span><span style="display:flex;"><span>res <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">cr_works</span>(filter<span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>(has_orcid<span style="color:#f92672">=</span><span style="color:#66d9ef">TRUE</span>), limit <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>orcids <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">unlist</span>(<span style="color:#a6e22e">lapply</span>(res<span style="color:#f92672">$</span>data<span style="color:#f92672">$</span>author, <span style="color:#66d9ef">function</span>(z) z<span style="color:#f92672">$</span>ORCID))
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">Filter</span>(<span style="color:#66d9ef">function</span>(x) <span style="color:#f92672">!</span><span style="color:#a6e22e">is.na</span>(x), orcids)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-R" data-lang="R"><span style="display:flex;"><span> [1] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4087-8021&#34;</span>
</span></span><span style="display:flex;"><span> [2] <span style="color:#e6db74">&#34;https://orcid.org/0000-0002-2076-5452&#34;</span>
</span></span><span style="display:flex;"><span> [3] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4087-8021&#34;</span>
</span></span><span style="display:flex;"><span> [4] <span style="color:#e6db74">&#34;https://orcid.org/0000-0002-2076-5452&#34;</span>
</span></span><span style="display:flex;"><span> [5] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-1710-1580&#34;</span>
</span></span><span style="display:flex;"><span> [6] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-1710-1580&#34;</span>
</span></span><span style="display:flex;"><span> [7] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span> [8] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span> [9] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span>[10] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span>[11] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span>[12] <span style="color:#e6db74">&#34;https://orcid.org/0000-0003-2510-4271&#34;</span>
</span></span></code></pre></div><p>CLI</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>serrano works --filter<span style="color:#f92672">=</span>has_orcid:true --json --limit<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span> | jq <span style="color:#e6db74">&#39;.message.items[].author[].ORCID | select(. != null)&#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4087-8021&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0002-2076-5452&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4087-8021&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0002-2076-5452&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-1710-1580&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-1710-1580&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-4637-238X&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0003-2510-4271&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0001-9408-8207&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;https://orcid.org/0000-0002-2076-5452&#34;</span>
</span></span></code></pre></div><h2 id="use-case-content-negotation">Use case: content negotation</h2>
<p>Python</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python3" data-lang="python3"><span style="display:flex;"><span><span style="color:#f92672">from</span> habanero <span style="color:#f92672">import</span> cn
</span></span><span style="display:flex;"><span>cn<span style="color:#f92672">.</span>content_negotiation(ids <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;10.1126/science.169.3946.635&#39;</span>, format <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;text&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python3" data-lang="python3"><span style="display:flex;"><span><span style="color:#e6db74">u</span><span style="color:#e6db74">&#39;Frank, H. S. (1970). The Structure of Ordinary Water: New data and interpretations are yielding new insights into this fascinating substance. Science, 169(3946), 635</span><span style="color:#ae81ff">\xe2\x80\x93</span><span style="color:#e6db74">641. doi:10.1126/science.169.3946.635</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#39;</span>
</span></span></code></pre></div><p>Ruby</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ruby" data-lang="ruby"><span style="display:flex;"><span>require <span style="color:#e6db74">&#39;serrano&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">Serrano</span><span style="color:#f92672">.</span>content_negotiation(<span style="color:#e6db74">ids</span>: <span style="color:#e6db74">&#39;10.1126/science.169.3946.635&#39;</span>, format: <span style="color:#e6db74">&#34;text&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ruby" data-lang="ruby"><span style="display:flex;"><span><span style="color:#f92672">=&gt;</span> <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;Frank, H. S. (1970). The Structure of Ordinary Water: New data and interpretations are yielding new insights into this fascinating substance. Science, 169(3946), 635</span><span style="color:#ae81ff">\xE2\x80\x93</span><span style="color:#e6db74">641. doi:10.1126/science.169.3946.635</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">]</span>
</span></span></code></pre></div><p>R</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(<span style="color:#e6db74">&#34;rcrossref&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">cr_cn</span>(dois<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;10.1126/science.169.3946.635&#34;</span>, <span style="color:#e6db74">&#34;text&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;Frank, H. S. (1970). The Structure of Ordinary Water: New data and interpretations are yielding new insights into this fascinating substance. Science, 169(3946), 635–641. doi:10.1126/science.169.3946.635&#34;</span>
</span></span></code></pre></div><p>CLI</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>serrano contneg 10.1890/13-0590.1 --format<span style="color:#f92672">=</span>text
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>Murtaugh, P. A. <span style="color:#f92672">(</span>2014<span style="color:#f92672">)</span>.  In defense of P values . Ecology, 95<span style="color:#f92672">(</span>3<span style="color:#f92672">)</span>, 611–617. doi:10.1890/13-0590.1
</span></span></code></pre></div><h2 id="more">More</h2>
<p>There are definitely issues with data in the Crossref search API, some of which I cover in my talks. However, it is still the best place to go for scholarly metadata.</p>
<p>Let us know of other use cases - there are others not covered here for brevity sake.</p>
<p>There are lots of examples in the docs for each client. If you can think of any doc improvements file an issue.</p>
<p>If you find any bugs, please do file an issue.</p>
]]></content:encoded>
    </item>
    <item>
      <title>cites - citation stuff from the command line</title>
      <link>http://localhost:1313/2014/01/cites/</link>
      <pubDate>Sat, 18 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/01/cites/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been learning Ruby, and decided to scratch an itch: getting citations for papers to put in a bibtex file or my Zotero library. This usually requires two parts: 1) searching for an article with keywords, and then 2) getting the citation once the paper is found.  Since I am lazy, I would prefer to do this from the command line instead of opening up a browser.  Thus =&amp;gt; &lt;code&gt;cites&lt;/code&gt;. (Note, I&amp;rsquo;m sure someone has created something better - the point is I&amp;rsquo;m learnin&amp;rsquo; me some Ruby)
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;strong&gt;cites does two things:&lt;/strong&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I&rsquo;ve been learning Ruby, and decided to scratch an itch: getting citations for papers to put in a bibtex file or my Zotero library. This usually requires two parts: 1) searching for an article with keywords, and then 2) getting the citation once the paper is found.  Since I am lazy, I would prefer to do this from the command line instead of opening up a browser.  Thus =&gt; <code>cites</code>. (Note, I&rsquo;m sure someone has created something better - the point is I&rsquo;m learnin&rsquo; me some Ruby)
<!-- raw HTML omitted --><!-- raw HTML omitted -->
<strong>cites does two things:</strong></p>
<ul>
<li>Search for a paper. Uses the <a href="http://search.crossref.org/help/api">CrossRef Metadata Search API</a>, which allows POST requests of free form text.</li>
<li>Get a citation from a DOI. Uses CrossRef <a href="http://labs.crossref.org/citation-formatting-service/">citation formatting service</a> to search for citation information.</li>
</ul>
<p>Each of the two above tasks are functions that you can use within Ruby, and are available from the command line/terminal so that you don&rsquo;t have to spin up Ruby. During a typical writing workflow (in which you are using bibtex formatted references) one can want a citation for their paper, and instead of opening up a browser and using Google Scholar or Web of Science, etc., you can quickly search in your terminal by doing e.g., <code>thor cite:search 'keywords that will help find the paper, including author, year, etc.'</code>. Which if matches will give you a DOI. Then you can do <code>thor cite:getcite DOI/string | pbcopy</code> and you get the bibtex reference in your clipboard. Then just paste into your bibtex file or references manager. See more examples below.
<!-- raw HTML omitted --><!-- raw HTML omitted -->
First, we need to install dependencies</p>
<pre tabindex="0"><code>gem install httparty bibtex-ruby launchy
sudo gem install thor
</code></pre><p>Then clone the repo down. The <code>Makefile</code> in the repo builds the gem, and installs the Thor module so you have access to it from anywhere. If you don&rsquo;t want the Thor commands, just do <code>make install</code> and just the gem will be installed.</p>
<pre tabindex="0"><code>git clone git@github.com:sckott/cites.git
cd cites
make
</code></pre><p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h3 id="from-the-command-line-thor">From the command line: Thor</h3>
<p>I decided to use <a href="http://whatisthor.com/">Thor</a> to make functions within <code>cites</code> available on the cli. Thor is cool. For example, you can list the commands available like</p>
<pre tabindex="0"><code>thor list
</code></pre><pre tabindex="0"><code>cite
-----
thor cite:getcite        # Get a citation from a DOI
thor cite:launch paper   # Open a paper from a given DOI in your default browser
thor cite:search STRING  # Get a DOI from a search string
</code></pre><p>Get help for a particular method</p>
<pre tabindex="0"><code>thor help cite:getcite
</code></pre><pre tabindex="0"><code>Usage:
  thor cite:getcite

Options:
  [--format=FORMAT]
                     # Default: text
  [--style=STYLE]
                     # Default: apa
  [--locale=LOCALE]
                     # Default: en-US

Get a citation from a DOI
</code></pre><p>This is what&rsquo;s associated with <code>cites</code> from the cli using Thor.</p>
<p>Other commands are available, just type <code>thor</code> on the cli, and press enter.
<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h3 id="search-for-a-paper">Search for a paper</h3>
<p>From the CLI</p>
<pre tabindex="0"><code>thor cite:search &#39;Piwowar sharing data increases citation PLOS&#39;
</code></pre><pre tabindex="0"><code>{&#34;match&#34;=&gt;true, &#34;doi&#34;=&gt;&#34;10.1371/journal.pone.0000308&#34;, &#34;text&#34;=&gt;&#34;Piwowar sharing data increases citation PLOS&#34;}
</code></pre><p>And you can do many searches, separated with commas, like</p>
<pre tabindex="0"><code>thor cite:search &#39;Piwowar sharing data increases citation PLOS,boettiger Modeling stabilizing selection&#39;
</code></pre><p>Search within Ruby</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ruby" data-lang="ruby"><span style="display:flex;"><span>require <span style="color:#e6db74">&#39;cites&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">Cites</span><span style="color:#f92672">.</span>search(<span style="color:#e6db74">&#39;Piwowar sharing data increases citation PLOS&#39;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ruby" data-lang="ruby"><span style="display:flex;"><span><span style="color:#f92672">=&gt;</span> <span style="color:#f92672">[</span>{<span style="color:#e6db74">&#34;match&#34;</span><span style="color:#f92672">=&gt;</span><span style="color:#66d9ef">true</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;doi&#34;</span><span style="color:#f92672">=&gt;</span><span style="color:#e6db74">&#34;10.1371/journal.pone.0000308&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;text&#34;</span><span style="color:#f92672">=&gt;</span><span style="color:#e6db74">&#34;Piwowar sharing data increases citation PLOS&#34;</span>}<span style="color:#f92672">]</span>
</span></span></code></pre></div><p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h3 id="get-a-reference-from-a-doi">Get a reference from a DOI</h3>
<p>From the CLI, default output is text format, apa style, locale en-US</p>
<pre tabindex="0"><code>thor cite:getcite &#39;10.1186/1471-2105-14-16&#39;
</code></pre><pre tabindex="0"><code>Boyle, B., Hopkins, N., Lu, Z., Raygoza Garay, J. A., Mozzherin, D., Rees, T., Matasci, N., et al. (2013). The taxonomic name resolution service: an online tool for automated standardization of plant names. BMC Bioinformatics, 14(1), 16. Springer (Biomed Central Ltd.). doi:10.1186/1471-2105-14-16
</code></pre><p>Because we&rsquo;re using <a href="http://whatisthor.com/">thor</a> you can pass in options to the call on the cli, like here choose <code>ris</code> for the format</p>
<pre tabindex="0"><code>thor cite:getcite &#39;10.1371/journal.pone.0000308&#39; --format=ris
</code></pre><pre tabindex="0"><code>TY  - JOUR
T2  - PLoS ONE
AU  - Piwowar, Heather A.
AU  - Day, Roger S.
AU  - Fridsma, Douglas B.
SN  - 1932-6203
TI  - Sharing Detailed Research Data Is Associated with Increased Citation Rate
SP  - e308
VL  - 2
PB  - Public Library of Science
DO  - 10.1371/journal.pone.0000308
PY  - 2007
UR  - http://dx.doi.org/10.1371/journal.pone.0000308
ER  -
</code></pre><p>And here <code>bibtex</code> for the format</p>
<pre tabindex="0"><code>thor cite:getcite &#39;10.1371/journal.pone.0000308&#39; --format=bibtex
</code></pre><pre tabindex="0"><code>@article{Piwowar_Day_Fridsma_2007,
  title = {Sharing Detailed Research Data Is Associated with Increased Citation Rate},
  volume = {2},
  url = {http://dx.doi.org/10.1371/journal.pone.0000308},
  doi = {10.1371/journal.pone.0000308},
  number = {3},
  journal = {PLoS ONE},
  publisher = {Public Library of Science},
  author = {Piwowar, Heather A. and Day, Roger S. and Fridsma, Douglas B.},
  editor = {Ioannidis, JohnEditor},
  year = {2007},
  month = {mar},
  pages = {e308}
}
</code></pre><p>Two more options, <code>style</code> and <code>locale</code> are only available with text format, like</p>
<pre tabindex="0"><code>thor cite:getcite &#39;10.1371/journal.pone.0000308&#39; --format=text --style=mla --locale=fr-FR
</code></pre><pre tabindex="0"><code>Piwowar, Heather A., Roger S. Day, et Douglas B. Fridsma. « Sharing Detailed Research Data Is Associated with Increased Citation Rate ». éd par. John Ioannidis. PLoS ONE 2.3 (2007): e308.
</code></pre><p>Within Ruby</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ruby" data-lang="ruby"><span style="display:flex;"><span>require <span style="color:#e6db74">&#39;cites&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">Cites</span><span style="color:#f92672">.</span>doi2cit(<span style="color:#e6db74">&#39;10.1371/journal.pone.0000308&#39;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ruby" data-lang="ruby"><span style="display:flex;"><span><span style="color:#f92672">=&gt;</span> <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;Piwowar, H. A., Day, R. S., &amp; Fridsma, D. B. (2007). Sharing Detailed Research Data Is Associated with Increased Citation Rate. (J. Ioannidis, Ed.)PLoS ONE, 2(3), e308. Public Library of Science. doi:10.1371/journal.pone.0000308&#34;</span><span style="color:#f92672">]</span>
</span></span></code></pre></div><p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h3 id="open-paper-in-browser">Open paper in browser</h3>
<p>Uses <a href="http://macrodocs.org/">Macrodocs</a>. The default, using Macrodocs, only works for open access (#OA) articles. You can set the option <code>oa</code> to be false.</p>
<pre tabindex="0"><code>thor cite:launch &#39;10.1371/journal.pone.0000308&#39;
</code></pre><p>It&rsquo;s super simple, it just concatenates your DOI onto <code>http://macrodocs.org/?doi=</code> to give in this case <a href="http://macrodocs.org/?doi=10.1371/journal.pone.0000308">http://macrodocs.org/?doi=10.1371/journal.pone.0000308</a> for what you will get from that command.</p>
<p>When you don&rsquo;t have an open access article, set the oa option flag to false, like <code>--oa=false</code></p>
<pre tabindex="0"><code>thor cite:launch &#39;10.1111/1365-2745.12157&#39; --oa=false
</code></pre><p>Setting <code>--oa=false</code> simply concatenates your doi onto <code>http://dx.doi.org/</code>, which then attempts to resolve to likely the publishers page for the article.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
