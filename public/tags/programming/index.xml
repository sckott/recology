<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Programming on Recology</title>
    <link>http://localhost:1313/tags/programming/</link>
    <description>Recent content in Programming on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Apr 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python, ast, and redbaron</title>
      <link>http://localhost:1313/2023/04/python-ast/</link>
      <pubDate>Tue, 18 Apr 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2023/04/python-ast/</guid>
      <description>I recently had a use case at work where I wanted to check that file paths given in a Python script actually existed. These paths were in various GitHub repositories, so all I had to do was pull out the paths and check if they exist on GitHub.
There were a few catches though.
First, I couldn&amp;rsquo;t simply get any string out of each Python script - they needed to be strings specficied by a specific function parameter, and match a regex (e.</description>
    </item>
    <item>
      <title>API client design: how to deal with lots of parameters?</title>
      <link>http://localhost:1313/2020/12/api-client-params/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/12/api-client-params/</guid>
      <description>In February this year I wroute about how many parameters functions should have, looking at some other languages, with a detailed look at R. On a related topic &amp;hellip;
As I work on many R packages that are API clients for various web services, I began wondering: What is the best way to deal with API routes that have a lot of parameters?
The general programming wisdom I&amp;rsquo;ve seen is that a function should have no more than 3-4 parameters (e.</description>
    </item>
    <item>
      <title>how many parameters?</title>
      <link>http://localhost:1313/2020/02/how-many-parameters/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/02/how-many-parameters/</guid>
      <description>Functions can have no parameters, or have a lot of parameters, or somewhere in between. How many parameters is too many? Does it even matter how many parameters there are in a function?
There&amp;rsquo;s AFAIK no &amp;ldquo;correct&amp;rdquo; answer to this question. And surely the &amp;ldquo;best practice&amp;rdquo; varies among programming languages. What do folks say about this and what should we be doing in R?
From other languages Many of the blog posts and SO posts on this topic cite the book Clean Code by &amp;ldquo;Uncle Bob&amp;rdquo;.</description>
    </item>
  </channel>
</rss>
