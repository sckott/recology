<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Scraping on Recology</title>
    <link>http://localhost:1313/tags/scraping/</link>
    <description>Recent content in Scraping on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Dec 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/scraping/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Museum metadata - the Asian Art Museum of San Francisco</title>
      <link>http://localhost:1313/2014/12/museum-aamsf/</link>
      <pubDate>Wed, 10 Dec 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/12/museum-aamsf/</guid>
      <description>I was in San Francisco last week for an altmetrics conference at PLOS. While there, I visited the Asian Art Museum, just the Roads of Arabia exhibition.
It was a great exhibit. While I was looking at the pieces, I read many labels, and thought, &amp;ldquo;hey, what if someone wants this metadata&amp;rdquo;?
Since we have an R package in development for scraping museum metadata (called musemeta), I just started some scraping code for this museum.</description>
    </item>
    <item>
      <title>Scraping Flora of North America</title>
      <link>http://localhost:1313/2012/01/flora-north-america-scraping/</link>
      <pubDate>Fri, 27 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2012/01/flora-north-america-scraping/</guid>
      <description>So Flora of North America is an awesome collection of taxonomic information for plants across the continent. However, the information within is not easily machine readable.
So, a little web scraping is called for.
rfna is an R package to collect information from the Flora of North America.
So far, you can:
Get taxonomic names from web pages that index the names. Then get daughter URLs for those taxa, which then have their own 2nd order daughter URLs you can scrape, or scrape the 1st order daughter page.</description>
    </item>
  </channel>
</rss>
