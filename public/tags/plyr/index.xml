<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Plyr on Recology</title>
    <link>http://localhost:1313/tags/plyr/</link>
    <description>Recent content in Plyr on Recology</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Jul 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/plyr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R ecology workshop</title>
      <link>http://localhost:1313/2013/07/r-ecology-workshop/</link>
      <pubDate>Wed, 31 Jul 2013 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2013/07/r-ecology-workshop/</guid>
      <description>&lt;p&gt;After &lt;a href=&#34;http://sckott.github.io/2013/07/r-resources/&#34;&gt;my presentation yesterday&lt;/a&gt; to a group of grad students on R resources, I did a presentation today on intro to R data manipulation, visualizations, and analyses/visualizations of biparite networks and community level analyses (diversity, rarefaction, ordination, etc.). As I said &lt;a href=&#34;http://sckott.github.io/2013/07/r-resources/&#34;&gt;yesterday&lt;/a&gt; I&amp;rsquo;ve been playing with two ways to make reproducible presentations in R: &lt;a href=&#34;http://www.rstudio.com/ide/docs/presentations/overview&#34;&gt;RStudio&amp;rsquo;s presentations&lt;/a&gt; built in to RStudio IDE, and &lt;a href=&#34;http://slidify.org/&#34;&gt;Slidify&lt;/a&gt;. Yesterday I went with RStudio&amp;rsquo;s product - today I used Slidify. See the Markdown file for the presentation &lt;a href=&#34;https://github.com/sckott/posterstalks/blob/gh-pages/sfu/resources/r_resources.Rpres&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>After <a href="http://sckott.github.io/2013/07/r-resources/">my presentation yesterday</a> to a group of grad students on R resources, I did a presentation today on intro to R data manipulation, visualizations, and analyses/visualizations of biparite networks and community level analyses (diversity, rarefaction, ordination, etc.). As I said <a href="http://sckott.github.io/2013/07/r-resources/">yesterday</a> I&rsquo;ve been playing with two ways to make reproducible presentations in R: <a href="http://www.rstudio.com/ide/docs/presentations/overview">RStudio&rsquo;s presentations</a> built in to RStudio IDE, and <a href="http://slidify.org/">Slidify</a>. Yesterday I went with RStudio&rsquo;s product - today I used Slidify. See the Markdown file for the presentation <a href="https://github.com/sckott/posterstalks/blob/gh-pages/sfu/resources/r_resources.Rpres">here</a>.</p>
<p>Check out the presentation slides <a href="https://bitly.com/sfuworkshop">here</a>, and if you want, fork <a href="http://bit.ly/1bKVX2O">the code on Github</a>, change it, submit changes back to me, etc. (click on the image to go to slides)</p>
<p>How I actually ran the 2 hr workshop was to present a few slides, then live demo writing the code out with students following along, with a number of times where they do something on their own.</p>
<p><a href="https://bitly.com/sfuworkshop"><img loading="lazy" src="/pres.png"></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Weecology can has new mammal dataset</title>
      <link>http://localhost:1313/2011/12/weecology-can-has-new-mammal-dataset/</link>
      <pubDate>Thu, 29 Dec 2011 08:11:00 -0600</pubDate>
      <guid>http://localhost:1313/2011/12/weecology-can-has-new-mammal-dataset/</guid>
      <description>&lt;p&gt;So the &lt;a href=&#34;http://weecology.org/&#34;&gt;Weecology&lt;/a&gt; folks have published a large dataset on mammal communities in a data paper in &lt;a href=&#34;http://www.esajournals.org/doi/abs/10.1890/11-0262.1&#34;&gt;Ecology&lt;/a&gt;. I know nothing about mammal communities, but that doesn&amp;rsquo;t mean one can&amp;rsquo;t play with the data&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;their-dataset-consists-of-five-csv-files&#34;&gt;Their dataset consists of five csv files:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;communities,&lt;/li&gt;
&lt;li&gt;references,&lt;/li&gt;
&lt;li&gt;sites,&lt;/li&gt;
&lt;li&gt;species, and&lt;/li&gt;
&lt;li&gt;trapping data&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;where-are-these-sites-and-by-the-way-do-they-vary-much-in-altitude&#34;&gt;Where are these sites, and by the way, do they vary much in altitude?&lt;/h3&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/-BKqBoPCDA_A/Tvx9nLbMlkI/AAAAAAAAFPA/9_pG_Ihx33I/s1600/usmap.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/-KkU_EcX8-EY/Tvx9n7hiP9I/AAAAAAAAFPI/7LoV0IjRiAM/s1600/worldmap.png%22&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lets-zoom-in-on-just-the-states&#34;&gt;Let&amp;rsquo;s zoom in on just the states&lt;/h3&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/-BKqBoPCDA_A/Tvx9nLbMlkI/AAAAAAAAFPA/9_pG_Ihx33I/s1600/usmap.png%22&#34;&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>So the <a href="http://weecology.org/">Weecology</a> folks have published a large dataset on mammal communities in a data paper in <a href="http://www.esajournals.org/doi/abs/10.1890/11-0262.1">Ecology</a>. I know nothing about mammal communities, but that doesn&rsquo;t mean one can&rsquo;t play with the data&hellip;</p>
<h3 id="their-dataset-consists-of-five-csv-files">Their dataset consists of five csv files:</h3>
<ul>
<li>communities,</li>
<li>references,</li>
<li>sites,</li>
<li>species, and</li>
<li>trapping data</li>
</ul>
<h3 id="where-are-these-sites-and-by-the-way-do-they-vary-much-in-altitude">Where are these sites, and by the way, do they vary much in altitude?</h3>
<p><img loading="lazy" src="http://3.bp.blogspot.com/-BKqBoPCDA_A/Tvx9nLbMlkI/AAAAAAAAFPA/9_pG_Ihx33I/s1600/usmap.png"></p>
<p><img loading="lazy" src="http://1.bp.blogspot.com/-KkU_EcX8-EY/Tvx9n7hiP9I/AAAAAAAAFPI/7LoV0IjRiAM/s1600/worldmap.png%22"></p>
<h3 id="lets-zoom-in-on-just-the-states">Let&rsquo;s zoom in on just the states</h3>
<p><img loading="lazy" src="http://3.bp.blogspot.com/-BKqBoPCDA_A/Tvx9nLbMlkI/AAAAAAAAFPA/9_pG_Ihx33I/s1600/usmap.png%22"></p>
<h3 id="what-phylogenies-can-we-get-for-the-species-in-this-dataset">What phylogenies can we get for the species in this dataset?</h3>
<p>We can use the <a href="http://cran.r-project.org/web/packages/treebase/">rOpenSci package treebase</a> to search the online phylogeny repository <a href="http://www.treebase.org/treebase-web/home.html">TreeBASE</a>. Limiting to returning a max of 1 tree (to save time), we can see that X species are in at least 1 tree on the TreeBASE database. Nice.</p>
<p>So there are 321 species in the database with at least 1 tree in the TreeBASE database. Of course there could be many more, but we limited results from TreeBASE to just 1 tree per query.</p>
<h3 id="heres-the-code">Here&rsquo;s the code:</h3>

<script src="https://gist.github.com/1534730.js?file=mammaldataset.R"></script>

]]></content:encoded>
    </item>
    <item>
      <title>I Work For The Internet !</title>
      <link>http://localhost:1313/2011/12/i-work-for-internet/</link>
      <pubDate>Tue, 13 Dec 2011 09:35:00 -0600</pubDate>
      <guid>http://localhost:1313/2011/12/i-work-for-internet/</guid>
      <description>&lt;p&gt;UPDATE: code and figure updated at 647 AM CST on 19 Dec &amp;lsquo;11. Also, see Jarrett Byrnes (improved) fork of my gist &lt;a href=&#34;https://gist.github.com/1474802&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The site &lt;a href=&#34;http://iworkfortheinternet.org/&#34;&gt;I WORK FOR THE INTERNET&lt;/a&gt; is collecting pictures and first names (last name initials only) to show collective support against SOPA (the Stop Online Piracy Act). Please stop by their site and add your name/picture.&lt;/p&gt;
&lt;p&gt;I used the #rstats package twitteR, created by Jeff Gentry, to search for tweets from people signing this site with their picture, then plotted using ggplot2, and also used Hadley&amp;rsquo;s lubridate to round timestamps on tweets to be able to bin tweets in to time slots for plotting.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>UPDATE: code and figure updated at 647 AM CST on 19 Dec &lsquo;11. Also, see Jarrett Byrnes (improved) fork of my gist <a href="https://gist.github.com/1474802">here</a>.</p>
<p>The site <a href="http://iworkfortheinternet.org/">I WORK FOR THE INTERNET</a> is collecting pictures and first names (last name initials only) to show collective support against SOPA (the Stop Online Piracy Act). Please stop by their site and add your name/picture.</p>
<p>I used the #rstats package twitteR, created by Jeff Gentry, to search for tweets from people signing this site with their picture, then plotted using ggplot2, and also used Hadley&rsquo;s lubridate to round timestamps on tweets to be able to bin tweets in to time slots for plotting.</p>
<p>Tweets containing the phrase &lsquo;I work for the internet&rsquo; by time:</p>
<p><img loading="lazy" src="http://1.bp.blogspot.com/-KALUtp3xQ_Q/Tu8ya0ZX0GI/AAAAAAAAFNM/JGVLj1qSRYs/s1600/Rplot01.png"></p>
<p>Here&rsquo;s the code as a GitHub gist. Sometimes the searchTwitter fxn doesn&rsquo;t returns an error, which I don&rsquo;t understand, but you can play with it:</p>

<script src="https://gist.github.com/1472619.js?file=iworkfortheinternet.R"></script>

]]></content:encoded>
    </item>
    <item>
      <title>ggplot2 talk by Hadley Whickam at Google</title>
      <link>http://localhost:1313/2011/06/ggplot2-talk-by-hadley-whickam-at-google/</link>
      <pubDate>Fri, 17 Jun 2011 11:40:00 -0500</pubDate>
      <guid>http://localhost:1313/2011/06/ggplot2-talk-by-hadley-whickam-at-google/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/TaxJwC_MP9Q?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;</description>
      <content:encoded><![CDATA[<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/TaxJwC_MP9Q?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"></iframe>
    </div>

]]></content:encoded>
    </item>
    <item>
      <title>plyr&#39;s idata.frame VS. data.frame</title>
      <link>http://localhost:1313/2011/05/plyrs-idataframe-vs-dataframe/</link>
      <pubDate>Fri, 13 May 2011 15:16:00 -0500</pubDate>
      <guid>http://localhost:1313/2011/05/plyrs-idataframe-vs-dataframe/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;I had seen the function idata.frame in plyr before, but not really tested it. From the plyr documentation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;An immutable data frame works like an ordinary data frame, except that when you subset it, it returns a reference to the original data frame, not a a copy. This makes subsetting substantially faster and has a big impact when you are working with large datasets with many groups.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For example, although baseball is a data.frame, its immutable counterpart is a reference to it:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<hr>
<p>I had seen the function idata.frame in plyr before, but not really tested it. From the plyr documentation:</p>
<blockquote>
<p><em>&ldquo;An immutable data frame works like an ordinary data frame, except that when you subset it, it returns a reference to the original data frame, not a a copy. This makes subsetting substantially faster and has a big impact when you are working with large datasets with many groups.&rdquo;</em></p></blockquote>
<p>For example, although baseball is a data.frame, its immutable counterpart is a reference to it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">idata.frame</span>(baseball)
</span></span><span style="display:flex;"><span><span style="color:#f92672">&lt;</span>environment<span style="color:#f92672">:</span> <span style="color:#ae81ff">0x1022c74e8</span><span style="color:#f92672">&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">attr</span>(,<span style="color:#e6db74">&#34;class&#34;</span>)
</span></span><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;idf&#34;</span>         <span style="color:#e6db74">&#34;environment&#34;</span>
</span></span></code></pre></div><p>Here are a few comparisons of operations on normal data frames and immutable data frames. Immutable data frames don&rsquo;t work with the doBy package, but do work with aggregate in base functions. Overall, the speed gains using idata.frame are quite impressive - I will use it more often for sure.</p>
<p>Here&rsquo;s the comparisons of idata.frames and data.frames:</p>
<hr>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># load packages</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">require</span>(plyr)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">require</span>(reshape2)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Make immutable data frame</span>
</span></span><span style="display:flex;"><span>baseball_i <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">idata.frame</span>(baseball)
</span></span></code></pre></div><h3 id="example-1---idataframe-more-than-twice-as-fast">Example 1 - idata.frame more than twice as fast</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">50</span>, <span style="color:#a6e22e">ddply</span>(baseball, <span style="color:#e6db74">&#34;year&#34;</span>, summarise, <span style="color:#a6e22e">mean</span>(rbi))))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
  8.509   0.266   8.798 
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">50</span>, <span style="color:#a6e22e">ddply</span>(baseball_i, <span style="color:#e6db74">&#34;year&#34;</span>, summarise, <span style="color:#a6e22e">mean</span>(rbi))))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
  7.233   0.025   7.334 
</code></pre><h3 id="example-2---bummer-this-does-not-work-with-idataframes">Example 2 - Bummer, this does not work with idata.frame&rsquo;s</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">colwise</span>(max, is.numeric)(baseball)  <span style="color:#75715e"># works</span>
</span></span></code></pre></div><pre tabindex="0"><code>  year stint   g  ab   r   h X2b X3b hr rbi sb cs  bb so ibb hbp sh sf
1 2007     4 165 705 177 257  64  28 73  NA NA NA 232 NA  NA  NA NA NA
  gidp
1   NA
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">colwise</span>(max, is.numeric)(baseball_i)  <span style="color:#75715e"># doesn&#39;t work</span>
</span></span></code></pre></div><pre tabindex="0"><code>Error: is.data.frame(df) is not TRUE
</code></pre><h3 id="example-3---idataframe-twice-as-fast">Example 3 - idata.frame twice as fast</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, baseball[baseball<span style="color:#f92672">$</span>year <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;1884&#34;</span>, ]))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
  1.329   0.035   1.378 
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, baseball_i[baseball_i<span style="color:#f92672">$</span>year <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;1884&#34;</span>, ]))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
  0.674   0.015   0.689 
</code></pre><h3 id="example-4---idataframe-faster">Example 4 - idata.frame faster</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">50</span>, <span style="color:#a6e22e">melt</span>(baseball[, <span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">4</span>], id <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>)))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
  7.129   0.506   7.691 
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">50</span>, <span style="color:#a6e22e">melt</span>(baseball_i[, <span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">4</span>], id <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>)))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
  0.852   0.162   1.015 
</code></pre><h3 id="and-you-can-go-back-to-a-data-frame-by">And you can go back to a data frame by</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>d <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.data.frame</span>(baseball_i)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">str</span>(d)
</span></span></code></pre></div><pre tabindex="0"><code>&#39;data.frame&#39;: 21699 obs. of  22 variables:
 $ id   : chr  &#34;ansonca01&#34; &#34;forceda01&#34; &#34;mathebo01&#34; &#34;startjo01&#34; ...
 $ year : int  1871 1871 1871 1871 1871 1871 1871 1872 1872 1872 ...
 $ stint: int  1 1 1 1 1 1 1 1 1 1 ...
 $ team : chr  &#34;RC1&#34; &#34;WS3&#34; &#34;FW1&#34; &#34;NY2&#34; ...
 $ lg   : chr  &#34;&#34; &#34;&#34; &#34;&#34; &#34;&#34; ...
 $ g    : int  25 32 19 33 29 29 29 46 37 25 ...
 $ ab   : int  120 162 89 161 128 146 145 217 174 130 ...
 $ r    : int  29 45 15 35 35 40 36 60 26 40 ...
 $ h    : int  39 45 24 58 45 47 37 90 46 53 ...
 $ X2b  : int  11 9 3 5 3 6 5 10 3 11 ...
 $ X3b  : int  3 4 1 1 7 5 7 7 0 0 ...
 $ hr   : int  0 0 0 1 3 1 2 0 0 0 ...
 $ rbi  : int  16 29 10 34 23 21 23 50 15 16 ...
 $ sb   : int  6 8 2 4 3 2 2 6 0 2 ...
 $ cs   : int  2 0 1 2 1 2 2 6 1 2 ...
 $ bb   : int  2 4 2 3 1 4 9 16 1 1 ...
 $ so   : int  1 0 0 0 0 1 1 3 1 0 ...
 $ ibb  : int  NA NA NA NA NA NA NA NA NA NA ...
 $ hbp  : int  NA NA NA NA NA NA NA NA NA NA ...
 $ sh   : int  NA NA NA NA NA NA NA NA NA NA ...
 $ sf   : int  NA NA NA NA NA NA NA NA NA NA ...
 $ gidp : int  NA NA NA NA NA NA NA NA NA NA ...
</code></pre><h3 id="idataframe-doesnt-work-with-the-doby-package">idata.frame doesn&rsquo;t work with the doBy package</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">require</span>(doBy)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">summaryBy</span>(rbi <span style="color:#f92672">~</span> year, baseball_i, FUN <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(mean), na.rm <span style="color:#f92672">=</span> T)
</span></span></code></pre></div><pre tabindex="0"><code>Error: cannot coerce type &#39;environment&#39; to vector of type &#39;any&#39;
</code></pre><h3 id="but-idataframe-works-with-aggregate-in-base-but-with-minimal-speed-gains-and-aggregate-is-faster-than-ddply">But idata.frame works with aggregate in base (but with minimal speed gains) and aggregate is faster than ddply</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, <span style="color:#a6e22e">aggregate</span>(rbi <span style="color:#f92672">~</span> year, baseball, mean)))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
  4.998   0.346   5.373 
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, <span style="color:#a6e22e">aggregate</span>(rbi <span style="color:#f92672">~</span> year, baseball_i, mean)))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
  4.745   0.283   5.045 
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>(<span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, <span style="color:#a6e22e">ddply</span>(baseball_i, <span style="color:#e6db74">&#34;year&#34;</span>, summarise, <span style="color:#a6e22e">mean</span>(rbi))))
</span></span></code></pre></div><pre tabindex="0"><code>   user  system elapsed 
 13.293   0.042  13.428 
</code></pre>]]></content:encoded>
    </item>
    <item>
      <title>Troubling news for the teaching of evolution</title>
      <link>http://localhost:1313/2011/02/troubling-news-for-teaching-of/</link>
      <pubDate>Wed, 09 Feb 2011 08:20:00 -0600</pubDate>
      <guid>http://localhost:1313/2011/02/troubling-news-for-teaching-of/</guid>
      <description>&lt;p&gt;[UPDATE: i remade the maps in green, hope that helps&amp;hellip;]&lt;/p&gt;
&lt;p&gt;A recent survey reported in &lt;a href=&#34;http://www.sciencemag.org.silk.library.umass.edu/content/331/6016/404.full&#34;&gt;Science&lt;/a&gt; (&amp;ldquo;Defeating Creationism in the Courtroom, but not in the Classroom&amp;rdquo;) found that biology teachers in high school do not often accept the basis of their discipline, as do teachers in other disciplines, and thus may not teach evolution appropriately. Read more here: &lt;a href=&#34;http://www.nytimes.com/2011/02/08/science/08creationism.html?emc=eta1&#34;&gt;New York Times&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I took a little time to play with the data provided online along with the Science article. The data is available on the Science website along with the article, and the dataset I read into R is unchanged from the original. The states abbreviations file is &lt;a href=&#34;http://schamber.files.wordpress.com/2011/02/states_abbreviations.xls&#34;&gt;here&lt;/a&gt; (as a .xls). Here goes:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>[UPDATE: i remade the maps in green, hope that helps&hellip;]</p>
<p>A recent survey reported in <a href="http://www.sciencemag.org.silk.library.umass.edu/content/331/6016/404.full">Science</a> (&ldquo;Defeating Creationism in the Courtroom, but not in the Classroom&rdquo;) found that biology teachers in high school do not often accept the basis of their discipline, as do teachers in other disciplines, and thus may not teach evolution appropriately. Read more here: <a href="http://www.nytimes.com/2011/02/08/science/08creationism.html?emc=eta1">New York Times</a>.</p>
<p>I took a little time to play with the data provided online along with the Science article. The data is available on the Science website along with the article, and the dataset I read into R is unchanged from the original. The states abbreviations file is <a href="http://schamber.files.wordpress.com/2011/02/states_abbreviations.xls">here</a> (as a .xls). Here goes:</p>
<p>I only played with two survey questions: q1b (no. of hours ecology is taught per year), and q1d (no. of hours evolution is taught per year). I looked at ecology and evolution as this blog is about ecology and evolution. It seems that some states that teach a lot of ecology teach a lot of evolution, but I found no correlation between the two without extreme outliers. I couldn’t help but notice my home state, TX, is near the bottom of the list on both counts - go TX! The teaching of evolution on the map produced below is less predictable than I would have though just based on my assumptions about political will in each state.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># Analyses of Conditionality Data set of all variables, except for latitude, etc.</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">setwd</span>(<span style="color:#e6db74">&#34;/Mac/R_stuff/Blog_etc/EvolutionTeaching/&#34;</span>) <span style="color:#75715e"># Set working directory</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(ggplot2)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># read in data, and prepare new columns</span>
</span></span><span style="display:flex;"><span>survey <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">read.csv</span>(<span style="color:#e6db74">&#34;berkmandata.csv&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">str</span>(survey) <span style="color:#75715e"># (I do realize that survey is a data object in the MASS package)</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Assign actual hours to survey answers </span>
</span></span><span style="display:flex;"><span>ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>, survey<span style="color:#f92672">$</span>q1b)
</span></span><span style="display:flex;"><span>ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">1.5</span>, ecol)
</span></span><span style="display:flex;"><span>ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">4</span>, ecol)
</span></span><span style="display:flex;"><span>ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">4</span>, <span style="color:#ae81ff">8</span>, ecol)
</span></span><span style="display:flex;"><span>ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">5</span>, <span style="color:#ae81ff">13</span>, ecol)
</span></span><span style="display:flex;"><span>ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">6</span>, <span style="color:#ae81ff">18</span>, ecol)
</span></span><span style="display:flex;"><span>ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">7</span>, <span style="color:#ae81ff">20</span>, ecol)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>, survey<span style="color:#f92672">$</span>q1d)
</span></span><span style="display:flex;"><span>evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">1.5</span>, evol)
</span></span><span style="display:flex;"><span>evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">4</span>, evol)
</span></span><span style="display:flex;"><span>evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">4</span>, <span style="color:#ae81ff">8</span>, evol)
</span></span><span style="display:flex;"><span>evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">5</span>, <span style="color:#ae81ff">13</span>, evol)
</span></span><span style="display:flex;"><span>evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">6</span>, <span style="color:#ae81ff">18</span>, evol)
</span></span><span style="display:flex;"><span>evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">gsub</span>(<span style="color:#ae81ff">7</span>, <span style="color:#ae81ff">20</span>, evol)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>survey<span style="color:#f92672">$</span>ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.numeric</span>(ecol)
</span></span><span style="display:flex;"><span>survey<span style="color:#f92672">$</span>evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.numeric</span>(evol)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># ddply it</span>
</span></span><span style="display:flex;"><span>survey_sum <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ddply</span>(survey, .(st_posta), summarise,
</span></span><span style="display:flex;"><span> mean_ecol_hrs <span style="color:#f92672">=</span> <span style="color:#a6e22e">mean</span>(ecol, na.rm<span style="color:#f92672">=</span>T),
</span></span><span style="display:flex;"><span> mean_evol_hrs <span style="color:#f92672">=</span> <span style="color:#a6e22e">mean</span>(evol, na.rm<span style="color:#f92672">=</span>T),
</span></span><span style="display:flex;"><span> se_ecol_hrs <span style="color:#f92672">=</span> <span style="color:#a6e22e">sd</span>(ecol, na.rm<span style="color:#f92672">=</span>T)<span style="color:#f92672">/</span><span style="color:#a6e22e">sqrt</span>(<span style="color:#a6e22e">length</span>(ecol)),
</span></span><span style="display:flex;"><span> se_evol_hrs <span style="color:#f92672">=</span> <span style="color:#a6e22e">sd</span>(evol, na.rm<span style="color:#f92672">=</span>T)<span style="color:#f92672">/</span><span style="color:#a6e22e">sqrt</span>(<span style="color:#a6e22e">length</span>(evol)),
</span></span><span style="display:flex;"><span> num_teachers <span style="color:#f92672">=</span> <span style="color:#a6e22e">length</span>(st_posta)
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># plotting</span>
</span></span><span style="display:flex;"><span>limits_ecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">aes</span>(ymax <span style="color:#f92672">=</span> mean_ecol_hrs <span style="color:#f92672">+</span> se_ecol_hrs, ymin <span style="color:#f92672">=</span> mean_ecol_hrs <span style="color:#f92672">-</span> se_ecol_hrs)
</span></span><span style="display:flex;"><span>limits_evol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">aes</span>(ymax <span style="color:#f92672">=</span> mean_evol_hrs <span style="color:#f92672">+</span> se_evol_hrs, ymin <span style="color:#f92672">=</span> mean_evol_hrs <span style="color:#f92672">-</span> se_evol_hrs)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ggplot</span>(survey_sum, <span style="color:#a6e22e">aes</span>(x <span style="color:#f92672">=</span> <span style="color:#a6e22e">reorder</span>(st_posta, mean_ecol_hrs), y <span style="color:#f92672">=</span> mean_ecol_hrs)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span> <span style="color:#a6e22e">geom_point</span>() <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span> <span style="color:#a6e22e">geom_errorbar</span>(limits_ecol) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span> <span style="color:#a6e22e">geom_text</span>(<span style="color:#a6e22e">aes</span>(label <span style="color:#f92672">=</span> num_teachers), vjust <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>, hjust <span style="color:#f92672">=</span> <span style="color:#ae81ff">-3</span>, size <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span> <span style="color:#a6e22e">coord_flip</span>() <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span> <span style="color:#a6e22e">labs</span>(x <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;State&#34;</span>, y <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;Mean hours of ecology taught \n per year (+/- 1 se)&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">####SMALL NUMBERS BY BARS ARE NUMBER OF TEACHERS THAT RESPONDED TO </span>
</span></span></code></pre></div><p><img loading="lazy" src="http://1.bp.blogspot.com/_fANWq796z-w/TVKfu6zmnJI/AAAAAAAAEZw/b49TxhUjMmk/s640/survey_ecol.jpeg">
<img loading="lazy" src="http://2.bp.blogspot.com/-eLaIU-xsE78/TVQP5ol2gBI/AAAAAAAAEaA/vmGvlFhLmfE/s640/survey_evol_map_green.jpeg">
<img loading="lazy" src="http://3.bp.blogspot.com/-cNO2YWHX0Hk/TVQP5B7VxmI/AAAAAAAAEZ8/GBYKNR5vUBs/s640/survey_ecol_map_green.jpeg">
<img loading="lazy" src="http://4.bp.blogspot.com/_fANWq796z-w/TVKfuQSN7sI/AAAAAAAAEZs/o1EIVgS7lkA/s640/survey_evol.jpeg"></p>
]]></content:encoded>
    </item>
    <item>
      <title>Good riddance to Excel pivot tables</title>
      <link>http://localhost:1313/2011/01/good-riddance-to-excel-pivot-tables/</link>
      <pubDate>Sun, 30 Jan 2011 22:36:00 -0600</pubDate>
      <guid>http://localhost:1313/2011/01/good-riddance-to-excel-pivot-tables/</guid>
      <description>&lt;p&gt;Excel pivot tables have been how I have reorganized data&amp;hellip;up until now. These are just a couple of examples why R is superior to Excel for reorganizing data:&lt;/p&gt;
&lt;p&gt;UPDATE: I fixed the code to use &amp;lsquo;dcast&amp;rsquo; instead of &amp;lsquo;cast&amp;rsquo;. And &lt;code&gt;library(ggplot2)&lt;/code&gt; instead of &lt;code&gt;library(plyr)&lt;/code&gt; [&lt;code&gt;plyr&lt;/code&gt; is called along with &lt;code&gt;ggplot2&lt;/code&gt;]. Thanks Bob!&lt;/p&gt;
&lt;p&gt;Also, see another post on this topic &lt;a href=&#34;http://news.mrdwab.com/2010/08/08/using-the-reshape-packagein-r/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(reshape2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(var1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;), each &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; var2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;level1&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;level1&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;level2&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;level2&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; var3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;), meas &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Created by Pretty R at inside&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;R.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# simply pivot table&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dcast&lt;/span&gt;(dataset, var1 &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; var2 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; var3)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using meas as value column.  Use the value argument to cast to override this choice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  var1 level1_h level1_m level2_h level2_m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    a        &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;    b        &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    c        &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;    d        &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;    e        &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;    f        &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# mean by var1 and var2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dcast&lt;/span&gt;(dataset, var1 &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; var2, mean)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using meas as value column.  Use the value argument to cast to override this choice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  var1 level1 level2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    a    &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;    b    &lt;span style=&#34;color:#ae81ff&#34;&gt;5.5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;7.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    c    &lt;span style=&#34;color:#ae81ff&#34;&gt;9.5&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;11.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;    d    &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;    e    &lt;span style=&#34;color:#ae81ff&#34;&gt;5.5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;7.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;    f    &lt;span style=&#34;color:#ae81ff&#34;&gt;9.5&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;11.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# mean by var1 and var3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dcast&lt;/span&gt;(dataset, var1 &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; var3, mean)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using meas as value column.  Use the value argument to cast to override this choice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  var1  h  m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    a  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;    b  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    c &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;    d  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;    e  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;    f &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# mean by var1, var2 and var3 (version 1)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dcast&lt;/span&gt;(dataset, var1 &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; var2 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; var3, mean)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using meas as value column.  Use the value argument to cast to override this choice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  var1 level1_h level1_m level2_h level2_m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    a        &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;    b        &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    c        &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;    d        &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;    e        &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;    f        &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# mean by var1, var2 and var3 (version 2)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dcast&lt;/span&gt;(dataset, var1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; var2 &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; var3, mean)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using meas as value column.  Use the value argument to cast to override this choice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   var1   var2  h  m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;     a level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;     a level2  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;     b level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;     b level2  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;     c level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;     c level2 &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;     d level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;     d level2  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;     e level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;    e level2  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;    f level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;    f level2 &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# use package plyr to create flexible data frames...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataset_plyr &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ddply&lt;/span&gt;(dataset, .(var1, var2), summarise, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mean&lt;/span&gt;(meas), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;(meas),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; CV &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;(meas)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mean&lt;/span&gt;(meas)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; dataset_plyr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   var1   var2 mean        se         CV
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;     a level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.47140452&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;     a level2  &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.20203051&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;     b level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;5.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.12856487&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;     b level2  &lt;span style=&#34;color:#ae81ff&#34;&gt;7.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.09428090&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;     c level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;9.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.07443229&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;     c level2 &lt;span style=&#34;color:#ae81ff&#34;&gt;11.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.06148755&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;     d level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.47140452&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;     d level2  &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.20203051&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;     e level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;5.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.12856487&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;    e level2  &lt;span style=&#34;color:#ae81ff&#34;&gt;7.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.09428090&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;    f level1  &lt;span style=&#34;color:#ae81ff&#34;&gt;9.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.07443229&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;    f level2 &lt;span style=&#34;color:#ae81ff&#34;&gt;11.5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7071068&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.06148755&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ...to use for plotting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;qplot&lt;/span&gt;(var1, mean, colour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; var2, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CV, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataset_plyr, geom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;point&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt=&#34;Figure&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/pivottable1.jpeg&#34;&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Excel pivot tables have been how I have reorganized data&hellip;up until now. These are just a couple of examples why R is superior to Excel for reorganizing data:</p>
<p>UPDATE: I fixed the code to use &lsquo;dcast&rsquo; instead of &lsquo;cast&rsquo;. And <code>library(ggplot2)</code> instead of <code>library(plyr)</code> [<code>plyr</code> is called along with <code>ggplot2</code>]. Thanks Bob!</p>
<p>Also, see another post on this topic <a href="http://news.mrdwab.com/2010/08/08/using-the-reshape-packagein-r/">here</a>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(reshape2)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(ggplot2) 
</span></span><span style="display:flex;"><span>dataset <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(var1 <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;a&#34;</span>,<span style="color:#e6db74">&#34;b&#34;</span>,<span style="color:#e6db74">&#34;c&#34;</span>,<span style="color:#e6db74">&#34;d&#34;</span>,<span style="color:#e6db74">&#34;e&#34;</span>,<span style="color:#e6db74">&#34;f&#34;</span>), each <span style="color:#f92672">=</span> <span style="color:#ae81ff">4</span>), 
</span></span><span style="display:flex;"><span> var2 <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;level1&#34;</span>,<span style="color:#e6db74">&#34;level1&#34;</span>,<span style="color:#e6db74">&#34;level2&#34;</span>,<span style="color:#e6db74">&#34;level2&#34;</span>), <span style="color:#ae81ff">6</span>), 
</span></span><span style="display:flex;"><span> var3 <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;h&#34;</span>,<span style="color:#e6db74">&#34;m&#34;</span>), <span style="color:#ae81ff">12</span>), meas <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">12</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Created by Pretty R at inside<span style="color:#f92672">-</span>R.org
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># simply pivot table</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">dcast</span>(dataset, var1 <span style="color:#f92672">~</span> var2 <span style="color:#f92672">+</span> var3)
</span></span><span style="display:flex;"><span>Using meas as value column.  Use the value argument to cast to override this choice
</span></span><span style="display:flex;"><span>  var1 level1_h level1_m level2_h level2_m
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>    a        <span style="color:#ae81ff">1</span>        <span style="color:#ae81ff">2</span>        <span style="color:#ae81ff">3</span>        <span style="color:#ae81ff">4</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>    b        <span style="color:#ae81ff">5</span>        <span style="color:#ae81ff">6</span>        <span style="color:#ae81ff">7</span>        <span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>    c        <span style="color:#ae81ff">9</span>       <span style="color:#ae81ff">10</span>       <span style="color:#ae81ff">11</span>       <span style="color:#ae81ff">12</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>    d        <span style="color:#ae81ff">1</span>        <span style="color:#ae81ff">2</span>        <span style="color:#ae81ff">3</span>        <span style="color:#ae81ff">4</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>    e        <span style="color:#ae81ff">5</span>        <span style="color:#ae81ff">6</span>        <span style="color:#ae81ff">7</span>        <span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>    f        <span style="color:#ae81ff">9</span>       <span style="color:#ae81ff">10</span>       <span style="color:#ae81ff">11</span>       <span style="color:#ae81ff">12</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># mean by var1 and var2</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">dcast</span>(dataset, var1 <span style="color:#f92672">~</span> var2, mean)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Using meas as value column.  Use the value argument to cast to override this choice
</span></span><span style="display:flex;"><span>  var1 level1 level2
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>    a    <span style="color:#ae81ff">1.5</span>    <span style="color:#ae81ff">3.5</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>    b    <span style="color:#ae81ff">5.5</span>    <span style="color:#ae81ff">7.5</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>    c    <span style="color:#ae81ff">9.5</span>   <span style="color:#ae81ff">11.5</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>    d    <span style="color:#ae81ff">1.5</span>    <span style="color:#ae81ff">3.5</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>    e    <span style="color:#ae81ff">5.5</span>    <span style="color:#ae81ff">7.5</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>    f    <span style="color:#ae81ff">9.5</span>   <span style="color:#ae81ff">11.5</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># mean by var1 and var3</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">dcast</span>(dataset, var1 <span style="color:#f92672">~</span> var3, mean)
</span></span><span style="display:flex;"><span>Using meas as value column.  Use the value argument to cast to override this choice
</span></span><span style="display:flex;"><span>  var1  h  m
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>    a  <span style="color:#ae81ff">2</span>  <span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>    b  <span style="color:#ae81ff">6</span>  <span style="color:#ae81ff">7</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>    c <span style="color:#ae81ff">10</span> <span style="color:#ae81ff">11</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>    d  <span style="color:#ae81ff">2</span>  <span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>    e  <span style="color:#ae81ff">6</span>  <span style="color:#ae81ff">7</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>    f <span style="color:#ae81ff">10</span> <span style="color:#ae81ff">11</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># mean by var1, var2 and var3 (version 1)</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">dcast</span>(dataset, var1 <span style="color:#f92672">~</span> var2 <span style="color:#f92672">+</span> var3, mean)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Using meas as value column.  Use the value argument to cast to override this choice
</span></span><span style="display:flex;"><span>  var1 level1_h level1_m level2_h level2_m
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>    a        <span style="color:#ae81ff">1</span>        <span style="color:#ae81ff">2</span>        <span style="color:#ae81ff">3</span>        <span style="color:#ae81ff">4</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>    b        <span style="color:#ae81ff">5</span>        <span style="color:#ae81ff">6</span>        <span style="color:#ae81ff">7</span>        <span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>    c        <span style="color:#ae81ff">9</span>       <span style="color:#ae81ff">10</span>       <span style="color:#ae81ff">11</span>       <span style="color:#ae81ff">12</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>    d        <span style="color:#ae81ff">1</span>        <span style="color:#ae81ff">2</span>        <span style="color:#ae81ff">3</span>        <span style="color:#ae81ff">4</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>    e        <span style="color:#ae81ff">5</span>        <span style="color:#ae81ff">6</span>        <span style="color:#ae81ff">7</span>        <span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>    f        <span style="color:#ae81ff">9</span>       <span style="color:#ae81ff">10</span>       <span style="color:#ae81ff">11</span>       <span style="color:#ae81ff">12</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># mean by var1, var2 and var3 (version 2)</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">dcast</span>(dataset, var1 <span style="color:#f92672">+</span> var2 <span style="color:#f92672">~</span> var3, mean)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Using meas as value column.  Use the value argument to cast to override this choice
</span></span><span style="display:flex;"><span>   var1   var2  h  m
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>     a level1  <span style="color:#ae81ff">1</span>  <span style="color:#ae81ff">2</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>     a level2  <span style="color:#ae81ff">3</span>  <span style="color:#ae81ff">4</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>     b level1  <span style="color:#ae81ff">5</span>  <span style="color:#ae81ff">6</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>     b level2  <span style="color:#ae81ff">7</span>  <span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>     c level1  <span style="color:#ae81ff">9</span> <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>     c level2 <span style="color:#ae81ff">11</span> <span style="color:#ae81ff">12</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>     d level1  <span style="color:#ae81ff">1</span>  <span style="color:#ae81ff">2</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>     d level2  <span style="color:#ae81ff">3</span>  <span style="color:#ae81ff">4</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>     e level1  <span style="color:#ae81ff">5</span>  <span style="color:#ae81ff">6</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>    e level2  <span style="color:#ae81ff">7</span>  <span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">11</span>    f level1  <span style="color:#ae81ff">9</span> <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">12</span>    f level2 <span style="color:#ae81ff">11</span> <span style="color:#ae81ff">12</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># use package plyr to create flexible data frames...</span>
</span></span><span style="display:flex;"><span>dataset_plyr <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ddply</span>(dataset, .(var1, var2), summarise, 
</span></span><span style="display:flex;"><span> mean <span style="color:#f92672">=</span> <span style="color:#a6e22e">mean</span>(meas), 
</span></span><span style="display:flex;"><span> se <span style="color:#f92672">=</span> <span style="color:#a6e22e">sd</span>(meas),
</span></span><span style="display:flex;"><span> CV <span style="color:#f92672">=</span> <span style="color:#a6e22e">sd</span>(meas)<span style="color:#f92672">/</span><span style="color:#a6e22e">mean</span>(meas)
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> dataset_plyr
</span></span><span style="display:flex;"><span>   var1   var2 mean        se         CV
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>     a level1  <span style="color:#ae81ff">1.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.47140452</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>     a level2  <span style="color:#ae81ff">3.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.20203051</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>     b level1  <span style="color:#ae81ff">5.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.12856487</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>     b level2  <span style="color:#ae81ff">7.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.09428090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>     c level1  <span style="color:#ae81ff">9.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.07443229</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>     c level2 <span style="color:#ae81ff">11.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.06148755</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>     d level1  <span style="color:#ae81ff">1.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.47140452</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>     d level2  <span style="color:#ae81ff">3.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.20203051</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>     e level1  <span style="color:#ae81ff">5.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.12856487</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>    e level2  <span style="color:#ae81ff">7.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.09428090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">11</span>    f level1  <span style="color:#ae81ff">9.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.07443229</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">12</span>    f level2 <span style="color:#ae81ff">11.5</span> <span style="color:#ae81ff">0.7071068</span> <span style="color:#ae81ff">0.06148755</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># ...to use for plotting</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">qplot</span>(var1, mean, colour <span style="color:#f92672">=</span> var2, size <span style="color:#f92672">=</span> CV, data <span style="color:#f92672">=</span> dataset_plyr, geom <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;point&#34;</span>)
</span></span></code></pre></div><p><img alt="Figure" loading="lazy" src="/pivottable1.jpeg"></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
