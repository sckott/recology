<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Open Source on Recology</title>
    <link>http://localhost:1313/tags/open-source/</link>
    <description>Recent content in Open Source on Recology</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Dec 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/open-source/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>condition control: I just want that message once</title>
      <link>http://localhost:1313/2018/12/condition-control/</link>
      <pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/12/condition-control/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m sure there&amp;rsquo;s already a way to do this, but here goes. OR maybe this is an
anti-pattern. Either way, this is me, asking the stupid question.&lt;/p&gt;
&lt;p&gt;I ran into this a few hours ago:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.unsetenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENTREZ_KEY&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(brranching)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mynames &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Poa annua&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Salix goodingii&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Helianthus annuus&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;phylomatic_names&lt;/span&gt;(taxa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mynames, format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rsubmit&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;No ENTREZ API key provided
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Get one via taxize&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use_entrez&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; See https&lt;span style=&#34;color:#f92672&#34;&gt;://&lt;/span&gt;ncbiinsights.ncbi.nlm.nih.gov&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;new&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;api&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;keys&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;the&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;utilities&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;No ENTREZ API key provided
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Get one via taxize&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use_entrez&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; See https&lt;span style=&#34;color:#f92672&#34;&gt;://&lt;/span&gt;ncbiinsights.ncbi.nlm.nih.gov&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;new&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;api&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;keys&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;the&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;utilities&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;No ENTREZ API key provided
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Get one via taxize&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use_entrez&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; See https&lt;span style=&#34;color:#f92672&#34;&gt;://&lt;/span&gt;ncbiinsights.ncbi.nlm.nih.gov&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;new&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;api&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;keys&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;the&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;utilities&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[1] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;poaceae%2Fpoa%2Fpoa_annua&amp;#34;&lt;/span&gt;                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;salicaceae%2Fsalix%2Fsalix_goodingii&amp;#34;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;asteraceae%2Fhelianthus%2Fhelianthus_annuus&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;a href=&#34;https://github.com/ropensci/brranching/&#34;&gt;brranching&lt;/a&gt; package uses the &lt;a href=&#34;https://github.com/ropensci/taxize/&#34;&gt;taxize&lt;/a&gt; package internally, calling it&amp;rsquo;s function
&lt;code&gt;taxize::tax_name()&lt;/code&gt;. The &lt;code&gt;taxize::tax_name()&lt;/code&gt; function throws useful messages to the user
if their NCBI Entrez API key is not found, and gives them instructions on how to find it.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I&rsquo;m sure there&rsquo;s already a way to do this, but here goes. OR maybe this is an
anti-pattern. Either way, this is me, asking the stupid question.</p>
<p>I ran into this a few hours ago:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">Sys.unsetenv</span>(<span style="color:#e6db74">&#34;ENTREZ_KEY&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(brranching)
</span></span><span style="display:flex;"><span>mynames <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;Poa annua&#34;</span>, <span style="color:#e6db74">&#34;Salix goodingii&#34;</span>, <span style="color:#e6db74">&#34;Helianthus annuus&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">phylomatic_names</span>(taxa <span style="color:#f92672">=</span> mynames, format<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;rsubmit&#39;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>No ENTREZ API key provided
</span></span><span style="display:flex;"><span> Get one via taxize<span style="color:#f92672">::</span><span style="color:#a6e22e">use_entrez</span>()
</span></span><span style="display:flex;"><span> See https<span style="color:#f92672">://</span>ncbiinsights.ncbi.nlm.nih.gov<span style="color:#f92672">/</span><span style="color:#ae81ff">2017</span><span style="color:#f92672">/</span><span style="color:#ae81ff">11</span><span style="color:#f92672">/</span><span style="color:#ae81ff">02</span><span style="color:#f92672">/</span>new<span style="color:#f92672">-</span>api<span style="color:#f92672">-</span>keys<span style="color:#f92672">-</span><span style="color:#66d9ef">for</span><span style="color:#f92672">-</span>the<span style="color:#f92672">-</span>e<span style="color:#f92672">-</span>utilities<span style="color:#f92672">/</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>No ENTREZ API key provided
</span></span><span style="display:flex;"><span> Get one via taxize<span style="color:#f92672">::</span><span style="color:#a6e22e">use_entrez</span>()
</span></span><span style="display:flex;"><span> See https<span style="color:#f92672">://</span>ncbiinsights.ncbi.nlm.nih.gov<span style="color:#f92672">/</span><span style="color:#ae81ff">2017</span><span style="color:#f92672">/</span><span style="color:#ae81ff">11</span><span style="color:#f92672">/</span><span style="color:#ae81ff">02</span><span style="color:#f92672">/</span>new<span style="color:#f92672">-</span>api<span style="color:#f92672">-</span>keys<span style="color:#f92672">-</span><span style="color:#66d9ef">for</span><span style="color:#f92672">-</span>the<span style="color:#f92672">-</span>e<span style="color:#f92672">-</span>utilities<span style="color:#f92672">/</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>No ENTREZ API key provided
</span></span><span style="display:flex;"><span> Get one via taxize<span style="color:#f92672">::</span><span style="color:#a6e22e">use_entrez</span>()
</span></span><span style="display:flex;"><span> See https<span style="color:#f92672">://</span>ncbiinsights.ncbi.nlm.nih.gov<span style="color:#f92672">/</span><span style="color:#ae81ff">2017</span><span style="color:#f92672">/</span><span style="color:#ae81ff">11</span><span style="color:#f92672">/</span><span style="color:#ae81ff">02</span><span style="color:#f92672">/</span>new<span style="color:#f92672">-</span>api<span style="color:#f92672">-</span>keys<span style="color:#f92672">-</span><span style="color:#66d9ef">for</span><span style="color:#f92672">-</span>the<span style="color:#f92672">-</span>e<span style="color:#f92672">-</span>utilities<span style="color:#f92672">/</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;poaceae%2Fpoa%2Fpoa_annua&#34;</span>                   <span style="color:#e6db74">&#34;salicaceae%2Fsalix%2Fsalix_goodingii&#34;</span>        <span style="color:#e6db74">&#34;asteraceae%2Fhelianthus%2Fhelianthus_annuus&#34;</span>
</span></span></code></pre></div><p>The <a href="https://github.com/ropensci/brranching/">brranching</a> package uses the <a href="https://github.com/ropensci/taxize/">taxize</a> package internally, calling it&rsquo;s function
<code>taxize::tax_name()</code>. The <code>taxize::tax_name()</code> function throws useful messages to the user
if their NCBI Entrez API key is not found, and gives them instructions on how to find it.</p>
<p>However, the user does not have to get an API key. If they don&rsquo;t they then get subjected
to lots of repeats of the same message.</p>
<p>I wondered if there&rsquo;s anything that could be done about this. That is, if the same
message is going to be thrown that was already thrown within a function call, just skip
additional messages that are the same.</p>
<p>There is of course <code>suppressMessages()</code> for messages, but in package development if you
do want a user to see a message, you don&rsquo;t want to suppress messages. <code>suppressMessages</code>
is too blunt of an instrument for this use case.</p>
<h2 id="the-code">the code</h2>
<p><code>with_mssgs()</code> captures values and messages, suppressing the message</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>with_mssgs <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(expr) {
</span></span><span style="display:flex;"><span>  my_mssgs <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">NULL</span>
</span></span><span style="display:flex;"><span>  w_handler <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(w) {
</span></span><span style="display:flex;"><span>    my_mssgs <span style="color:#f92672">&lt;&lt;-</span> <span style="color:#a6e22e">c</span>(my_mssgs, <span style="color:#a6e22e">list</span>(w))
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">invokeRestart</span>(<span style="color:#e6db74">&#34;muffleMessage&#34;</span>)
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  val <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">withCallingHandlers</span>(expr, message <span style="color:#f92672">=</span> w_handler)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">list</span>(value <span style="color:#f92672">=</span> val, messages <span style="color:#f92672">=</span> my_mssgs)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><code>MessageKeeper</code> is a little <a href="https://cran.rstudio.com/web/packages/R6/">R6</a> class to handle messages, matching, and
simple checks to see if messages have been used or not.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(R6)
</span></span><span style="display:flex;"><span>MessageKeeper <span style="color:#f92672">&lt;-</span> R6<span style="color:#f92672">::</span><span style="color:#a6e22e">R6Class</span>(<span style="color:#e6db74">&#34;MessageKeeper&#34;</span>,
</span></span><span style="display:flex;"><span>  public <span style="color:#f92672">=</span> <span style="color:#a6e22e">list</span>(
</span></span><span style="display:flex;"><span>    bucket <span style="color:#f92672">=</span> <span style="color:#66d9ef">NULL</span>,
</span></span><span style="display:flex;"><span>    print <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(x, <span style="color:#66d9ef">...</span>) {
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">cat</span>(<span style="color:#e6db74">&#39;MessageKeeper&#39;</span>, sep <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;\n&#34;</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">cat</span>(<span style="color:#a6e22e">paste0</span>(<span style="color:#e6db74">&#39; messages: &#39;</span>, <span style="color:#a6e22e">length</span>(self<span style="color:#f92672">$</span>bucket)))
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">length</span>(self<span style="color:#f92672">$</span>bucket) <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">cat</span>(<span style="color:#e6db74">&#34;\n&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> (i <span style="color:#66d9ef">in</span> self<span style="color:#f92672">$</span>bucket) {
</span></span><span style="display:flex;"><span>          <span style="color:#a6e22e">cat</span>(<span style="color:#a6e22e">paste0</span>(<span style="color:#e6db74">&#34;  &#34;</span>, <span style="color:#a6e22e">substring</span>(i, <span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">50</span>)))
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    add <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>      self<span style="color:#f92672">$</span>bucket <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(self<span style="color:#f92672">$</span>bucket, <span style="color:#a6e22e">list</span>(x))
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">invisible</span>(self)
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    remove <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>() {
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">if</span> (self<span style="color:#f92672">$</span><span style="color:#a6e22e">length</span>() <span style="color:#f92672">==</span> <span style="color:#ae81ff">0</span>) <span style="color:#66d9ef">return</span>(<span style="color:#66d9ef">NULL</span>)
</span></span><span style="display:flex;"><span>      head <span style="color:#f92672">&lt;-</span> self<span style="color:#f92672">$</span>bucket[[1]]
</span></span><span style="display:flex;"><span>      self<span style="color:#f92672">$</span>bucket <span style="color:#f92672">&lt;-</span> self<span style="color:#f92672">$</span>bucket[<span style="color:#ae81ff">-1</span>]
</span></span><span style="display:flex;"><span>      head
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    purge <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>() {
</span></span><span style="display:flex;"><span>      self<span style="color:#f92672">$</span>bucket <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">NULL</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    thrown_already <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>      x <span style="color:#f92672">%in%</span> self<span style="color:#f92672">$</span>bucket
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    not_thrown_yet <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">!</span>self<span style="color:#f92672">$</span><span style="color:#a6e22e">thrown_already</span>(x)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  )
</span></span><span style="display:flex;"><span>)
</span></span></code></pre></div><p>MessageKeeper examples</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>mssger <span style="color:#f92672">&lt;-</span> MessageKeeper<span style="color:#f92672">$</span><span style="color:#a6e22e">new</span>()
</span></span><span style="display:flex;"><span>mssger
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; MessageKeeper</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  messages: 0</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">add</span>(<span style="color:#e6db74">&#34;one&#34;</span>)
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">add</span>(<span style="color:#e6db74">&#34;two&#34;</span>)
</span></span><span style="display:flex;"><span>mssger
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; MessageKeeper</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  messages: 2</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;   one  two</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">thrown_already</span>(<span style="color:#e6db74">&#34;one&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">thrown_already</span>(<span style="color:#e6db74">&#34;bears&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] FALSE</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">not_thrown_yet</span>(<span style="color:#e6db74">&#34;bears&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">purge</span>()
</span></span></code></pre></div><p><code>handle_mssgs()</code> is a function you wrap your target function in to
handle the messages</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>handle_mssgs <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(expr) {
</span></span><span style="display:flex;"><span>  res <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">with_mssgs</span>(expr)
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">is.null</span>(res<span style="color:#f92672">$</span>messages)) {
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># if not thrown yet, add to bucket and throw it</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (my_mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">not_thrown_yet</span>(res<span style="color:#f92672">$</span>messages[[1]]<span style="color:#f92672">$</span>message)) {
</span></span><span style="display:flex;"><span>      my_mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">add</span>(res<span style="color:#f92672">$</span>messages[[1]]<span style="color:#f92672">$</span>message)
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">message</span>(res<span style="color:#f92672">$</span>messages[[1]]<span style="color:#f92672">$</span>message)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span>(res<span style="color:#f92672">$</span>value)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Set up the message keeper</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>my_mssger <span style="color:#f92672">&lt;-</span> MessageKeeper<span style="color:#f92672">$</span><span style="color:#a6e22e">new</span>()
</span></span></code></pre></div><p><code>squared()</code> squares a numeric value and returns it, throwing a message if
it&rsquo;s greater than 20</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>squared <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">stopifnot</span>(<span style="color:#a6e22e">is.numeric</span>(x))
</span></span><span style="display:flex;"><span>  y <span style="color:#f92672">&lt;-</span> x^2
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> (y <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">20</span>) <span style="color:#a6e22e">message</span>(<span style="color:#e6db74">&#34;woops, &gt; than 20! check your numbers&#34;</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span>(y)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><code>foo()</code> runs any vector of numbers through <code>squared()</code> using <code>vapply()</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>foo <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">vapply</span>(x, <span style="color:#66d9ef">function</span>(z) <span style="color:#a6e22e">squared</span>(z), <span style="color:#a6e22e">numeric</span>(<span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><code>bar()</code> does the same, but uses our MessageKeeper thingy</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>bar <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  <span style="color:#75715e"># tear down on exit</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">on.exit</span>(my_mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">purge</span>())
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">vapply</span>(x, <span style="color:#66d9ef">function</span>(z) <span style="color:#a6e22e">handle_mssgs</span>(<span style="color:#a6e22e">squared</span>(z)), <span style="color:#a6e22e">numeric</span>(<span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><code>foo()</code> annoyingly throws a message for every instance possible</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">foo</span>(<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  [1]   1   4   9  16  25  36  49  64  81 100 121 144 169 196 225 256 289</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [18] 324 361 400</span>
</span></span></code></pre></div><p>while <code>bar()</code> only throws the message once</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">bar</span>(<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  [1]   1   4   9  16  25  36  49  64  81 100 121 144 169 196 225 256 289</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [18] 324 361 400</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>limiting dependencies in R package development</title>
      <link>http://localhost:1313/2018/10/limiting-dependencies/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/10/limiting-dependencies/</guid>
      <description>&lt;p&gt;The longer you do anything, the more preferences you may develop for that thing. One of these things is making R packages.&lt;/p&gt;
&lt;p&gt;One preference I&amp;rsquo;ve developed is in limiting package dependencies - or at least limiting to the least painful dependencies - in the packages I maintain. Ideally, if a base R solution can be done then do it that way. Everybody has base R packages if they are using R, so you can&amp;rsquo;t fail there, at least on package installation.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>The longer you do anything, the more preferences you may develop for that thing. One of these things is making R packages.</p>
<p>One preference I&rsquo;ve developed is in limiting package dependencies - or at least limiting to the least painful dependencies - in the packages I maintain. Ideally, if a base R solution can be done then do it that way. Everybody has base R packages if they are using R, so you can&rsquo;t fail there, at least on package installation.</p>
<p>This is largely not about trusting individual packages (<a href="https://simplystatistics.org/posts/2015-11-06-how-i-decide-when-to-trust-an-r-package/">cf. Jeff Leek&rsquo;s post</a>), but trust does play a role in deciding which packages to use (see <em>choosing among packages that do the same thing</em> below).</p>
<h3 id="why">why?</h3>
<p>There&rsquo;s sure to be different opinions on this, but this is why I defend this hill:</p>
<ul>
<li>Why introduce more complexity if it can be avoided?</li>
<li>It&rsquo;s one more thing out of your control. sure, in a perfect world package API&rsquo;s never break, at least after a certain version (v1 or so), but we can&rsquo;t depend on that.</li>
<li>Rolling your own solution for a problem (aka function/class/etc.) means its completely under your control</li>
<li>There&rsquo;s a lot of great packages out there. However, in my opinion, many packages, including many of my own, are targeted at interactive users, not necessarily optimizing for other packages to use. So even though a package may do X really well, you can also do X on your own if it&rsquo;s simple enough.</li>
</ul>
<h3 id="base-r-solutions">base R solutions</h3>
<p>Some examples of base R solutions I like to use rather than using an off the shelf package:</p>
<ul>
<li>Remove <code>NULL</code> elements from a list. The function <code>function(l) Filter(Negate(is.null), l)</code> is stolen from <code>plyr::compact</code> originally. I include it as a utility function in many of my packages. It&rsquo;s simple base R stuff. Easy peasy.</li>
<li>Extract string form another string based on a pattern. The function <code>function(x, y) regmatches(x, regexpr(y, x))</code> is what <code>stringr::str_extract</code> used to do before it moved to wrapping <code>stringi</code> functions. I like the pattern of the input first, and your pattern second, but don&rsquo;t want to import a huge dependency (<code>stringi</code>) if I know i just need a simple string extraction.</li>
<li>Infix function <code>%||%</code>. originally saw this in <code>dplyr</code>, but now has left that package. the function: <code>function(x, y) if (is.null(x) || length(x) == 0) y else x</code>. It provides an elegant solution of a in place defined default value for when you can&rsquo;t be certain of the result. It&rsquo;s a very brief function, so no need to import a package just for this function.</li>
<li>Check that a parameter input is of the right type. R doesn&rsquo;t have type checking like some other languages. we can do it internally within the package though. There are packages to do this (check out <a href="https://github.com/ropensci/assertr">assertr</a>), but instead of importing a package, I do something like the below:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>assert <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span> (x, y) {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">is.null</span>(x)) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">inherits</span>(x, y)) {
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">stop</span>(<span style="color:#a6e22e">deparse</span>(<span style="color:#a6e22e">substitute</span>(x)), <span style="color:#e6db74">&#34; must be of class &#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#a6e22e">paste0</span>(y, collapse <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;, &#34;</span>), call. <span style="color:#f92672">=</span> <span style="color:#66d9ef">FALSE</span>)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>It seems simple enough that I don&rsquo;t think importing a package is warranted.</p>
<h3 id="choosing-among-packages-that-do-the-same-thing">choosing among packages that do the same thing</h3>
<ul>
<li>I often need to combine many rows/lists into a data.frame in my packages. <code>dplyr::bind_rows</code> and <code>data.table::rbindlist</code> do this (there&rsquo;s probably others too). I&rsquo;ve found that <code>data.table</code> is a slightly/somewhat easier dependency WRT installation, so I commonly use the below function for binding named lists into rows of a <code>data.frame</code>, with the optional conversion to a <code>tbl_df</code>.</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  tibble<span style="color:#f92672">::</span><span style="color:#a6e22e">as_tibble</span>((x <span style="color:#f92672">&lt;-</span> data.table<span style="color:#f92672">::</span><span style="color:#a6e22e">setDF</span>(
</span></span><span style="display:flex;"><span>    data.table<span style="color:#f92672">::</span><span style="color:#a6e22e">rbindlist</span>(x, use.names <span style="color:#f92672">=</span> <span style="color:#66d9ef">TRUE</span>, fill <span style="color:#f92672">=</span> <span style="color:#66d9ef">TRUE</span>, idcol <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;id&#34;</span>))
</span></span><span style="display:flex;"><span>  ))
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="other-bits">other bits</h3>
<ul>
<li><a href="https://github.com/jimhester">Jim Hester</a> did a presentation on the <a href="https://github.com/tidyverse/glue">glue</a> package: <a href="https://rawgit.com/jimhester/presentations/master/2018_07_13-Glue_strings_to_data_with_glue/2018_03_28-Glue_string_to_data_with_glue.html#/glue-is-for-packages">Glue Strings to Data with Glue</a> - and emphasized on one slide that <code>glue</code> is for packages because it has zero dependencies, is customizable, and fast - all things you want in a dependency in your own package.</li>
<li>As I was wrapping up this post I found a few papers:
<ul>
<li>Claes et al. <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> found that &ldquo;occurrence of errors in CRAN packages over a period of three months &hellip; resulted mostly from updates in the packages’ dependencies &hellip;&rdquo;</li>
<li>In another paper Plakidas et al. <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> extend the previous finding and say &ldquo;&hellip; this potentially implies a heavy workload for package maintainers when they depend on a package that is frequently updated&rdquo;</li>
<li>These statements mirror my hesitation to depend on other packages if in fact X task can be done internally</li>
</ul>
</li>
</ul>
<ul>
<li>Contributors: if you do write your own internal functions, or borrow from elsewhere, new contributors to your package may need to understand your internal function instead of an imported function from another package - but the plus side is if the function resides in your own package you can change it easily.</li>
<li>Rapid development phase: often package development involves a rapid change phase where you want to get to a working prototype first, then refine later. During this development phase it makes sense to use off the shelf packages to get things working. Later, you may want to swap out packages or write your own R or compiled code to speed things up, or introduce different behavior, etc.</li>
</ul>
<h3 id="but">but</h3>
<p>There are of course good reasons to just import the package that&rsquo;s best at doing X or Y and leave it at that. Sometimes I do that too. I don&rsquo;t always stay on my hill.</p>
<p>And: Maybe I&rsquo;m totally wrong here? Maybe I should be at all times using other packages to do X, Y, and Z? Despite the dozens of packages I maintain, I am fully aware I could be completely wrong here.</p>
<p>thanks to <a href="https://masalmon.eu/">Maëlle Salmon</a> for helpful advice on this post!</p>
<h3 id="references">references</h3>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Claes, M., Mens, T., &amp; Grosjean, P. (2014). On the maintainability of CRAN packages. 2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering (CSMR-WCRE). <a href="https://doi.org/10.1109/csmr-wcre.2014.6747183">https://doi.org/10.1109/csmr-wcre.2014.6747183</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>Plakidas, K., Schall, D., &amp; Zdun, U. (2017). Evolution of the R software ecosystem: Metrics, relationships, and their impact on qualities. Journal of Systems and Software, 132, 119–146. <a href="https://doi.org/10.1016/j.jss.2017.06.095">https://doi.org/10.1016/j.jss.2017.06.095</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Balancing user friendliness and code fragility</title>
      <link>http://localhost:1313/2018/07/friendliness-fragility/</link>
      <pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/07/friendliness-fragility/</guid>
      <description>&lt;p&gt;I occasionally think about these various topics and ping back and forth between them, thinking I&amp;rsquo;ve got to make a package more user friendly, then back to thinking oh, I really should make this package easier to maintain, but what if that makes it less user friendly?&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve wanted to get these thoughts written down for a while now, so here goes.&lt;/p&gt;
&lt;h2 id=&#34;user-friendliness-and-code-fragility&#34;&gt;User friendliness and code fragility&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s an unassailable good to make your code more user friendly. There&amp;rsquo;s no point of making your package harder to use unless you really don&amp;rsquo;t want people using it.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I occasionally think about these various topics and ping back and forth between them, thinking I&rsquo;ve got to make a package more user friendly, then back to thinking oh, I really should make this package easier to maintain, but what if that makes it less user friendly?</p>
<p>I&rsquo;ve wanted to get these thoughts written down for a while now, so here goes.</p>
<h2 id="user-friendliness-and-code-fragility">User friendliness and code fragility</h2>
<p>It&rsquo;s an unassailable good to make your code more user friendly. There&rsquo;s no point of making your package harder to use unless you really don&rsquo;t want people using it.</p>
<p>Having said that, can a user friendly API come at the cost of code simplicity/maintainability?</p>
<p>An example of user friendly code vs. not user friendly code is: Let&rsquo;s say you have a function <code>foo()</code>. There&rsquo;s a lot of things you can do to make the function user friendly, e.g., the function:</p>
<ul>
<li>errors/returns as early as possible</li>
<li>has good documentation</li>
<li>has well named parameters</li>
<li>returns easy to understand output (see also good docs)</li>
<li>handles complexity sufficiently so the user doesn&rsquo;t have to</li>
</ul>
<p>This is all well and good, and most of the points above don&rsquo;t have to trade off with making code more complex/harder to maintain. However, the last point does I think.</p>
<p>That is, handling complexity for the user is a good thing, BUT it makes for more code and probably more complex code. I&rsquo;ll highlight one particular example of this that I often deal with.</p>
<h2 id="pagination">Pagination</h2>
<p>I make many packages that interact with web APIs, many of which have pagination. Pagination is just as it sounds: you don&rsquo;t get back all possible results for your query but instead you get back a certain number of results, then you have to request the next set, and so on. This helps lighten the load on the server delivering the data. And pagination is useful for users so you can get a sense of what the data looks like without have to wait for all the data, which in some cases can be quite large.</p>
<p>Here&rsquo;s the question: Do you let the user handle pagination themselves with parameters to a function <code>foo()</code>? Or do you handle pagination internally within the function <code>foo()</code> with the user just stating how many results they want? The former scenario means that if the user wants 30 results they do:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">foo</span>(limit <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>, page <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">foo</span>(limit <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>, page <span style="color:#f92672">=</span> <span style="color:#ae81ff">2</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">foo</span>(limit <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>, page <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e"># ... and so on</span>
</span></span></code></pre></div><p>While the latter means:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">foo</span>(limit <span style="color:#f92672">=</span> <span style="color:#ae81ff">30</span>)
</span></span></code></pre></div><p>The second example is definitely easier for the user. There are still three HTTP requests being made, so probably the code runs no faster, but it&rsquo;s easier from a user standpoint.</p>
<p>Here&rsquo;s how <code>foo()</code> might handle the paging internally:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>myGET <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  conn <span style="color:#f92672">&lt;-</span> crul<span style="color:#f92672">::</span>HttpClient<span style="color:#f92672">$</span><span style="color:#a6e22e">new</span>(<span style="color:#e6db74">&#34;https://someurl.com&#34;</span>)
</span></span><span style="display:flex;"><span>  res <span style="color:#f92672">&lt;-</span> conn<span style="color:#f92672">$</span><span style="color:#a6e22e">get</span>()
</span></span><span style="display:flex;"><span>  txt <span style="color:#f92672">&lt;-</span> res<span style="color:#f92672">$</span><span style="color:#a6e22e">parse</span>(encoding <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;UTF-8&#34;</span>)
</span></span><span style="display:flex;"><span>  jsonlite<span style="color:#f92672">::</span><span style="color:#a6e22e">fromJSON</span>(txt)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>foo <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(limit <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>) {
</span></span><span style="display:flex;"><span>  limit <span style="color:#f92672">&lt;-</span> plyr<span style="color:#f92672">::</span><span style="color:#a6e22e">round_any</span>(limit, <span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>  out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">list</span>()
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (i <span style="color:#66d9ef">in</span> <span style="color:#a6e22e">seq</span>(limit <span style="color:#f92672">/</span> <span style="color:#ae81ff">10</span>)) out[[i]] <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">myGET</span>(limit, page <span style="color:#f92672">=</span> i)
</span></span><span style="display:flex;"><span>  df <span style="color:#f92672">&lt;-</span> dplyr<span style="color:#f92672">::</span><span style="color:#a6e22e">bind_rows</span>(out)
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span>(df)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><blockquote>
<p>This is psuedocode, so you can&rsquo;t run this.</p>
</blockquote>
<p>In general I like to return data.frame&rsquo;s to users whenever possible as I think most users are most familiar with data.frame&rsquo;s.</p>
<p>In the above example we need to do a few things when dealing with pagination:</p>
<ul>
<li>sort out how many requests to make. the above doesn&rsquo;t yet check that the <code>limit</code> value is a numeric or integer, and there&rsquo;s all kinds of edge cases depending on what number is given by the user with respect to pagination</li>
<li>make each http request. I used a for loop, but anything similar can be used. one needs to decide how to handle errors if you&rsquo;re doing multiple requests. do you stop with an error if there&rsquo;s an error in one of the requests, or do you catch that and proceed? If you do catch it how do you let the user know, or do you just remove that error from results?</li>
<li>combine results into a single output (data.frame most likely/ideally). we want the user to get the same results back whether they request one page of results or many, so we need to do the work to make sure the output looks the same. This step also introduces possible pain points in that any result record can have novel things in it that cause your result combining code to error. Do you do a minimal combination approach (e.g. let <code>jsonlite::fromJSON</code> convert to list/data.frame&rsquo;s where possible; but this means that there can be nested lists in data.frame&rsquo;s, which many users do not like); or do you roll your own bespoke data munging/combination code to make sure the output data.frame is really easy to use with no nested lists, etc.?  If you do the latter that will most likely be slower, but will be better output for the user. However, maybe most users want to combine the data on their own, so perhaps you should take up as little time as possible parsing/munging data so the user has to wait less time.</li>
</ul>
<p>The overall message here is that there&rsquo;s many points throughout this process that require decisions to be made with respect to how much complexity you&rsquo;d like to take care of yourself as the developer vs. how much you&rsquo;d like to leave up to the user.</p>
<p>With complexity inside the function, there&rsquo;s more to maintain and more possible bugs, but it&rsquo;s easier for the user.</p>
<p>With complexity exposed to the user, and simpler code inside the function, each user has to sort out how to work with the output and/or do the pagination (or whatever it is) themselves. But with less complexity inside the function, there will likely be fewer bugs.</p>
<blockquote>
<p>Note: i&rsquo;ve been trying to make pagination with web APIs easier, check out the Paginator helper in the crul package <a href="https://github.com/ropensci/crul/blob/master/R/paginator.R">https://github.com/ropensci/crul/blob/master/R/paginator.R</a></p>
</blockquote>
<h2 id="so-what">So what?</h2>
<p>Perhaps others have figured this out and I&rsquo;m the only one struggling with this? I&rsquo;m sure I&rsquo;ll continue to go back and forth on this pendulum. Would love to know how others think about this.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Exploring git commits with git2r</title>
      <link>http://localhost:1313/2018/02/git-commits/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/02/git-commits/</guid>
      <description>&lt;p&gt;In rOpenSci - as in presumably most open source projects - we want the entire project to be sustainable, but also each individual software project to be sustainable.&lt;/p&gt;
&lt;p&gt;A big part of each software project (aka R package in this case) being sustainable is the people making it, particularly whether:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how many contributors a project has, and&lt;/li&gt;
&lt;li&gt;how contributions are spread across contibutors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are discussions going on about how to increase contributors to any given project. But the first thing to do is to do an assesment of where you&amp;rsquo;re at. One way to do that is visualization.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In rOpenSci - as in presumably most open source projects - we want the entire project to be sustainable, but also each individual software project to be sustainable.</p>
<p>A big part of each software project (aka R package in this case) being sustainable is the people making it, particularly whether:</p>
<ul>
<li>how many contributors a project has, and</li>
<li>how contributions are spread across contibutors</li>
</ul>
<p>There are discussions going on about how to increase contributors to any given project. But the first thing to do is to do an assesment of where you&rsquo;re at. One way to do that is visualization.</p>
<p>We can look at a sort of proxy of contributions, git commits, to get at this. This isn&rsquo;t perfect because everyone differs in their &ldquo;commit style&rdquo;, where some make a lot of changes in a single commit, while others spread changes across commits. (one could look at additions/deletions of actual code for example)</p>
<p>In terms of where to get data, one could get it from the API of any of Github, Gitlab, Bitbucket, or using whatever local git repos you have on your machine. rOpenSci has a nice git R client called <a href="https://github.com/ropensci/git2r">git2r</a> maintained by <a href="https://github.com/stewid">Stefan Widgren</a>. I have a lot of rOpenSci&rsquo;s R packages locally on my machine, though not all of them.</p>
<p>Below is a first attempt at starting to look at the distribution of commits across rOpenSci packages. The visualization is meant to get a quick look across packages in terms of a) number of contributors to a package, and b) distribution of commits across each contributor within a package.</p>
<h2 id="the-actual-work">the actual work</h2>
<p>Load libraries</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(git2r)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(ggplot2)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(dplyr)
</span></span></code></pre></div><p>Get directory paths. I was interested in specific packages, so I made a text file of certain repos, rather than getting all repos in my <code>github/ropensci</code> folder on my machine</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>dirs <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">readLines</span>(<span style="color:#e6db74">&#34;dirs.txt&#34;</span>)
</span></span><span style="display:flex;"><span>paths <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">file.path</span>(<span style="color:#a6e22e">path.expand</span>(<span style="color:#e6db74">&#34;~/github/ropensci&#34;</span>), dirs)
</span></span></code></pre></div><p>Function to get data.frame of commit authors</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>make_authors_table <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {  
</span></span><span style="display:flex;"><span>  repo <span style="color:#f92672">&lt;-</span> git2r<span style="color:#f92672">::</span><span style="color:#a6e22e">repository</span>(x)
</span></span><span style="display:flex;"><span>  res <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">commits</span>(repo)
</span></span><span style="display:flex;"><span>  auths <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">vapply</span>(res, <span style="color:#66d9ef">function</span>(z) z<span style="color:#f92672">@</span>author<span style="color:#f92672">@</span>name, <span style="color:#a6e22e">character</span>(<span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>  tmp <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(<span style="color:#a6e22e">table</span>(auths), stringsAsFactors <span style="color:#f92672">=</span> <span style="color:#66d9ef">FALSE</span>)
</span></span><span style="display:flex;"><span>  tmp<span style="color:#f92672">$</span>auths <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.character</span>(tmp<span style="color:#f92672">$</span>auths)
</span></span><span style="display:flex;"><span>  tmp
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Get commit authors for each directory</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>dat <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">lapply</span>(paths, make_authors_table)
</span></span><span style="display:flex;"><span>dat <span style="color:#f92672">&lt;-</span> stats<span style="color:#f92672">::</span><span style="color:#a6e22e">setNames</span>(dat, <span style="color:#a6e22e">basename</span>(paths))
</span></span></code></pre></div><p>Remove those with no rows (i.e., commits)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>dat <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">Filter</span>(<span style="color:#66d9ef">function</span>(z) <span style="color:#a6e22e">NROW</span>(z) <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>, dat)
</span></span></code></pre></div><p>Since person names for commits can vary depending on where the person makes the commit from (a git GUI vs. cli vs. Github web interface, etc.), I made a little table for deduping names, and cleaned up each package&rsquo;s commit summary.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>dups <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">read.csv</span>(<span style="color:#e6db74">&#34;github_dups.csv&#34;</span>, stringsAsFactors<span style="color:#f92672">=</span><span style="color:#66d9ef">FALSE</span>)
</span></span><span style="display:flex;"><span>dups<span style="color:#f92672">$</span>duplicates <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">vapply</span>(dups<span style="color:#f92672">$</span>duplicates, <span style="color:#66d9ef">function</span>(z) <span style="color:#a6e22e">gsub</span>(<span style="color:#e6db74">&#34;,&#34;</span>, <span style="color:#e6db74">&#34;|&#34;</span>, z), <span style="color:#a6e22e">character</span>(<span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>dat <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">lapply</span>(dat, <span style="color:#66d9ef">function</span>(z) {
</span></span><span style="display:flex;"><span>  z<span style="color:#f92672">$</span>auths <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">unname</span>(<span style="color:#a6e22e">vapply</span>(z<span style="color:#f92672">$</span>auths, <span style="color:#66d9ef">function</span>(w) {
</span></span><span style="display:flex;"><span>      mtch <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">grepl</span>(w, dups<span style="color:#f92672">$</span>duplicates)
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">any</span>(mtch)) dups<span style="color:#f92672">$</span>name_to_use[mtch] <span style="color:#66d9ef">else</span> w
</span></span><span style="display:flex;"><span>  }, <span style="color:#a6e22e">character</span>(<span style="color:#ae81ff">1</span>)))
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">aggregate</span>(Freq <span style="color:#f92672">~</span> auths, data <span style="color:#f92672">=</span> z, FUN <span style="color:#f92672">=</span> sum)
</span></span><span style="display:flex;"><span>})
</span></span></code></pre></div><p>Reorder each data.frame by number of commits (the <code>Freq</code> column)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>dat <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">lapply</span>(dat, <span style="color:#66d9ef">function</span>(x) dplyr<span style="color:#f92672">::</span><span style="color:#a6e22e">arrange</span>(x, Freq))
</span></span></code></pre></div><p>Combine into single data.frame, and make a column <code>order</code> so ggplot doesn&rsquo;t mess up our ordering in each facet</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>df <span style="color:#f92672">&lt;-</span> dplyr<span style="color:#f92672">::</span><span style="color:#a6e22e">bind_rows</span>(dat, .id <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;id&#39;</span>)
</span></span><span style="display:flex;"><span>df<span style="color:#f92672">$</span>order <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">seq_len</span>(<span style="color:#a6e22e">NROW</span>(df))
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">head</span>(df)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;      id         auths Freq order</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; 1 agent        jeroen    8     1</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; 2 ALA4R   Dave Martin    1     2</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; 3 ALA4R        mbohun    1     3</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; 4 ALA4R rforge rforge    1     4</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; 5 ALA4R   Tom Saleeba    3     5</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; 6 ALA4R       Tasilee   53     6</span>
</span></span></code></pre></div><p>Make the plot</p>
<ul>
<li>Each panel is an ropensci package</li>
<li>Each dot is a person for the most part (I tried to remove duplicates, but there&rsquo;s still some)</li>
<li>Dots are arranged from less to more commits (from left to right)</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">ggplot</span>(df, <span style="color:#a6e22e">aes</span>(order, Freq)) <span style="color:#f92672">+</span> 
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">geom_point</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.5</span>) <span style="color:#f92672">+</span> 
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">facet_wrap</span>(<span style="color:#f92672">~</span> id, scales <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;free&#34;</span>) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">theme</span>(
</span></span><span style="display:flex;"><span>    axis.title.x<span style="color:#f92672">=</span><span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    axis.text.x<span style="color:#f92672">=</span><span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    axis.ticks.x<span style="color:#f92672">=</span><span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    axis.title.y<span style="color:#f92672">=</span><span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    axis.text.y<span style="color:#f92672">=</span><span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    axis.ticks.y<span style="color:#f92672">=</span><span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    panel.grid.major <span style="color:#f92672">=</span> <span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    panel.grid.minor <span style="color:#f92672">=</span> <span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    strip.background <span style="color:#f92672">=</span> <span style="color:#a6e22e">element_blank</span>(),
</span></span><span style="display:flex;"><span>    strip.text.x <span style="color:#f92672">=</span> <span style="color:#a6e22e">element_blank</span>()
</span></span><span style="display:flex;"><span>  )
</span></span></code></pre></div><p><img loading="lazy" src="https://i.imgur.com/LMpbt5K.png"></p>
<p>Curious what the packages are? Check out <a href="https://i.imgur.com/5ZfHJXq.png">the same plot but with facet titles with package names</a>.</p>
<h2 id="some-observations">Some observations</h2>
<ul>
<li>There&rsquo;s quite a few packages with a single contributor. These could be targeted first possibly for getting at least one additional contrib.</li>
<li>Of those that have more than one contributor, there&rsquo;s often a large jump between the person with the most commits and the next most. We could target making that a smoother transition - that is, less of a jump between the main contributor and the others</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Metrics for open source projects</title>
      <link>http://localhost:1313/2015/10/open-source-metrics/</link>
      <pubDate>Mon, 19 Oct 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/10/open-source-metrics/</guid>
      <description>&lt;p&gt;Measuring use of open source software isn&amp;rsquo;t always straightforward. The problem is especially acute for software targeted largely at academia, where usage is not measured just by software downloads, but also by citations.&lt;/p&gt;
&lt;p&gt;Citations are a well-known pain point because the citation graph is privately held by iron doors (e.g., &lt;a href=&#34;https://www.scopus.com/&#34;&gt;Scopus&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/&#34;&gt;Google Scholar&lt;/a&gt;). New ventures aim to open up citation data, but of course it&amp;rsquo;s an immense amount of work, and so does not come quickly.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Measuring use of open source software isn&rsquo;t always straightforward. The problem is especially acute for software targeted largely at academia, where usage is not measured just by software downloads, but also by citations.</p>
<p>Citations are a well-known pain point because the citation graph is privately held by iron doors (e.g., <a href="https://www.scopus.com/">Scopus</a>, <a href="https://scholar.google.com/">Google Scholar</a>). New ventures aim to open up citation data, but of course it&rsquo;s an immense amount of work, and so does not come quickly.</p>
<p>The following is a laundry list of metrics on software of which I am aware, and some of which I use in our <a href="https://ropensci.github.io/biweekly/">rOpenSci twice monthly updates</a>.</p>
<p>I primarily develop software for the R language, so some of the metrics are specific to R, but many are not. In addition, we (rOpenSci) don&rsquo;t develop web apps, which may bring in an additional set of metrics not covered below.</p>
<p>I organize by source instead of type of data because some sources give multiple kinds of data - I note what kinds of data they give with <!-- raw HTML omitted -->labels<!-- raw HTML omitted -->.</p>
<h2 id="cran-downloads">CRAN downloads</h2>

<span class="label label-warning">downloads</span>

<ul>
<li>Link: <a href="https://github.com/metacran/cranlogs.app">https://github.com/metacran/cranlogs.app</a></li>
<li>This is a REST API for CRAN downloads from the RStudio CRAN CDN. Note however, that the RStudio CDN is only one of many - there are other mirrors users can insall packages from, and are not included in this count. However, a significant portion of downloads probably come from the RStudio CDN.</li>
<li>Other programming languages have similar support, e.g., <a href="https://guides.rubygems.org/rubygems-org-api/">Ruby</a> and <a href="https://github.com/npm/download-counts">Node</a>.</li>
</ul>
<h2 id="lagotto">Lagotto</h2>
<p><!-- raw HTML omitted --><!-- raw HTML omitted -->citations<!-- raw HTML omitted --> <!-- raw HTML omitted -->github<!-- raw HTML omitted --> <!-- raw HTML omitted -->social-media<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<ul>
<li>Link: <a href="https://software.lagotto.io/works">https://software.lagotto.io/works</a></li>
<li>Lagotto is a Rails application, developed by <a href="https://github.com/mfenner">Martin Fenner</a>, originally designed to collect and provide article level metrics for scientific publications at Public Library of Science. It is now used by many publishers, and there are installations of Lagotto targeting <a href="https://mdc.lagotto.io/">datasets</a> and <a href="https://software.lagotto.io/works">software</a>.</li>
<li>Discussion forum: <a href="https://discuss.lagotto.io/">https://discuss.lagotto.io/</a></li>
</ul>
<h2 id="depsy">Depsy</h2>
<p><!-- raw HTML omitted --><!-- raw HTML omitted -->citations<!-- raw HTML omitted --> <!-- raw HTML omitted -->github<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<ul>
<li>Link: <a href="https://depsy.org">https://depsy.org</a></li>
<li>This is a nascent venture by the <a href="https://impactstory.org/about">ImpactStory team</a> that seeks to uncover the impact of research software. As far as I can tell, they&rsquo;ll collect usage via software downloads and citations in the literature.</li>
</ul>
<h2 id="web-site-analytics">Web Site Analytics</h2>
<p><!-- raw HTML omitted --><!-- raw HTML omitted -->page-views<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<ul>
<li>If you happen to have a website for your project, collecting analytics is a way to gauge views of the landing page, and any help/tutorial pages you may have. A good easy way to do this is a deploy a basic site on your <code>gh-pages</code> branch of your GitHub repo, and use the easily integrated Google Analytics.</li>
<li>Whatever analytics you use, in my experience this mostly brings up links from google searches and blog posts that may mention your project</li>
<li>Google Analytics beacon (for README views): <a href="https://github.com/igrigorik/ga-beacon">https://github.com/igrigorik/ga-beacon</a>. I haven&rsquo;t tried this yet, but seems promising.</li>
</ul>
<h2 id="auomated-tracking-ssnmp">Auomated tracking: SSNMP</h2>
<p><!-- raw HTML omitted --><!-- raw HTML omitted -->citations<!-- raw HTML omitted --> <!-- raw HTML omitted -->github<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<ul>
<li>Link: <a href="https://scisoft-net-map.isri.cmu.edu">https://scisoft-net-map.isri.cmu.edu</a></li>
<li>Scientific Software Network Map Project</li>
<li>This is a cool NSF funded project by Chris Bogart that tracks software usage via GitHub and citations in literature.</li>
</ul>
<h2 id="google-scholar">Google Scholar</h2>
<p><!-- raw HTML omitted --><!-- raw HTML omitted -->citations<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<ul>
<li>Link: <a href="https://scholar.google.com/">https://scholar.google.com/</a></li>
<li>Searching Google Scholar for software citations manually is fine at a small scale, but at a larger scale scraping is best. However, you&rsquo;re not legally supposed to do this, and Google will shut you down.</li>
<li>Could try using g-scholar alerts as well, especially if new citations of your work are infrequent.</li>
<li>If you have institutional access to Scopus/Web of Science, you could search those, but I don&rsquo;t push this as an option since it&rsquo;s available to so few.</li>
</ul>
<h2 id="github">GitHub</h2>
<p><!-- raw HTML omitted --><!-- raw HTML omitted -->github<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<ul>
<li>Links: <a href="https://developer.github.com/v3/">https://developer.github.com/v3/</a></li>
<li>I keep a list of rOpenSci uses found in GitHub repos at <a href="https://discuss.ropensci.org/t/use-of-some-ropensci-packages-on-github/137">https://discuss.ropensci.org/t/use-of-some-ropensci-packages-on-github/137</a></li>
<li>GitHub does collect traffic data on each repo (clones, downloads, page views), but they are not exposed in the API. I&rsquo;ve bugged them a bit about this - hopefully we&rsquo;ll be able to get that dat in their API soon.</li>
<li>Bitbucket/Gitlab - don&rsquo;t use them, but I assume they also provide some metrics via their APIs</li>
</ul>
<h2 id="other">Other</h2>
<ul>
<li>Support forums: Whether you use UserVoice, Discourse, Google Groups, Gitter, etc., depending on your viewpoint, these interactions could be counted as metrics of software usage.</li>
<li>Emails: I personally get a lot of emails asking for help with software I maintain. I imagine this is true for most software developers. Counting these could be another metric of software usage, although I never have counted mine.</li>
<li>Social media: See Lagotto above, which tracks some social media outlets.</li>
<li>Code coverage: There are many options now for code coverage, integrated with each Travis-CI build. A good option is <a href="https://codecov.io">CodeCov</a>. CodeCov gives percentage test coverage, which one could use as one measure of code quality.</li>
<li>Reviews: There isn&rsquo;t a lot of code review going on that I&rsquo;m aware of. Even if there was, I suppose this would just be a logical TRUE/FALSE.</li>
<li>Cash money y&rsquo;all: Grants/consulting income/etc. could be counted as a metric.</li>
<li>Users: If you require users to create an account or similar before getting your software, you have a sense of number of users and perhaps their demographics.</li>
</ul>
<h2 id="promising">Promising</h2>
<p>Some software metrics things on the horizon that look interesting:</p>
<ul>
<li><a href="https://geodynamics.org/cig/projects/saga/">Software Attribution for Geoscience Applications</a> (SAGA)</li>
<li>Crossref: They have <a href="https://github.com/CrossRef/rest-api-doc/blob/master/rest_api.md">a very nice API</a>, but they don&rsquo;t yet provide citation counts - but <a href="https://github.com/CrossRef/rest-api-doc/issues/46">they may soon</a>.</li>
<li><a href="https://github.com/njsmith/sempervirens">njsmith/sempervirens</a> - a prototype for <em>gathering anonymous, opt-in usage data for open scientific software</em></li>
<li><a href="https://github.com/force11/force11-scwg">Force11 Software Citation Working Group</a> - <em>&hellip;produce a consolidated set of citation principles in order to encourage broad adoption of a consistent policy for software citation across disciplines and venues</em></li>
</ul>
<h2 id="missed">Missed?</h2>
<p>I&rsquo;m sure I missed things. Let me know.</p>
]]></content:encoded>
    </item>
    <item>
      <title>One R package for all your taxonomic needs</title>
      <link>http://localhost:1313/2012/12/taxize/</link>
      <pubDate>Thu, 06 Dec 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2012/12/taxize/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;UPDATE: there were some errors in the tests for &lt;code&gt;taxize&lt;/code&gt;, so the binaries aren&amp;rsquo;t avaiable yet. You can install from source though, see below.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Getting taxonomic information for the set of species you are studying can be a pain in the ass. You have to manually type, or paste in, your species one-by-one. Or, if you are lucky, there is a web service in which you can upload a list of species. Encyclopedia of Life (EOL) has a service where you can do this &lt;a href=&#34;http://gni.globalnames.org/parsers/new&#34;&gt;here&lt;/a&gt;. But is this reproducible? No.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<blockquote>
<p>UPDATE: there were some errors in the tests for <code>taxize</code>, so the binaries aren&rsquo;t avaiable yet. You can install from source though, see below.</p>
</blockquote>
<p>Getting taxonomic information for the set of species you are studying can be a pain in the ass. You have to manually type, or paste in, your species one-by-one. Or, if you are lucky, there is a web service in which you can upload a list of species. Encyclopedia of Life (EOL) has a service where you can do this <a href="http://gni.globalnames.org/parsers/new">here</a>. But is this reproducible? No.</p>
<p>Getting your taxonomic information for your species can now be done programatically in R. Do you want to get taxonomic information from ITIS. We got that. Tropicos? We got that too. uBio? No worries, we got that. What about theplantlist.org? Yep, got that. Encyclopedia of Life? Indeed. What about getting sequence data for a taxon? Oh hell yeah, you can get sequences available for a taxon across all genes, or get all records for a taxon for a specific gene.</p>
<p>Of course this is all possible because these data providers have open APIs so that we can facilitate your computer talking to their database. Fun!</p>
<p>Why get your taxonomic data programatically? Because it&rsquo;s 1) faster than by hand in web sites/looking up in books, 2) reproducible, especially if you share your code (damnit!), and 3) you can easily mash up your new taxonomic data to get sequences to build a phylogeny, etc.</p>
<p>I&rsquo;ll give a few examples of using <code>taxize</code> based around use cases, that is, stuff someone might actually do instead of what particular functions do.</p>
<hr>
<h3 id="install-packages--you-can-get-from-cran-or-github">Install packages.  You can get from CRAN or GitHub.</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># install.packages(&#34;ritis&#34;) # uncomment if not already installed</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># install_github(&#39;taxize_&#39;, &#39;ropensci&#39;) # uncomment if not already installed</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># install.packages(&#34;taxize&#34;, type=&#34;source&#34;) # uncomment if not already installed</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(ritis)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(taxize)
</span></span></code></pre></div><hr>
<h3 id="attach-family-names-to-a-list-of-species">Attach family names to a list of species.</h3>
<h4 id="i-often-have-a-list-of-species-that-i-studied-and-simply-want-to-get-their-family-names-to-for-example-make-a-table-for-the-paper-im-writing">I often have a list of species that I studied and simply want to get their family names to, for example, make a table for the paper I&rsquo;m writing.</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># For one species</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">itis_name</span>(query <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;Poa annua&#34;</span>, get <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;family&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>Retrieving data <span style="color:#66d9ef">for</span> species <span style="color:#e6db74">&#39; Poa annua &#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;Poaceae&#34;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># For many species</span>
</span></span><span style="display:flex;"><span>species <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;Poa annua&#34;</span>, <span style="color:#e6db74">&#34;Abies procera&#34;</span>, <span style="color:#e6db74">&#34;Helianthus annuus&#34;</span>, <span style="color:#e6db74">&#34;Coffea arabica&#34;</span>)
</span></span><span style="display:flex;"><span>famnames <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">sapply</span>(species, itis_name, get <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;family&#34;</span>, USE.NAMES <span style="color:#f92672">=</span> F)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Retrieving data <span style="color:#66d9ef">for</span> species <span style="color:#e6db74">&#39; Poa annua &#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Retrieving data <span style="color:#66d9ef">for</span> species <span style="color:#e6db74">&#39; Abies procera &#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Retrieving data <span style="color:#66d9ef">for</span> species <span style="color:#e6db74">&#39; Helianthus annuus &#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Retrieving data <span style="color:#66d9ef">for</span> species <span style="color:#e6db74">&#39; Coffea arabica &#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">data.frame</span>(species <span style="color:#f92672">=</span> species, family <span style="color:#f92672">=</span> famnames)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>            species     family
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>         Poa annua    Poaceae
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>     Abies procera   Pinaceae
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span> Helianthus annuus Asteraceae
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>    Coffea arabica  Rubiaceae
</span></span></code></pre></div><hr>
<h3 id="resolve-taxonomic-names">Resolve taxonomic names.</h3>
<h4 id="this-is-a-common-use-case-for-ecologistsevolutionary-biologists-or-at-least-should-be-that-is-species-names-you-have-for-your-own-data-or-when-using-others-data-could-be-old-names---and-if-you-need-the-newest-names-for-your-species-list-how-can-you-make-this-as-painless-as-possible-you-can-query-taxonomic-data-from-many-different-sources-with-taxize">This is a common use case for ecologists/evolutionary biologists, or at least should be. That is, species names you have for your own data, or when using other&rsquo;s data, could be old names - and if you need the newest names for your species list, how can you make this as painless as possible? You can query taxonomic data from many different sources with <code>taxize</code>.</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># The iPlantCollaborative provides access via API to their taxonomic name</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># resolution service (TNRS)</span>
</span></span><span style="display:flex;"><span>mynames <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;shorea robusta&#34;</span>, <span style="color:#e6db74">&#34;pandanus patina&#34;</span>, <span style="color:#e6db74">&#34;oryza sativa&#34;</span>, <span style="color:#e6db74">&#34;durio zibethinus&#34;</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;rubus ulmifolius&#34;</span>, <span style="color:#e6db74">&#34;asclepias curassavica&#34;</span>, <span style="color:#e6db74">&#34;pistacia lentiscus&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">iplant_tnrsmatch</span>(retrieve <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;all&#34;</span>, taxnames <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;helianthus annuus&#34;</span>, <span style="color:#e6db74">&#34;acacia&#34;</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;gossypium&#34;</span>), output <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;names&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>       AcceptedName   MatchFam MatchGenus MatchScore    Accept<span style="color:#f92672">?</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span> Helianthus annuus Asteraceae Helianthus          <span style="color:#ae81ff">1</span> No opinion
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>            Acacia   Fabaceae     Acacia          <span style="color:#ae81ff">1</span> No opinion
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>                                  Acacia          <span style="color:#ae81ff">1</span> No opinion
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>         Gossypium  Malvaceae  Gossypium          <span style="color:#ae81ff">1</span> No opinion
</span></span><span style="display:flex;"><span>     SubmittedNames
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span> helianthus annuus
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>            acacia
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>            acacia
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>         gossypium
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># The global names resolver is another attempt at this, hitting many</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># different data sources</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">gnr_resolve</span>(names <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;Helianthus annuus&#34;</span>, <span style="color:#e6db74">&#34;Homo sapiens&#34;</span>), returndf <span style="color:#f92672">=</span> <span style="color:#66d9ef">TRUE</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>   data_source_id    submitted_name       name_string score
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>               <span style="color:#ae81ff">4</span> Helianthus annuus Helianthus annuus <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>              <span style="color:#ae81ff">10</span> Helianthus annuus Helianthus annuus <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>              <span style="color:#ae81ff">12</span> Helianthus annuus Helianthus annuus <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>             <span style="color:#ae81ff">110</span> Helianthus annuus Helianthus annuus <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">11</span>            <span style="color:#ae81ff">159</span> Helianthus annuus Helianthus annuus <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">13</span>            <span style="color:#ae81ff">166</span> Helianthus annuus Helianthus annuus <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">15</span>            <span style="color:#ae81ff">169</span> Helianthus annuus Helianthus annuus <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>               <span style="color:#ae81ff">4</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>              <span style="color:#ae81ff">10</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>              <span style="color:#ae81ff">12</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>             <span style="color:#ae81ff">107</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>             <span style="color:#ae81ff">122</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>            <span style="color:#ae81ff">123</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">12</span>            <span style="color:#ae81ff">159</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">14</span>            <span style="color:#ae81ff">168</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">16</span>            <span style="color:#ae81ff">169</span>      Homo sapiens      Homo sapiens <span style="color:#ae81ff">0.988</span>
</span></span><span style="display:flex;"><span>                     title
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>                     NCBI
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>                 Freebase
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>                      EOL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>     Illinois Wildflowers
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">11</span>                 CU<span style="color:#f92672">*</span>STAR
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">13</span>                   nlbif
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">15</span>           uBio NameBank
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>                     NCBI
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>                 Freebase
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>                      EOL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>                AskNature
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>                 BioPedia
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>                   AnAge
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">12</span>                 CU<span style="color:#f92672">*</span>STAR
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">14</span> Index to Organism Names
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">16</span>           uBio NameBank
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># We can hit the Plantminer API too</span>
</span></span><span style="display:flex;"><span>plants <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;Myrcia lingua&#34;</span>, <span style="color:#e6db74">&#34;Myrcia bella&#34;</span>, <span style="color:#e6db74">&#34;Ocotea pulchella&#34;</span>, <span style="color:#e6db74">&#34;Miconia&#34;</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Coffea arabica var. amarella&#34;</span>, <span style="color:#e6db74">&#34;Bleh&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">plantminer</span>(plants)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>Myrcia lingua 
</span></span><span style="display:flex;"><span>Myrcia bella 
</span></span><span style="display:flex;"><span>Ocotea pulchella 
</span></span><span style="display:flex;"><span>Miconia 
</span></span><span style="display:flex;"><span>Coffea arabica var. amarella 
</span></span><span style="display:flex;"><span>Bleh 
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>              fam   genus                    sp             author
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>       Myrtaceae  Myrcia                <span style="color:#a6e22e">lingua   </span>(O. Berg) Mattos
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>       Myrtaceae  Myrcia                 bella           Cambess.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>       Lauraceae  Ocotea             <span style="color:#a6e22e">pulchella </span>(Nees <span style="color:#f92672">&amp;</span> Mart.) Mez
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span> Melastomataceae Miconia                    <span style="color:#66d9ef">NA</span>        Ruiz <span style="color:#f92672">&amp;</span> Pav.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>       Rubiaceae  Coffea arabica var. amarella        A. Froehner
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>              <span style="color:#66d9ef">NA</span>    Bleh                    <span style="color:#66d9ef">NA</span>                 <span style="color:#66d9ef">NA</span>
</span></span><span style="display:flex;"><span>            source source.id   status confidence suggestion       database
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>              TRO <span style="color:#ae81ff">100227036</span>       <span style="color:#66d9ef">NA</span>         <span style="color:#66d9ef">NA</span>         <span style="color:#66d9ef">NA</span>       Tropicos
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>             WCSP    <span style="color:#ae81ff">131057</span> Accepted          H         <span style="color:#66d9ef">NA</span> The Plant List
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span> <span style="color:#a6e22e">WCSP </span>(<span style="color:#66d9ef">in</span> review)    <span style="color:#ae81ff">989758</span> Accepted          M         <span style="color:#66d9ef">NA</span> The Plant List
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>              TRO  <span style="color:#ae81ff">40018467</span>       <span style="color:#66d9ef">NA</span>         <span style="color:#66d9ef">NA</span>         <span style="color:#66d9ef">NA</span>       Tropicos
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>              TRO <span style="color:#ae81ff">100170231</span>       <span style="color:#66d9ef">NA</span>         <span style="color:#66d9ef">NA</span>         <span style="color:#66d9ef">NA</span>       Tropicos
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>               <span style="color:#66d9ef">NA</span>        <span style="color:#66d9ef">NA</span>       <span style="color:#66d9ef">NA</span>         <span style="color:#66d9ef">NA</span>       Baea             <span style="color:#66d9ef">NA</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># We made a light wrapper around the Taxonstand package to search</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Theplantlist.org too</span>
</span></span><span style="display:flex;"><span>splist <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;Heliathus annuus&#34;</span>, <span style="color:#e6db74">&#34;Abies procera&#34;</span>, <span style="color:#e6db74">&#34;Poa annua&#34;</span>, <span style="color:#e6db74">&#34;Platanus occidentalis&#34;</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Carex abrupta&#34;</span>, <span style="color:#e6db74">&#34;Arctostaphylos canescens&#34;</span>, <span style="color:#e6db74">&#34;Ocimum basilicum&#34;</span>, <span style="color:#e6db74">&#34;Vicia faba&#34;</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Quercus kelloggii&#34;</span>, <span style="color:#e6db74">&#34;Lactuca serriola&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">tpl_search</span>(taxon <span style="color:#f92672">=</span> splist)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>            Genus      Species Infraspecific Plant.Name.Index
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>       Heliathus       annuus                          <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>           Abies      procera                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>             Poa        annua                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>        Platanus occidentalis                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>           Carex      abrupta                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>  Arctostaphylos    canescens                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>          Ocimum    basilicum                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>           Vicia         faba                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>         Quercus    kelloggii                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>        Lactuca     serriola                           <span style="color:#66d9ef">TRUE</span>
</span></span><span style="display:flex;"><span>   Taxonomic.status      Family      New.Genus  New.Species
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>                                    Heliathus       annuus
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>          Accepted    Pinaceae          Abies      procera
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>          Accepted     Poaceae            Poa        annua
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>          Accepted Platanaceae       Platanus occidentalis
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>          Accepted  Cyperaceae          Carex      abrupta
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>          Accepted   Ericaceae Arctostaphylos    canescens
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>          Accepted   Lamiaceae         Ocimum    basilicum
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>          Accepted Leguminosae          Vicia         faba
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>          Accepted    Fagaceae        Quercus    kelloggii
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>         Accepted  Compositae        Lactuca     serriola
</span></span><span style="display:flex;"><span>   New.Infraspecific Authority  Typo WFormat
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>                              <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>                       Rehder <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>                           L. <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>                           L. <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>               <span style="color:#f92672">&lt;</span><span style="color:#66d9ef">NA</span><span style="color:#f92672">&gt;</span>     Mack. <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>                       Eastw. <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>                           L. <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>                           L. <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>               <span style="color:#f92672">&lt;</span><span style="color:#66d9ef">NA</span><span style="color:#f92672">&gt;</span>     Newb. <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>                          L. <span style="color:#66d9ef">FALSE</span>   <span style="color:#66d9ef">FALSE</span>
</span></span></code></pre></div><hr>
<h3 id="taxonomic-hierarchies">Taxonomic hierarchies</h3>
<h4 id="i-often-want-the-full-taxonomic-hierarchy-for-a-set-of-species-that-is-give-me-the-family-order-class-etc-for-my-list-of-species-there-are-two-different-easy-ways-to-do-this-with-taxize-the-first-example-uses-eol">I often want the full taxonomic hierarchy for a set of species. That is, give me the family, order, class, etc. for my list of species. There are two different easy ways to do this with <code>taxize</code>. The first example uses EOL.</h4>
<hr>
<h4 id="using-eol">Using EOL.</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>pageid <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">eol_search</span>(<span style="color:#e6db74">&#34;Quercus douglasii&#34;</span>)<span style="color:#f92672">$</span>id[1]  <span style="color:#75715e"># first need to search for the taxon&#39;s page on EOL</span>
</span></span><span style="display:flex;"><span>out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">eol_pages</span>(taxonconceptID <span style="color:#f92672">=</span> pageid)  <span style="color:#75715e"># then we nee to get the taxon ID used by EOL</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Notice that there are multiple different sources you can pull the</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># hierarchy from. Note even that you can get the hierarchy from the ITIS</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># service via this EOL API.</span>
</span></span><span style="display:flex;"><span>out
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>  identifier                 scientificName
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>   <span style="color:#ae81ff">46203061</span> Quercus douglasii Hook. <span style="color:#f92672">&amp;</span> Arn.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>   <span style="color:#ae81ff">48373995</span> Quercus douglasii Hook. <span style="color:#f92672">&amp;</span> Arn.
</span></span><span style="display:flex;"><span>                                  nameAccordingTo sourceIdentfier
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>  Integrated Taxonomic Information <span style="color:#a6e22e">System </span>(ITIS)           <span style="color:#ae81ff">19322</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span> Species <span style="color:#ae81ff">2000</span> <span style="color:#f92672">&amp;</span> ITIS Catalogue of Life<span style="color:#f92672">:</span> May <span style="color:#ae81ff">2012</span>         <span style="color:#ae81ff">9723391</span>
</span></span><span style="display:flex;"><span>  taxonRank
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>   Species
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>   Species
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Then the hierarchy!</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">eol_hierarchy</span>(out[out<span style="color:#f92672">$</span>nameAccordingTo <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;Species 2000 &amp; ITIS Catalogue of Life: May 2012&#34;</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;identifier&#34;</span>])
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>  sourceIdentifier  taxonID parentNameUsageID taxonConceptID
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">11017504</span> <span style="color:#ae81ff">48276627</span>                 <span style="color:#ae81ff">0</span>            <span style="color:#ae81ff">281</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>         <span style="color:#ae81ff">11017505</span> <span style="color:#ae81ff">48276628</span>          <span style="color:#ae81ff">48276627</span>            <span style="color:#ae81ff">282</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>         <span style="color:#ae81ff">11017506</span> <span style="color:#ae81ff">48276629</span>          <span style="color:#ae81ff">48276628</span>            <span style="color:#ae81ff">283</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>         <span style="color:#ae81ff">11022500</span> <span style="color:#ae81ff">48373354</span>          <span style="color:#ae81ff">48276629</span>           <span style="color:#ae81ff">4184</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>         <span style="color:#ae81ff">11025284</span> <span style="color:#ae81ff">48373677</span>          <span style="color:#ae81ff">48373354</span>           <span style="color:#ae81ff">4197</span>
</span></span><span style="display:flex;"><span>  scientificName taxonRank
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>        Plantae   kingdom
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>  Magnoliophyta    phylum
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>  Magnoliopsida     class
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>        Fagales     order
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>       Fagaceae    family
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">eol_hierarchy</span>(out[out<span style="color:#f92672">$</span>nameAccordingTo <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;Integrated Taxonomic Information System (ITIS)&#34;</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;identifier&#34;</span>])  <span style="color:#75715e"># and from ITIS, slightly different than ITIS output below, which includes taxa all the way down.</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>   sourceIdentifier  taxonID parentNameUsageID taxonConceptID
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">202422</span> <span style="color:#ae81ff">46150613</span>                 <span style="color:#ae81ff">0</span>            <span style="color:#ae81ff">281</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>            <span style="color:#ae81ff">846492</span> <span style="color:#ae81ff">46159776</span>          <span style="color:#ae81ff">46150613</span>        <span style="color:#ae81ff">8654492</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>            <span style="color:#ae81ff">846494</span> <span style="color:#ae81ff">46161961</span>          <span style="color:#ae81ff">46159776</span>       <span style="color:#ae81ff">28818077</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>            <span style="color:#ae81ff">846496</span> <span style="color:#ae81ff">46167532</span>          <span style="color:#ae81ff">46161961</span>           <span style="color:#ae81ff">4494</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>            <span style="color:#ae81ff">846504</span> <span style="color:#ae81ff">46169010</span>          <span style="color:#ae81ff">46167532</span>       <span style="color:#ae81ff">28825126</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>            <span style="color:#ae81ff">846505</span> <span style="color:#ae81ff">46169011</span>          <span style="color:#ae81ff">46169010</span>            <span style="color:#ae81ff">282</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>             <span style="color:#ae81ff">18063</span> <span style="color:#ae81ff">46169012</span>          <span style="color:#ae81ff">46169011</span>            <span style="color:#ae81ff">283</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>            <span style="color:#ae81ff">846548</span> <span style="color:#ae81ff">46202954</span>          <span style="color:#ae81ff">46169012</span>       <span style="color:#ae81ff">28859070</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>             <span style="color:#ae81ff">19273</span> <span style="color:#ae81ff">46202955</span>          <span style="color:#ae81ff">46202954</span>           <span style="color:#ae81ff">4184</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>            <span style="color:#ae81ff">19275</span> <span style="color:#ae81ff">46203022</span>          <span style="color:#ae81ff">46202955</span>           <span style="color:#ae81ff">4197</span>
</span></span><span style="display:flex;"><span>    scientificName     taxonRank
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>          Plantae       kingdom
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>   Viridaeplantae    subkingdom
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>     Streptophyta  infrakingdom
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>     Tracheophyta      division
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>  Spermatophytina   subdivision
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>     Angiospermae infradivision
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>    Magnoliopsida         class
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>          Rosanae    superorder
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>          Fagales         order
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>        Fagaceae        family
</span></span></code></pre></div><hr>
<h4 id="and-getting-a-taxonomic-hierarchy-using-itis">And getting a taxonomic hierarchy using ITIS.</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># First, get the taxonomic serial number (TSN) that ITIS uses</span>
</span></span><span style="display:flex;"><span>mytsn <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">get_tsn</span>(<span style="color:#e6db74">&#34;Quercus douglasii&#34;</span>, <span style="color:#e6db74">&#34;sciname&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Retrieving data <span style="color:#66d9ef">for</span> species <span style="color:#e6db74">&#39; Quercus douglasii &#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Get the full taxonomic hierarchy for a taxon from the TSN</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">itis</span>(mytsn, <span style="color:#e6db74">&#34;getfullhierarchyfromtsn&#34;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#f92672">$</span>`1`
</span></span><span style="display:flex;"><span>        parentName parentTsn      rankName         taxonName    tsn
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>                                  Kingdom           Plantae <span style="color:#ae81ff">202422</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>          Plantae    <span style="color:#ae81ff">202422</span>    Subkingdom    Viridaeplantae <span style="color:#ae81ff">846492</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>   Viridaeplantae    <span style="color:#ae81ff">846492</span>  Infrakingdom      Streptophyta <span style="color:#ae81ff">846494</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>     Streptophyta    <span style="color:#ae81ff">846494</span>      Division      Tracheophyta <span style="color:#ae81ff">846496</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>     Tracheophyta    <span style="color:#ae81ff">846496</span>   Subdivision   Spermatophytina <span style="color:#ae81ff">846504</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>  Spermatophytina    <span style="color:#ae81ff">846504</span> Infradivision      Angiospermae <span style="color:#ae81ff">846505</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>     Angiospermae    <span style="color:#ae81ff">846505</span>         Class     Magnoliopsida  <span style="color:#ae81ff">18063</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>    Magnoliopsida     <span style="color:#ae81ff">18063</span>    Superorder           Rosanae <span style="color:#ae81ff">846548</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>          Rosanae    <span style="color:#ae81ff">846548</span>         Order           Fagales  <span style="color:#ae81ff">19273</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>         Fagales     <span style="color:#ae81ff">19273</span>        Family          Fagaceae  <span style="color:#ae81ff">19275</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">11</span>        Fagaceae     <span style="color:#ae81ff">19275</span>         Genus           Quercus  <span style="color:#ae81ff">19276</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">12</span>         Quercus     <span style="color:#ae81ff">19276</span>       Species Quercus douglasii  <span style="color:#ae81ff">19322</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># But this can be even easier!</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">classification</span>(<span style="color:#a6e22e">get_tsn</span>(<span style="color:#e6db74">&#34;Quercus douglasii&#34;</span>))  <span style="color:#75715e"># Boom!</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Retrieving data <span style="color:#66d9ef">for</span> species <span style="color:#e6db74">&#39; Quercus douglasii &#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#f92672">$</span>`1`
</span></span><span style="display:flex;"><span>        parentName parentTsn      rankName         taxonName    tsn
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>                                  Kingdom           Plantae <span style="color:#ae81ff">202422</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>          Plantae    <span style="color:#ae81ff">202422</span>    Subkingdom    Viridaeplantae <span style="color:#ae81ff">846492</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>   Viridaeplantae    <span style="color:#ae81ff">846492</span>  Infrakingdom      Streptophyta <span style="color:#ae81ff">846494</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>     Streptophyta    <span style="color:#ae81ff">846494</span>      Division      Tracheophyta <span style="color:#ae81ff">846496</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>     Tracheophyta    <span style="color:#ae81ff">846496</span>   Subdivision   Spermatophytina <span style="color:#ae81ff">846504</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>  Spermatophytina    <span style="color:#ae81ff">846504</span> Infradivision      Angiospermae <span style="color:#ae81ff">846505</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>     Angiospermae    <span style="color:#ae81ff">846505</span>         Class     Magnoliopsida  <span style="color:#ae81ff">18063</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>    Magnoliopsida     <span style="color:#ae81ff">18063</span>    Superorder           Rosanae <span style="color:#ae81ff">846548</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>          Rosanae    <span style="color:#ae81ff">846548</span>         Order           Fagales  <span style="color:#ae81ff">19273</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>         Fagales     <span style="color:#ae81ff">19273</span>        Family          Fagaceae  <span style="color:#ae81ff">19275</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">11</span>        Fagaceae     <span style="color:#ae81ff">19275</span>         Genus           Quercus  <span style="color:#ae81ff">19276</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">12</span>         Quercus     <span style="color:#ae81ff">19276</span>       Species Quercus douglasii  <span style="color:#ae81ff">19322</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># You can also do this easy-peasy route to a taxonomic hierarchy using</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># uBio</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">classification</span>(<span style="color:#a6e22e">get_uid</span>(<span style="color:#e6db74">&#34;Ornithorhynchus anatinus&#34;</span>))
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#f92672">$</span>`1`
</span></span><span style="display:flex;"><span>       ScientificName         Rank    UID
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>  cellular organisms      no rank <span style="color:#ae81ff">131567</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>           Eukaryota superkingdom   <span style="color:#ae81ff">2759</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span>        Opisthokonta      no rank  <span style="color:#ae81ff">33154</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4</span>             Metazoa      kingdom  <span style="color:#ae81ff">33208</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5</span>           Eumetazoa      no rank   <span style="color:#ae81ff">6072</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>           Bilateria      no rank  <span style="color:#ae81ff">33213</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span>           Coelomata      no rank  <span style="color:#ae81ff">33316</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">8</span>       Deuterostomia      no rank  <span style="color:#ae81ff">33511</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span>            Chordata       phylum   <span style="color:#ae81ff">7711</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10</span>           Craniata    subphylum  <span style="color:#ae81ff">89593</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">11</span>         Vertebrata      no rank   <span style="color:#ae81ff">7742</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">12</span>      Gnathostomata   superclass   <span style="color:#ae81ff">7776</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">13</span>         Teleostomi      no rank <span style="color:#ae81ff">117570</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">14</span>       Euteleostomi      no rank <span style="color:#ae81ff">117571</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">15</span>      Sarcopterygii      no rank   <span style="color:#ae81ff">8287</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">16</span>          Tetrapoda      no rank  <span style="color:#ae81ff">32523</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">17</span>            Amniota      no rank  <span style="color:#ae81ff">32524</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">18</span>           Mammalia        class  <span style="color:#ae81ff">40674</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">19</span>        Prototheria      no rank   <span style="color:#ae81ff">9254</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">20</span>        Monotremata        order   <span style="color:#ae81ff">9255</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">21</span>  Ornithorhynchidae       family   <span style="color:#ae81ff">9256</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">22</span>    Ornithorhynchus        genus   <span style="color:#ae81ff">9257</span>
</span></span></code></pre></div><hr>
<h3 id="sequences">Sequences?</h3>
<h4 id="while-you-are-at-doing-taxonomic-stuff-you-often-wonder-hmmm-i-wonder-if-there-are-any-sequence-data-available-for-my-species-so-you-can-use-get_seqs-to-search-for-specific-genes-for-a-species-and-get_genes_avail-to-find-out-what-genes-are-available-for-a-certain-species-these-functions-search-for-data-on-ncbihttpwwwncbinlmnihgov">While you are at doing taxonomic stuff, you often wonder &ldquo;hmmm, I wonder if there are any sequence data available for my species?&rdquo; So, you can use <code>get_seqs</code> to search for specific genes for a species, and <code>get_genes_avail</code> to find out what genes are available for a certain species. These functions search for data on <a href="http://www.ncbi.nlm.nih.gov/">NCBI</a>.</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># Get sequences (sequence is provied in output, but hiding here for</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># brevity). What&#39;s nice about this is that it gets the longest sequence</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># avaialable for the gene you searched for, and if there isn&#39;t anything</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># available, it lets you get a sequence from a congener if you set</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># getrelated=TRUE. The last column in the output data.frame also tells you</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># what species the sequence is from.</span>
</span></span><span style="display:flex;"><span>out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">get_seqs</span>(taxon_name <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;Acipenser brevirostrum&#34;</span>, gene <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;5S rRNA&#34;</span>), 
</span></span><span style="display:flex;"><span>    seqrange <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;1:3000&#34;</span>, getrelated <span style="color:#f92672">=</span> T, writetodf <span style="color:#f92672">=</span> F)
</span></span><span style="display:flex;"><span>out[, <span style="color:#f92672">!</span><span style="color:#a6e22e">names</span>(out) <span style="color:#f92672">%in%</span> <span style="color:#e6db74">&#34;sequence&#34;</span>]
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>                   taxon                                         gene_desc
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span> Acipenser brevirostrum Acipenser brevirostrum <span style="color:#ae81ff">5</span>S rRNA gene, clone BRE92A
</span></span><span style="display:flex;"><span>     gi_no     acc_no length                 spused
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span> <span style="color:#ae81ff">60417159</span> AJ745069.1    <span style="color:#ae81ff">121</span> Acipenser brevirostrum
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Search for available sequences</span>
</span></span><span style="display:flex;"><span>out <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">get_genes_avail</span>(taxon_name <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;Umbra limi&#34;</span>, seqrange <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;1:2000&#34;</span>, getrelated <span style="color:#f92672">=</span> F)
</span></span><span style="display:flex;"><span>out<span style="color:#a6e22e">[grep</span>(<span style="color:#e6db74">&#34;RAG1&#34;</span>, out<span style="color:#f92672">$</span>genesavail, ignore.case <span style="color:#f92672">=</span> T), ]  <span style="color:#75715e"># does the string &#39;RAG1&#39; exist in any of the gene names</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>        spused length
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">414</span> Umbra limi    <span style="color:#ae81ff">732</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">427</span> Umbra limi    <span style="color:#ae81ff">959</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">434</span> Umbra limi   <span style="color:#ae81ff">1631</span>
</span></span><span style="display:flex;"><span>                                                                            genesavail
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">414</span> isolate UlimA recombinase activating protein <span style="color:#ae81ff">1</span> (rag1) gene, exon <span style="color:#ae81ff">3</span> and partial cds
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">427</span>           recombination<span style="color:#f92672">-</span>activating protein <span style="color:#ae81ff">1</span> (RAG1) gene, intron <span style="color:#ae81ff">2</span> and partial cds
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">434</span>                        recombination<span style="color:#f92672">-</span>activating protein <span style="color:#ae81ff">1</span> (RAG1) gene, partial cds
</span></span><span style="display:flex;"><span>    predicted
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">414</span>  JX190826
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">427</span>  AY459526
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">434</span>  AY380548
</span></span></code></pre></div><hr>
<p>Get the .Rmd file used to create this post <a href="https://github.com/sckott/sckott.github.com/tree/master/_drafts/2012-12-06-taxize.Rmd">at my github account</a> - or <a href="https://github.com/sckott/sckott.github.com/tree/master/_posts/2012-12-06-taxize.md">.md file</a>.</p>
<p>Written in <a href="http://daringfireball.net/projects/markdown/">Markdown</a>, with help from <a href="http://yihui.name/knitr/">knitr</a>.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
