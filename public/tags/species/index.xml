<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Species on Recology</title>
    <link>http://localhost:1313/tags/species/</link>
    <description>Recent content in Species on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Jun 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/species/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploring specimen collections data in Butte County, California</title>
      <link>http://localhost:1313/2018/06/butte-county/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/06/butte-county/</guid>
      <description>Why Butte County? I went to college at California State University, Chico - in Butte County, CA. I did a BA degree in Biology there. It was a great program as it was heavily focused on natural history - with classes on herps, birds, insects, fish, etc.
Specimen collections data Specimen collections data are increasingly being digitized, and often accessed via largeish platforms like GBIF and iDigBio. Here I&amp;rsquo;ll explore Butte County data found with iDigBio with the spocc R package.</description>
    </item>
    <item>
      <title>gbifrb: Ruby client for the GBIF API</title>
      <link>http://localhost:1313/2017/09/gbifrb/</link>
      <pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2017/09/gbifrb/</guid>
      <description>gbifrb is a new Ruby client for the GBIF API.
docs: https://www.rubydoc.info/gems/gbifrb/ rubygems: https://rubygems.org/gems/gbifrb code: https://github.com/sckott/gbifrb I maintain (w/ help) two other GBIF API clients:
Python: pygbif R: rgbif API Here&amp;rsquo;s the gbifrb methods in relation to GBIF API routes
registry
/node - Gbif::Registry.nodes /network - Gbif::Registry.networks /installations - Gbif::Registry.installations /organizations - Gbif::Registry.organizations /dataset_metrics - Gbif::Registry.dataset_metrics /datasets - Gbif::Registry.datasets /dataset_suggest - Gbif::Registry.dataset_suggest /dataset_search - Gbif::Registry.dataset_search species
/species/match - Gbif::Species.name_backbone /species/suggest - Gbif::Species.</description>
    </item>
    <item>
      <title>scrubr - clean species occurrence records</title>
      <link>http://localhost:1313/2016/03/scrubr/</link>
      <pubDate>Fri, 04 Mar 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2016/03/scrubr/</guid>
      <description>scrubr is an R library for cleaning species occurrence records. It&amp;rsquo;s general purpose, and has the following approach:
We think using a piping workflow (%&amp;gt;%) makes code easier to build up, and easier to understand. However, you don&amp;rsquo;t have to use pipes in this package. All inputs and outputs are data.frame&amp;rsquo;s - which makes the above point easier Records trimmed off due to various filters are retained as attributes, so can still be accessed for later inspection, but don&amp;rsquo;t get in the way of the data.</description>
    </item>
  </channel>
</rss>
