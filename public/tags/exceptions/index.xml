<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Exceptions on Recology</title>
    <link>http://localhost:1313/tags/exceptions/</link>
    <description>Recent content in Exceptions on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Mar 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/exceptions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exceptions in control flow in R</title>
      <link>http://localhost:1313/2019/03/control-flow-exceptions/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/03/control-flow-exceptions/</guid>
      <description>I was listening to a Bike Shed podcast episode 189, &amp;ldquo;It&amp;rsquo;s Gonna Work, Definitely, No Problems Whatsoever&amp;rdquo;, and starting at 27:44 there was a conversation about exception handling. Specifically it was about exception handling in control flow when doing web API requests. This topic piqued my interest straight away as I do a lot of API stuff (making and wrapping).
The part of the conversation that I want to address is their conclusion that exceptions in control flow are an anti-pattern.</description>
    </item>
  </channel>
</rss>
