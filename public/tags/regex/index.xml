<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Regex on Recology</title>
    <link>http://localhost:1313/tags/regex/</link>
    <description>Recent content in Regex on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Oct 2011 10:50:00 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R talk on regular expressions (regex)</title>
      <link>http://localhost:1313/2011/10/r-talk-on-regular-expressions-regex/</link>
      <pubDate>Thu, 06 Oct 2011 10:50:00 -0500</pubDate>
      <guid>http://localhost:1313/2011/10/r-talk-on-regular-expressions-regex/</guid>
      <description>Regular expressions are a powerful in any language to manipulate, search, etc. data.
For example:
&amp;gt; fruit &amp;lt;- c(&amp;#34;apple&amp;#34;, &amp;#34;banana&amp;#34;, &amp;#34;pear&amp;#34;, &amp;#34;pineapple&amp;#34;) &amp;gt; fruit [1] &amp;#34;apple&amp;#34; &amp;#34;banana&amp;#34; &amp;#34;pear&amp;#34; &amp;#34;pineapple&amp;#34; &amp;gt; grep(&amp;#34;a&amp;#34;, fruit) # there is an &amp;#34;a&amp;#34; in each of the words [1] 1 2 3 4 &amp;gt; &amp;gt; strsplit(&amp;#34;a string&amp;#34;, &amp;#34;s&amp;#34;) # strsplit splits the string on the &amp;#34;s&amp;#34; [[1]] [1] &amp;#34;a &amp;#34; &amp;#34;tring&amp;#34; R base has many functions for regular expressions, see slide 9 of Ed&amp;rsquo;s talk below.</description>
    </item>
  </channel>
</rss>
