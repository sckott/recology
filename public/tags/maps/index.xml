<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Maps on Recology</title>
    <link>http://localhost:1313/tags/maps/</link>
    <description>Recent content in Maps on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Sep 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/maps/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gbifrb: Ruby client for the GBIF API</title>
      <link>http://localhost:1313/2017/09/gbifrb/</link>
      <pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2017/09/gbifrb/</guid>
      <description>gbifrb is a new Ruby client for the GBIF API.
docs: https://www.rubydoc.info/gems/gbifrb/ rubygems: https://rubygems.org/gems/gbifrb code: https://github.com/sckott/gbifrb I maintain (w/ help) two other GBIF API clients:
Python: pygbif R: rgbif API Here&amp;rsquo;s the gbifrb methods in relation to GBIF API routes
registry
/node - Gbif::Registry.nodes /network - Gbif::Registry.networks /installations - Gbif::Registry.installations /organizations - Gbif::Registry.organizations /dataset_metrics - Gbif::Registry.dataset_metrics /datasets - Gbif::Registry.datasets /dataset_suggest - Gbif::Registry.dataset_suggest /dataset_search - Gbif::Registry.dataset_search species
/species/match - Gbif::Species.name_backbone /species/suggest - Gbif::Species.</description>
    </item>
    <item>
      <title>R to GeoJSON</title>
      <link>http://localhost:1313/2013/06/geojson/</link>
      <pubDate>Sun, 30 Jun 2013 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2013/06/geojson/</guid>
      <description>UPDATE As you can see in Patrick&amp;rsquo;s comment below you can convert to GeoJSON format files with rgdal as an alternative to calling the Ogre web API described below. See here for example code for converting to GeoJSON with rgdal.
GitHub recently introduced the ability to render GeoJSON files on their site as maps here, and recently introduced here support for TopoJSON, an extension of GeoJSON can be up to 80% smaller than GeoJSON, support for other file extensions (.</description>
    </item>
  </channel>
</rss>
