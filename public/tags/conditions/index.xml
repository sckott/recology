<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Conditions on Recology</title>
    <link>http://localhost:1313/tags/conditions/</link>
    <description>Recent content in Conditions on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Dec 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/conditions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>condition control: I just want that message once</title>
      <link>http://localhost:1313/2018/12/condition-control/</link>
      <pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/12/condition-control/</guid>
      <description><![CDATA[<p>I&rsquo;m sure there&rsquo;s already a way to do this, but here goes. OR maybe this is an
anti-pattern. Either way, this is me, asking the stupid question.</p>
<p>I ran into this a few hours ago:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">Sys.unsetenv</span>(<span style="color:#e6db74">&#34;ENTREZ_KEY&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(brranching)
</span></span><span style="display:flex;"><span>mynames <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;Poa annua&#34;</span>, <span style="color:#e6db74">&#34;Salix goodingii&#34;</span>, <span style="color:#e6db74">&#34;Helianthus annuus&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">phylomatic_names</span>(taxa <span style="color:#f92672">=</span> mynames, format<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;rsubmit&#39;</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>No ENTREZ API key provided
</span></span><span style="display:flex;"><span> Get one via taxize<span style="color:#f92672">::</span><span style="color:#a6e22e">use_entrez</span>()
</span></span><span style="display:flex;"><span> See https<span style="color:#f92672">://</span>ncbiinsights.ncbi.nlm.nih.gov<span style="color:#f92672">/</span><span style="color:#ae81ff">2017</span><span style="color:#f92672">/</span><span style="color:#ae81ff">11</span><span style="color:#f92672">/</span><span style="color:#ae81ff">02</span><span style="color:#f92672">/</span>new<span style="color:#f92672">-</span>api<span style="color:#f92672">-</span>keys<span style="color:#f92672">-</span><span style="color:#66d9ef">for</span><span style="color:#f92672">-</span>the<span style="color:#f92672">-</span>e<span style="color:#f92672">-</span>utilities<span style="color:#f92672">/</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>No ENTREZ API key provided
</span></span><span style="display:flex;"><span> Get one via taxize<span style="color:#f92672">::</span><span style="color:#a6e22e">use_entrez</span>()
</span></span><span style="display:flex;"><span> See https<span style="color:#f92672">://</span>ncbiinsights.ncbi.nlm.nih.gov<span style="color:#f92672">/</span><span style="color:#ae81ff">2017</span><span style="color:#f92672">/</span><span style="color:#ae81ff">11</span><span style="color:#f92672">/</span><span style="color:#ae81ff">02</span><span style="color:#f92672">/</span>new<span style="color:#f92672">-</span>api<span style="color:#f92672">-</span>keys<span style="color:#f92672">-</span><span style="color:#66d9ef">for</span><span style="color:#f92672">-</span>the<span style="color:#f92672">-</span>e<span style="color:#f92672">-</span>utilities<span style="color:#f92672">/</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>No ENTREZ API key provided
</span></span><span style="display:flex;"><span> Get one via taxize<span style="color:#f92672">::</span><span style="color:#a6e22e">use_entrez</span>()
</span></span><span style="display:flex;"><span> See https<span style="color:#f92672">://</span>ncbiinsights.ncbi.nlm.nih.gov<span style="color:#f92672">/</span><span style="color:#ae81ff">2017</span><span style="color:#f92672">/</span><span style="color:#ae81ff">11</span><span style="color:#f92672">/</span><span style="color:#ae81ff">02</span><span style="color:#f92672">/</span>new<span style="color:#f92672">-</span>api<span style="color:#f92672">-</span>keys<span style="color:#f92672">-</span><span style="color:#66d9ef">for</span><span style="color:#f92672">-</span>the<span style="color:#f92672">-</span>e<span style="color:#f92672">-</span>utilities<span style="color:#f92672">/</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;poaceae%2Fpoa%2Fpoa_annua&#34;</span>                   <span style="color:#e6db74">&#34;salicaceae%2Fsalix%2Fsalix_goodingii&#34;</span>        <span style="color:#e6db74">&#34;asteraceae%2Fhelianthus%2Fhelianthus_annuus&#34;</span>
</span></span></code></pre></div><p>The <a href="https://github.com/ropensci/brranching/">brranching</a> package uses the <a href="https://github.com/ropensci/taxize/">taxize</a> package internally, calling it&rsquo;s function
<code>taxize::tax_name()</code>. The <code>taxize::tax_name()</code> function throws useful messages to the user
if their NCBI Entrez API key is not found, and gives them instructions on how to find it.</p>
<p>However, the user does not have to get an API key. If they don&rsquo;t they then get subjected
to lots of repeats of the same message.</p>
<p>I wondered if there&rsquo;s anything that could be done about this. That is, if the same
message is going to be thrown that was already thrown within a function call, just skip
additional messages that are the same.</p>
<p>There is of course <code>suppressMessages()</code> for messages, but in package development if you
do want a user to see a message, you don&rsquo;t want to suppress messages. <code>suppressMessages</code>
is too blunt of an instrument for this use case.</p>
<h2 id="the-code">the code</h2>
<p><code>with_mssgs()</code> captures values and messages, suppressing the message</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>with_mssgs <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(expr) {
</span></span><span style="display:flex;"><span>  my_mssgs <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">NULL</span>
</span></span><span style="display:flex;"><span>  w_handler <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(w) {
</span></span><span style="display:flex;"><span>    my_mssgs <span style="color:#f92672">&lt;&lt;-</span> <span style="color:#a6e22e">c</span>(my_mssgs, <span style="color:#a6e22e">list</span>(w))
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">invokeRestart</span>(<span style="color:#e6db74">&#34;muffleMessage&#34;</span>)
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  val <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">withCallingHandlers</span>(expr, message <span style="color:#f92672">=</span> w_handler)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">list</span>(value <span style="color:#f92672">=</span> val, messages <span style="color:#f92672">=</span> my_mssgs)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><code>MessageKeeper</code> is a little <a href="https://cran.rstudio.com/web/packages/R6/">R6</a> class to handle messages, matching, and
simple checks to see if messages have been used or not.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(R6)
</span></span><span style="display:flex;"><span>MessageKeeper <span style="color:#f92672">&lt;-</span> R6<span style="color:#f92672">::</span><span style="color:#a6e22e">R6Class</span>(<span style="color:#e6db74">&#34;MessageKeeper&#34;</span>,
</span></span><span style="display:flex;"><span>  public <span style="color:#f92672">=</span> <span style="color:#a6e22e">list</span>(
</span></span><span style="display:flex;"><span>    bucket <span style="color:#f92672">=</span> <span style="color:#66d9ef">NULL</span>,
</span></span><span style="display:flex;"><span>    print <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(x, <span style="color:#66d9ef">...</span>) {
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">cat</span>(<span style="color:#e6db74">&#39;MessageKeeper&#39;</span>, sep <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;\n&#34;</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">cat</span>(<span style="color:#a6e22e">paste0</span>(<span style="color:#e6db74">&#39; messages: &#39;</span>, <span style="color:#a6e22e">length</span>(self<span style="color:#f92672">$</span>bucket)))
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">length</span>(self<span style="color:#f92672">$</span>bucket) <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">cat</span>(<span style="color:#e6db74">&#34;\n&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> (i <span style="color:#66d9ef">in</span> self<span style="color:#f92672">$</span>bucket) {
</span></span><span style="display:flex;"><span>          <span style="color:#a6e22e">cat</span>(<span style="color:#a6e22e">paste0</span>(<span style="color:#e6db74">&#34;  &#34;</span>, <span style="color:#a6e22e">substring</span>(i, <span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">50</span>)))
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    add <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>      self<span style="color:#f92672">$</span>bucket <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(self<span style="color:#f92672">$</span>bucket, <span style="color:#a6e22e">list</span>(x))
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">invisible</span>(self)
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    remove <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>() {
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">if</span> (self<span style="color:#f92672">$</span><span style="color:#a6e22e">length</span>() <span style="color:#f92672">==</span> <span style="color:#ae81ff">0</span>) <span style="color:#66d9ef">return</span>(<span style="color:#66d9ef">NULL</span>)
</span></span><span style="display:flex;"><span>      head <span style="color:#f92672">&lt;-</span> self<span style="color:#f92672">$</span>bucket[[1]]
</span></span><span style="display:flex;"><span>      self<span style="color:#f92672">$</span>bucket <span style="color:#f92672">&lt;-</span> self<span style="color:#f92672">$</span>bucket[<span style="color:#ae81ff">-1</span>]
</span></span><span style="display:flex;"><span>      head
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    purge <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>() {
</span></span><span style="display:flex;"><span>      self<span style="color:#f92672">$</span>bucket <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">NULL</span>
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    thrown_already <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>      x <span style="color:#f92672">%in%</span> self<span style="color:#f92672">$</span>bucket
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    not_thrown_yet <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">!</span>self<span style="color:#f92672">$</span><span style="color:#a6e22e">thrown_already</span>(x)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  )
</span></span><span style="display:flex;"><span>)
</span></span></code></pre></div><p>MessageKeeper examples</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>mssger <span style="color:#f92672">&lt;-</span> MessageKeeper<span style="color:#f92672">$</span><span style="color:#a6e22e">new</span>()
</span></span><span style="display:flex;"><span>mssger
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; MessageKeeper</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  messages: 0</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">add</span>(<span style="color:#e6db74">&#34;one&#34;</span>)
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">add</span>(<span style="color:#e6db74">&#34;two&#34;</span>)
</span></span><span style="display:flex;"><span>mssger
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; MessageKeeper</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  messages: 2</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;   one  two</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">thrown_already</span>(<span style="color:#e6db74">&#34;one&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">thrown_already</span>(<span style="color:#e6db74">&#34;bears&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] FALSE</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">not_thrown_yet</span>(<span style="color:#e6db74">&#34;bears&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [1] TRUE</span>
</span></span><span style="display:flex;"><span>mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">purge</span>()
</span></span></code></pre></div><p><code>handle_mssgs()</code> is a function you wrap your target function in to
handle the messages</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>handle_mssgs <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(expr) {
</span></span><span style="display:flex;"><span>  res <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">with_mssgs</span>(expr)
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">is.null</span>(res<span style="color:#f92672">$</span>messages)) {
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># if not thrown yet, add to bucket and throw it</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (my_mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">not_thrown_yet</span>(res<span style="color:#f92672">$</span>messages[[1]]<span style="color:#f92672">$</span>message)) {
</span></span><span style="display:flex;"><span>      my_mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">add</span>(res<span style="color:#f92672">$</span>messages[[1]]<span style="color:#f92672">$</span>message)
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">message</span>(res<span style="color:#f92672">$</span>messages[[1]]<span style="color:#f92672">$</span>message)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span>(res<span style="color:#f92672">$</span>value)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Set up the message keeper</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>my_mssger <span style="color:#f92672">&lt;-</span> MessageKeeper<span style="color:#f92672">$</span><span style="color:#a6e22e">new</span>()
</span></span></code></pre></div><p><code>squared()</code> squares a numeric value and returns it, throwing a message if
it&rsquo;s greater than 20</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>squared <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">stopifnot</span>(<span style="color:#a6e22e">is.numeric</span>(x))
</span></span><span style="display:flex;"><span>  y <span style="color:#f92672">&lt;-</span> x^2
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> (y <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">20</span>) <span style="color:#a6e22e">message</span>(<span style="color:#e6db74">&#34;woops, &gt; than 20! check your numbers&#34;</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span>(y)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><code>foo()</code> runs any vector of numbers through <code>squared()</code> using <code>vapply()</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>foo <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">vapply</span>(x, <span style="color:#66d9ef">function</span>(z) <span style="color:#a6e22e">squared</span>(z), <span style="color:#a6e22e">numeric</span>(<span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><code>bar()</code> does the same, but uses our MessageKeeper thingy</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>bar <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  <span style="color:#75715e"># tear down on exit</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">on.exit</span>(my_mssger<span style="color:#f92672">$</span><span style="color:#a6e22e">purge</span>())
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">vapply</span>(x, <span style="color:#66d9ef">function</span>(z) <span style="color:#a6e22e">handle_mssgs</span>(<span style="color:#a6e22e">squared</span>(z)), <span style="color:#a6e22e">numeric</span>(<span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><code>foo()</code> annoyingly throws a message for every instance possible</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">foo</span>(<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  [1]   1   4   9  16  25  36  49  64  81 100 121 144 169 196 225 256 289</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [18] 324 361 400</span>
</span></span></code></pre></div><p>while <code>bar()</code> only throws the message once</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">bar</span>(<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; woops, &gt; than 20! check your numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt;  [1]   1   4   9  16  25  36  49  64  81 100 121 144 169 196 225 256 289</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#&gt; [18] 324 361 400</span>
</span></span></code></pre></div>]]></description>
    </item>
  </channel>
</rss>
