<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ape on Recology</title>
    <link>http://localhost:1313/tags/ape/</link>
    <description>Recent content in Ape on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Jan 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ape/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Function for phylogeny resolution</title>
      <link>http://localhost:1313/2012/01/phylogeny-resolution/</link>
      <pubDate>Fri, 13 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2012/01/phylogeny-resolution/</guid>
      <description><![CDATA[<p>UPDATE:  Yeah, so the treeresstats function had a problem in one of the calculations.  I fixed that and added some more calulcations to the function.</p>
<p>I couldn&rsquo;t find any functions to calculate number of polytomies, and related metrics.</p>
<p>Here&rsquo;s a simple function that gives four metrics on a phylo tree object:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># calculate tree resolution stats</span>
</span></span><span style="display:flex;"><span>treeresstats <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">require</span>(phangorn) <span style="color:#75715e"># load the phangorn package</span>
</span></span><span style="display:flex;"><span>  todo <span style="color:#f92672">&lt;-</span> ( <span style="color:#ae81ff">1</span><span style="color:#f92672">+</span><span style="color:#a6e22e">Ntip</span>(x)) <span style="color:#f92672">:</span> (<span style="color:#a6e22e">Ntip</span>(x) <span style="color:#f92672">+</span> <span style="color:#a6e22e">Nnode</span>(x) )
</span></span><span style="display:flex;"><span>  trsize_tips <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">Ntip</span>(x)
</span></span><span style="display:flex;"><span>  trsize_nodes <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">Nnode</span>(x)
</span></span><span style="display:flex;"><span>  polytomyvec <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">sapply</span>(todo, <span style="color:#66d9ef">function</span>(y) <span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">Children</span>(x, y)))
</span></span><span style="display:flex;"><span>  numpolys <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">length</span>(polytomyvec[polytomyvec <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">2</span>])
</span></span><span style="display:flex;"><span>  numpolysbytrsize_tips <span style="color:#f92672">&lt;-</span> numpolys<span style="color:#f92672">/</span>trsize_tips
</span></span><span style="display:flex;"><span>  numpolysbytrsize_nodes <span style="color:#f92672">&lt;-</span> numpolys<span style="color:#f92672">/</span>trsize_nodes
</span></span><span style="display:flex;"><span>  proptipsdescpoly <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">sum</span>(polytomyvec[polytomyvec <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">2</span>])<span style="color:#f92672">/</span>trsize_tips
</span></span><span style="display:flex;"><span>  propnodesdich <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">length</span>(polytomyvec[polytomyvec <span style="color:#f92672">==</span> <span style="color:#ae81ff">2</span>])<span style="color:#f92672">/</span>trsize_nodes
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">list</span>(trsize_tips <span style="color:#f92672">=</span> trsize_tips, trsize_nodes <span style="color:#f92672">=</span> trsize_nodes, 
</span></span><span style="display:flex;"><span>       numpolys <span style="color:#f92672">=</span> numpolys, numpolysbytrsize_tips <span style="color:#f92672">=</span> numpolysbytrsize_tips,
</span></span><span style="display:flex;"><span>       numpolysbytrsize_nodes <span style="color:#f92672">=</span> numpolysbytrsize_nodes,
</span></span><span style="display:flex;"><span>       proptipsdescpoly <span style="color:#f92672">=</span> proptipsdescpoly, propnodesdich <span style="color:#f92672">=</span> propnodesdich)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Single tree example</span>
</span></span><span style="display:flex;"><span>tree <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">read.tree</span>(text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;((((((artemisia_species:44,lactuca_species:44,senecio_species:44)6:46,campanula_species:90)5:17.75,((asclepias_species:71,galium_species:71)8:18.375,plantago_species:89.375)7:18.375)4:17.75,((cerastium_species:41.833332,silene_species:41.833332)10:41.833332,chenopodium_species:83.666664)9:41.833336)3:17.75,((geum_species:47,potentilla_species:47)12:48.125,lepidium_species:95.125)11:48.125)2:17.75,(bromus_species:12,elymus_species:12)13:149)1;&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>dat <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">treeresstats</span>(tree)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>dat
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Many trees example</span>
</span></span><span style="display:flex;"><span>maketrees <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(numtrees) {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">require</span>(ape); <span style="color:#a6e22e">require</span>(plyr)
</span></span><span style="display:flex;"><span>  trees <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">rmtree</span>(numtrees, <span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">llply</span>(trees, di2multi, tol <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.5</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>trees <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">maketrees</span>(<span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>dat <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ldply</span>(trees, <span style="color:#66d9ef">function</span>(x) <span style="color:#a6e22e">data.frame</span>(<span style="color:#a6e22e">treeresstats</span>(x)))
</span></span><span style="display:flex;"><span>dat
</span></span></code></pre></div><p>Here&rsquo;s output from the gist above:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#f92672">$</span>trsize_tips
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">15</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>trsize_nodes
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">13</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>numpolys
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>numpolysbytrsize_tips
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">0.06666667</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>numpolysbytrsize_nodes
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">0.07692308</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>proptipsdescpoly
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">0.2</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>propnodesdich
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">0.9230769</span>
</span></span></code></pre></div><p>And an example with many trees:</p>






  
  
  


  




<div class="data-table" role="region" tabindex="0" >
  <table class="table %!s(<nil>)" id="348276915">
  <thead>
      <tr>
          <th style="text-align: left">trsize_tips</th>
          <th style="text-align: left">trsize_nodes</th>
          <th style="text-align: left">numpolys</th>
          <th style="text-align: left">numpolysbytrsize_tips</th>
          <th style="text-align: left">numpolysbytrsize_nodes</th>
          <th style="text-align: left">proptipsdescpoly</th>
          <th style="text-align: left">propnodesdich</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">20</td>
          <td style="text-align: left">13</td>
          <td style="text-align: left">4</td>
          <td style="text-align: left">0.20</td>
          <td style="text-align: left">0.31</td>
          <td style="text-align: left">0.7</td>
          <td style="text-align: left">0.69</td>
      </tr>
      <tr>
          <td style="text-align: left">20</td>
          <td style="text-align: left">7</td>
          <td style="text-align: left">3</td>
          <td style="text-align: left">0.15</td>
          <td style="text-align: left">0.43</td>
          <td style="text-align: left">0.9</td>
          <td style="text-align: left">0.57</td>
      </tr>
      <tr>
          <td style="text-align: left">20</td>
          <td style="text-align: left">11</td>
          <td style="text-align: left">6</td>
          <td style="text-align: left">0.30</td>
          <td style="text-align: left">0.55</td>
          <td style="text-align: left">1.0</td>
          <td style="text-align: left">0.45</td>
      </tr>
      <tr>
          <td style="text-align: left">20</td>
          <td style="text-align: left">13</td>
          <td style="text-align: left">4</td>
          <td style="text-align: left">0.20</td>
          <td style="text-align: left">0.31</td>
          <td style="text-align: left">0.7</td>
          <td style="text-align: left">0.69</td>
      </tr>
      <tr>
          <td style="text-align: left">20</td>
          <td style="text-align: left">9</td>
          <td style="text-align: left">5</td>
          <td style="text-align: left">0.25</td>
          <td style="text-align: left">0.56</td>
          <td style="text-align: left">1.0</td>
          <td style="text-align: left">0.44</td>
      </tr>
  </tbody>
</table>

</div>

]]></description>
    </item>
    <item>
      <title>My talk on doing phylogenetics in R</title>
      <link>http://localhost:1313/2011/11/my-talk-on-doing-phylogenetics-in-r/</link>
      <pubDate>Fri, 18 Nov 2011 13:15:00 -0600</pubDate>
      <guid>http://localhost:1313/2011/11/my-talk-on-doing-phylogenetics-in-r/</guid>
      <description><![CDATA[<p>I gave a talk today on doing very basic phylogenetics in R, including getting sequence data, aligning sequence data, plotting trees, doing trait evolution stuff, etc.</p>
<p>Please comment if you have code for doing bayesian phylogenetic inference in R.  I know phyloch has function mrbayes, but can&rsquo;t get it to work&hellip;</p>

<div id="__ss_10222772" style="width: 425px;"><strong style="display: block; margin: 12px 0 4px;"><a href="http://www.slideshare.net/schamber/phylogenetics-in-r" target="_blank" title="Phylogenetics in R">Phylogenetics in R</a></strong> <iframe frameborder="0" height="355" marginheight="0" marginwidth="0" scrolling="no" src="http://www.slideshare.net/slideshow/embed_code/10222772" width="425"></iframe> <br /><div style="padding: 5px 0 12px;">View more <a href="http://www.slideshare.net/" target="_blank">presentations</a> from <a href="http://www.slideshare.net/schamber" target="_blank">schamber</a> </div></div>

]]></description>
    </item>
    <item>
      <title>phylogenetic signal simulations</title>
      <link>http://localhost:1313/2011/05/phylogenetic-signal-simulations/</link>
      <pubDate>Wed, 18 May 2011 08:13:00 -0500</pubDate>
      <guid>http://localhost:1313/2011/05/phylogenetic-signal-simulations/</guid>
      <description><![CDATA[<p>I did a little simulation to examine how K and lambda vary in response to tree size (and how they compare to each other on the same simulated trees). I use Liam Revell&rsquo;s functions fastBM to generate traits, and phylosig to measure phylogenetic signal.</p>
<p>Two observations:</p>
<ul>
<li>First, it seems that lambda is more sensitive than K to tree size, but then lambda levels out at about 40 species, whereas K continues to vary around a mean of 1.</li>
<li>Second, K is more variable than lambda at all levels of tree size (compare standard error bars).</li>
</ul>
<p>Does this make sense to those smart folks out there?</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e">#### Simulations</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">install.packages</span>(<span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;ape&#34;</span>,<span style="color:#e6db74">&#34;reshape2&#34;</span>,<span style="color:#e6db74">&#34;ggplot2&#34;</span>))
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">require</span>(ape); <span style="color:#a6e22e">require</span>(reshape2); <span style="color:#a6e22e">require</span>(ggplot2)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">source</span>(<span style="color:#e6db74">&#34;http://anolis.oeb.harvard.edu/~liam/R-phylogenetics/phylosig/v0.3/phylosig.R&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">source</span>(<span style="color:#e6db74">&#34;http://anolis.oeb.harvard.edu/~liam/R-phylogenetics/fastBM/v0.4/fastBM.R&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Simulation function physig_sim</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># input: x = number of species in tree</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># output: a vector length two with (K, lamba) </span>
</span></span><span style="display:flex;"><span>physig_sim <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>tree <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">rcoal</span>(x)
</span></span><span style="display:flex;"><span>traits <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">fastBM</span>(tree)
</span></span><span style="display:flex;"><span>physig_k <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">phylosig</span>(tree, traits, method <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;K&#34;</span>)
</span></span><span style="display:flex;"><span>physig_l <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">phylosig</span>(tree, traits, method <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;lambda&#34;</span>)<span style="color:#f92672">$</span>lambda
</span></span><span style="display:flex;"><span>sigs <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(physig_k, physig_l)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">return</span>(sigs)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Run simulation</span>
</span></span><span style="display:flex;"><span>spnumbs <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">5</span>, <span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">15</span>, <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">25</span>, <span style="color:#ae81ff">30</span>, <span style="color:#ae81ff">35</span>, <span style="color:#ae81ff">40</span>, <span style="color:#ae81ff">45</span>, <span style="color:#ae81ff">50</span>, <span style="color:#ae81ff">65</span>, <span style="color:#ae81ff">80</span>, <span style="color:#ae81ff">95</span>)
</span></span><span style="display:flex;"><span>rands <span style="color:#f92672">&lt;-</span> <span style="color:#ae81ff">1000</span>
</span></span><span style="display:flex;"><span>siglist <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">alply</span>( spnumbs, <span style="color:#ae81ff">1</span>, <span style="color:#66d9ef">function</span>(x) <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">replicate</span>(rands, <span style="color:#a6e22e">physig_sim</span>(x))), .progress<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;text&#34;</span>)
</span></span><span style="display:flex;"><span>sigdf <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.data.frame</span>(<span style="color:#a6e22e">do.call</span>(rbind, siglist))
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">names</span>(sigdf) <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;K&#34;</span>, <span style="color:#e6db74">&#34;L&#34;</span>)
</span></span><span style="display:flex;"><span>sigdf<span style="color:#f92672">$</span>numsp_ <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">rep</span>(spnumbs, each<span style="color:#f92672">=</span>rands)
</span></span><span style="display:flex;"><span>sigdf_m <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">melt</span>(sigdf, id <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Plot results</span>
</span></span><span style="display:flex;"><span>plotdf <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ddply</span>(sigdf_m, .(numsp_, variable), summarise, 
</span></span><span style="display:flex;"><span>mean <span style="color:#f92672">=</span> <span style="color:#a6e22e">mean</span>(value),
</span></span><span style="display:flex;"><span>se <span style="color:#f92672">=</span> <span style="color:#a6e22e">sd</span>(value)<span style="color:#f92672">/</span><span style="color:#a6e22e">sqrt</span>(<span style="color:#a6e22e">length</span>(value))
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>limits <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">aes</span>(ymax <span style="color:#f92672">=</span> mean <span style="color:#f92672">+</span> se, ymin <span style="color:#f92672">=</span> mean <span style="color:#f92672">-</span> se)
</span></span><span style="display:flex;"><span>dodge <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">position_dodge</span>(width<span style="color:#f92672">=</span><span style="color:#ae81ff">0.9</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ggplot</span>(plotdf, <span style="color:#a6e22e">aes</span>(x <span style="color:#f92672">=</span> numsp_, y <span style="color:#f92672">=</span> mean, shape <span style="color:#f92672">=</span> variable)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">geom_point</span>(position<span style="color:#f92672">=</span>dodge) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">geom_errorbar</span>(limits, position<span style="color:#f92672">=</span>dodge, width<span style="color:#f92672">=</span><span style="color:#ae81ff">0.25</span>) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">geom_smooth</span>()
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ggsave</span>(<span style="color:#e6db74">&#34;physig_sim.jpeg&#34;</span>)
</span></span></code></pre></div><p><img loading="lazy" src="https://4.bp.blogspot.com/-hY0LQNsBzWc/TdNOJFMZzkI/AAAAAAAAEcg/SYeSCgUfyOY/s640/physig_sim.jpeg" alt=""  />
</p>
]]></description>
    </item>
    <item>
      <title>Comparison of functions for comparative phylogenetics</title>
      <link>http://localhost:1313/2011/05/comparison-of-functions-for-comparative-phylogenetics/</link>
      <pubDate>Wed, 11 May 2011 10:08:00 -0500</pubDate>
      <guid>http://localhost:1313/2011/05/comparison-of-functions-for-comparative-phylogenetics/</guid>
      <description><![CDATA[<p>With all the packages (and beta stage groups of functions) for comparative phylogenetics in R (tested here: picante, geiger, ape, motmot, Liam Revell&rsquo;s functions), I was simply interested in which functions to use in cases where multiple functions exist to do the same thing. I only show default settings, so perhaps these functions would differ under different parameter settings. [I am using a Mac 2.4 GHz i5, 4GB RAM]</p>
<p>Get motmot here: <a href="https://r-forge.r-project.org/R/?group_id=782">https://r-forge.r-project.org/R/?group_id=782</a></p>
<p>Get Liam Revell&rsquo;s functions here: <a href="http://anolis.oeb.harvard.edu/~liam/R-phylogenetics/">http://anolis.oeb.harvard.edu/~liam/R-phylogenetics/</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#75715e"># Load </span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">require</span>(motmot); <span style="color:#a6e22e">require</span>(geiger); <span style="color:#a6e22e">require</span>(picante)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">source</span>(<span style="color:#e6db74">&#34;http://anolis.oeb.harvard.edu/~liam/R-phylogenetics/phylosig/v0.3/phylosig.R&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">source</span>(<span style="color:#e6db74">&#34;http://anolis.oeb.harvard.edu/~liam/R-phylogenetics/fastBM/v0.4/fastBM.R&#34;</span>)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Make tree</span>
</span></span><span style="display:flex;"><span>tree <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">rcoal</span>(<span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Transform branch lengths</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">1000</span>, <span style="color:#a6e22e">transformPhylo</span>(tree, model <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;lambda&#34;</span>, lambda <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.5</span>)) ) <span style="color:#75715e"># motmot</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">1.757</span>   <span style="color:#ae81ff">0.004</span>   <span style="color:#ae81ff">1.762</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">1000</span>, <span style="color:#a6e22e">lambdaTree</span>(tree, <span style="color:#ae81ff">0.9</span>)) ) <span style="color:#75715e"># geiger</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">3.708</span>   <span style="color:#ae81ff">0.008</span>   <span style="color:#ae81ff">3.716</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span>   <span style="color:#75715e"># motmot wins!!!</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Simulate trait evolution</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">1000</span>, <span style="color:#a6e22e">transformPhylo.sim</span>(tree, model <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;bm&#34;</span>)) ) <span style="color:#75715e"># motmot</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">3.732</span>   <span style="color:#ae81ff">0.007</span>   <span style="color:#ae81ff">3.741</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">1000</span>, <span style="color:#a6e22e">rTraitCont</span>(tree, model <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;BM&#34;</span>)) ) <span style="color:#75715e"># ape</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0.312</span>   <span style="color:#ae81ff">0.009</span>   <span style="color:#ae81ff">0.321</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">1000</span>, <span style="color:#a6e22e">fastBM</span>(tree)) ) <span style="color:#75715e"># Revell</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">1.315</span>   <span style="color:#ae81ff">0.005</span>   <span style="color:#ae81ff">1.320</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span>   <span style="color:#75715e"># ape wins!!!</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Phylogenetically independent contrasts</span>
</span></span><span style="display:flex;"><span>trait <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">rnorm</span>(<span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">names</span>(trait) <span style="color:#f92672">&lt;-</span> tree<span style="color:#f92672">$</span>tip.label
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">10000</span>, <span style="color:#a6e22e">pic.motmot</span>(trait, tree)<span style="color:#f92672">$</span>contr[,<span style="color:#ae81ff">1</span>])  ) <span style="color:#75715e"># motmot</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">3.062</span>   <span style="color:#ae81ff">0.007</span>   <span style="color:#ae81ff">3.070</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">10000</span>, <span style="color:#a6e22e">pic</span>(trait, tree)) ) <span style="color:#75715e"># ape</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">2.846</span>   <span style="color:#ae81ff">0.007</span>   <span style="color:#ae81ff">2.853</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span>   <span style="color:#75715e"># ape wins!!!</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Phylogenetic signal, Blomberg&#39;s K</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, <span style="color:#a6e22e">Kcalc</span>(trait, tree))  ) <span style="color:#75715e"># picante</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">1.311</span>   <span style="color:#ae81ff">0.005</span>   <span style="color:#ae81ff">1.316</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, <span style="color:#a6e22e">phylosig</span>(tree, trait, method <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;K&#34;</span>)) ) <span style="color:#75715e"># Revell</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0.201</span>   <span style="color:#ae81ff">0.000</span>   <span style="color:#ae81ff">0.202</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span>   <span style="color:#75715e"># Liam Revell wins!!!</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Ancestral character state estimation</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, <span style="color:#a6e22e">ace</span>(trait, tree)<span style="color:#f92672">$</span>ace) ) <span style="color:#75715e"># ape</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">4.988</span>   <span style="color:#ae81ff">0.018</span>   <span style="color:#ae81ff">5.007</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">system.time</span>( <span style="color:#a6e22e">replicate</span>(<span style="color:#ae81ff">100</span>, <span style="color:#a6e22e">getAncStates</span>(trait, tree)) ) <span style="color:#75715e"># geiger</span>
</span></span><span style="display:flex;"><span>   user  system elapsed 
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">2.253</span>   <span style="color:#ae81ff">0.005</span>   <span style="color:#ae81ff">2.258</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;</span>   <span style="color:#75715e"># geiger wins!!!</span>
</span></span></code></pre></div><p>It&rsquo;s hard to pick an overall winner because not all functions are available in all packages, but there are definitely some functions that are faster than others.</p>
]]></description>
    </item>
  </channel>
</rss>
