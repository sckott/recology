<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Bipartite on Recology</title>
    <link>http://localhost:1313/tags/bipartite/</link>
    <description>Recent content in Bipartite on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Mar 2011 14:09:00 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/bipartite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>basic ggplot2 network graphs ver2</title>
      <link>http://localhost:1313/2011/03/basic-ggplot2-network-graphs-ver2/</link>
      <pubDate>Wed, 23 Mar 2011 14:09:00 -0500</pubDate>
      <guid>http://localhost:1313/2011/03/basic-ggplot2-network-graphs-ver2/</guid>
      <description>I posted last week a simple function to plot networks using ggplot2 package. Here is version 2. I still need to work on figuring out efficient vertex placement.
Changes in version 2:
You have one of three options: use an igraph object, a matrix, or a dataframe (matrices will be converted to data frames within the function) If you have data on food webs similar to that provided in the Takapoto dataset provided in the NetIndices package, you can set trophic = &amp;ldquo;TRUE&amp;rdquo;, and gggraph will use the function TrophInd to assign trophic levels (the y axis value) to each vertex/node.</description>
      <content:encoded><![CDATA[<p>I posted last week a simple function to plot networks using ggplot2 package. Here is version 2. I still need to work on figuring out efficient vertex placement.</p>
<p>Changes in version 2:</p>
<ul>
<li>You have one of three options: use an igraph object, a matrix, or a dataframe (matrices will be converted to data frames within the function)</li>
<li>If you have data on food webs similar to that provided in the Takapoto dataset provided in the NetIndices package, you can set trophic = &ldquo;TRUE&rdquo;, and gggraph will use the function TrophInd to assign trophic levels (the y axis value) to each vertex/node. You have to provide additional information along with this option such as what the imports and exports are, see NetIndices documentation.</li>
<li>I added some simple error checking.</li>
<li>if using method=&ldquo;df&rdquo; and trophic=&ldquo;FALSE&rdquo;, x axis placement of vertices is now done using the function degreex (see inside the fxn), which sorts vertices according to their degree (so the least connected species are on the left of the graph; note that species with the same degree are not stacked on the y-axis because e.g., two vertices of degree=5 would get x=3 then x=4).</li>
</ul>
<hr>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># ggraph Version 2</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">require</span>(bipartite)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">require</span>(igraph)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">require</span>(ggplot2)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># gggraph, version 3 g = an igraph graph object, a matrix, or data frame</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># vplace = type of vertex placement assignment, one of rnorm, runif, etc.</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># method = one of &#39;df&#39; for data frame, &#39;mat&#39; for matrix or &#39;igraph&#39; for an</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># igraph graph object trophic = TRUE or FALSE for using Netindices</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># function TrophInd to determine trophic level (y value in graph)</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># trophinames = columns in matrix or dataframe to use for calculating</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># trophic level import = named or refereced by col# columns of matrix or</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># dataframe to use for import argument of TrophInd export = named or</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># refereced by col# columns of matrix or dataframe to use for export</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># argument of TrophInd dead = named or refereced by col# columns of matrix</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># or dataframe to use for dead argument of TrophInd</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>gggraph <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(g, vplace <span style="color:#f92672">=</span> rnorm, method, trophic <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;FALSE&#34;</span>, trophinames,
</span></span><span style="display:flex;"><span>    import, export) {
</span></span><span style="display:flex;"><span>    degreex <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(x) {
</span></span><span style="display:flex;"><span>        degreecol <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">apply</span>(x, <span style="color:#ae81ff">2</span>, <span style="color:#66d9ef">function</span>(y) <span style="color:#a6e22e">length</span>(y[y <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>]))
</span></span><span style="display:flex;"><span>        degreerow <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">apply</span>(x, <span style="color:#ae81ff">1</span>, <span style="color:#66d9ef">function</span>(y) <span style="color:#a6e22e">length</span>(y[y <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>]))
</span></span><span style="display:flex;"><span>        degrees <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">sort</span>(<span style="color:#a6e22e">c</span>(degreecol, degreerow))
</span></span><span style="display:flex;"><span>        df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(degrees, x <span style="color:#f92672">=</span> <span style="color:#a6e22e">seq</span>(<span style="color:#ae81ff">1</span>, <span style="color:#a6e22e">length</span>(degrees), <span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>        df<span style="color:#f92672">$</span>value <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">rownames</span>(df)
</span></span><span style="display:flex;"><span>        df
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># require igraph</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">require</span>(igraph))
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">stop</span>(<span style="color:#e6db74">&#34;must first install &#39;igraph&#39; package.&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># require ggplot2</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">require</span>(ggplot2))
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">stop</span>(<span style="color:#e6db74">&#34;must first install &#39;ggplot2&#39; package.&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (method <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;df&#34;</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">class</span>(g) <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;matrix&#34;</span>) {
</span></span><span style="display:flex;"><span>            g <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.data.frame</span>(g)
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">class</span>(g) <span style="color:#f92672">!=</span> <span style="color:#e6db74">&#34;data.frame&#34;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">stop</span>(<span style="color:#e6db74">&#34;object must be of class &#39;data.frame.&#39;&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (trophic <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;FALSE&#34;</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># data preparation from adjacency matrix</span>
</span></span><span style="display:flex;"><span>            temp <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(<span style="color:#a6e22e">expand.grid</span>(<span style="color:#a6e22e">dimnames</span>(g))[1<span style="color:#f92672">:</span><span style="color:#ae81ff">2</span>], <span style="color:#a6e22e">as.vector</span>(<span style="color:#a6e22e">as.matrix</span>(g)))
</span></span><span style="display:flex;"><span>            temp <span style="color:#f92672">&lt;-</span> temp<span style="color:#a6e22e">[</span>(temp[, <span style="color:#ae81ff">3</span>] <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>) <span style="color:#f92672">&amp;</span> <span style="color:#f92672">!</span><span style="color:#a6e22e">is.na</span>(temp[, <span style="color:#ae81ff">3</span>]), ]
</span></span><span style="display:flex;"><span>            temp <span style="color:#f92672">&lt;-</span> temp<span style="color:#a6e22e">[sort.list</span>(temp[, <span style="color:#ae81ff">1</span>]), ]
</span></span><span style="display:flex;"><span>            g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(rows <span style="color:#f92672">=</span> temp[, <span style="color:#ae81ff">1</span>], cols <span style="color:#f92672">=</span> temp[, <span style="color:#ae81ff">2</span>], freqint <span style="color:#f92672">=</span> temp[,
</span></span><span style="display:flex;"><span>                <span style="color:#ae81ff">3</span>])
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            g_df<span style="color:#f92672">$</span>id <span style="color:#f92672">&lt;-</span> <span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#a6e22e">length</span>(g_df[, <span style="color:#ae81ff">1</span>])
</span></span><span style="display:flex;"><span>            g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(id <span style="color:#f92672">=</span> g_df[, <span style="color:#ae81ff">4</span>], rows <span style="color:#f92672">=</span> g_df[, <span style="color:#ae81ff">1</span>], cols <span style="color:#f92672">=</span> g_df[,
</span></span><span style="display:flex;"><span>                <span style="color:#ae81ff">2</span>], freqint <span style="color:#f92672">=</span> g_df[, <span style="color:#ae81ff">3</span>])
</span></span><span style="display:flex;"><span>            g_df_ <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">melt</span>(g_df, id <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">4</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            xy_s <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(<span style="color:#a6e22e">degreex</span>(g), y <span style="color:#f92672">=</span> <span style="color:#a6e22e">rnorm</span>(<span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df_<span style="color:#f92672">$</span>value))))
</span></span><span style="display:flex;"><span>            g_df_2 <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">merge</span>(g_df_, xy_s, by <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;value&#34;</span>)
</span></span><span style="display:flex;"><span>        } <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (trophic <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;TRUE&#34;</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># require NetIndices</span>
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">require</span>(NetIndices))
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">stop</span>(<span style="color:#e6db74">&#34;must first install &#39;NetIndices&#39; package.&#34;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># data preparation from adjacency matrix</span>
</span></span><span style="display:flex;"><span>            temp <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(<span style="color:#a6e22e">expand.grid</span>(<span style="color:#a6e22e">dimnames</span>(g[<span style="color:#f92672">-</span>trophinames, <span style="color:#f92672">-</span>trophinames]))[1<span style="color:#f92672">:</span><span style="color:#ae81ff">2</span>],
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">as.vector</span>(<span style="color:#a6e22e">as.matrix</span>(g[<span style="color:#f92672">-</span>trophinames, <span style="color:#f92672">-</span>trophinames])))
</span></span><span style="display:flex;"><span>            temp <span style="color:#f92672">&lt;-</span> temp<span style="color:#a6e22e">[</span>(temp[, <span style="color:#ae81ff">3</span>] <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>) <span style="color:#f92672">&amp;</span> <span style="color:#f92672">!</span><span style="color:#a6e22e">is.na</span>(temp[, <span style="color:#ae81ff">3</span>]), ]
</span></span><span style="display:flex;"><span>            temp <span style="color:#f92672">&lt;-</span> temp<span style="color:#a6e22e">[sort.list</span>(temp[, <span style="color:#ae81ff">1</span>]), ]
</span></span><span style="display:flex;"><span>            g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(rows <span style="color:#f92672">=</span> temp[, <span style="color:#ae81ff">1</span>], cols <span style="color:#f92672">=</span> temp[, <span style="color:#ae81ff">2</span>], freqint <span style="color:#f92672">=</span> temp[,
</span></span><span style="display:flex;"><span>                <span style="color:#ae81ff">3</span>])
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            g_df<span style="color:#f92672">$</span>id <span style="color:#f92672">&lt;-</span> <span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#a6e22e">length</span>(g_df[, <span style="color:#ae81ff">1</span>])
</span></span><span style="display:flex;"><span>            g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(id <span style="color:#f92672">=</span> g_df[, <span style="color:#ae81ff">4</span>], rows <span style="color:#f92672">=</span> g_df[, <span style="color:#ae81ff">1</span>], cols <span style="color:#f92672">=</span> g_df[,
</span></span><span style="display:flex;"><span>                <span style="color:#ae81ff">2</span>], freqint <span style="color:#f92672">=</span> g_df[, <span style="color:#ae81ff">3</span>])
</span></span><span style="display:flex;"><span>            g_df_ <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">melt</span>(g_df, id <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">4</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            xy_s <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(value <span style="color:#f92672">=</span> <span style="color:#a6e22e">unique</span>(g_df_<span style="color:#f92672">$</span>value), x <span style="color:#f92672">=</span> <span style="color:#a6e22e">rnorm</span>(<span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df_<span style="color:#f92672">$</span>value))),
</span></span><span style="display:flex;"><span>                y <span style="color:#f92672">=</span> <span style="color:#a6e22e">TrophInd</span>(g, Import <span style="color:#f92672">=</span> import, Export <span style="color:#f92672">=</span> export)[, <span style="color:#ae81ff">1</span>])
</span></span><span style="display:flex;"><span>            g_df_2 <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">merge</span>(g_df_, xy_s, by <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;value&#34;</span>)
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># plotting</span>
</span></span><span style="display:flex;"><span>        p <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ggplot</span>(g_df_2, <span style="color:#a6e22e">aes</span>(x, y)) <span style="color:#f92672">+</span> <span style="color:#a6e22e">geom_point</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">5</span>) <span style="color:#f92672">+</span> <span style="color:#a6e22e">geom_line</span>(<span style="color:#a6e22e">aes</span>(size <span style="color:#f92672">=</span> freqint,
</span></span><span style="display:flex;"><span>            group <span style="color:#f92672">=</span> id)) <span style="color:#f92672">+</span> <span style="color:#a6e22e">geom_text</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>, hjust <span style="color:#f92672">=</span> <span style="color:#ae81ff">1.5</span>, <span style="color:#a6e22e">aes</span>(label <span style="color:#f92672">=</span> value)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">theme_bw</span>() <span style="color:#f92672">+</span> <span style="color:#a6e22e">opts</span>(panel.grid.major <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), panel.grid.minor <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>            axis.text.x <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), axis.text.y <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), axis.title.x <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>            axis.title.y <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), axis.ticks <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), panel.border <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>            legend.position <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;none&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        p  <span style="color:#75715e"># return graph</span>
</span></span><span style="display:flex;"><span>    } <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (method <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;igraph&#34;</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">class</span>(g) <span style="color:#f92672">!=</span> <span style="color:#e6db74">&#34;igraph&#34;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">stop</span>(<span style="color:#e6db74">&#34;object must be of class &#39;igraph.&#39;&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># data preparation from igraph object</span>
</span></span><span style="display:flex;"><span>        g_ <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">get.edgelist</span>(g)
</span></span><span style="display:flex;"><span>        g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.data.frame</span>(g_)
</span></span><span style="display:flex;"><span>        g_df<span style="color:#f92672">$</span>id <span style="color:#f92672">&lt;-</span> <span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#a6e22e">length</span>(g_df[, <span style="color:#ae81ff">1</span>])
</span></span><span style="display:flex;"><span>        g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">melt</span>(g_df, id <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>)
</span></span><span style="display:flex;"><span>        xy_s <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(value <span style="color:#f92672">=</span> <span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value), x <span style="color:#f92672">=</span> <span style="color:#a6e22e">vplace</span>(<span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value))),
</span></span><span style="display:flex;"><span>            y <span style="color:#f92672">=</span> <span style="color:#a6e22e">vplace</span>(<span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value))))
</span></span><span style="display:flex;"><span>        g_df2 <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">merge</span>(g_df, xy_s, by <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;value&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># plotting</span>
</span></span><span style="display:flex;"><span>        p <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ggplot</span>(g_df2, <span style="color:#a6e22e">aes</span>(x, y)) <span style="color:#f92672">+</span> <span style="color:#a6e22e">geom_point</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">2</span>) <span style="color:#f92672">+</span> <span style="color:#a6e22e">geom_line</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.3</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">aes</span>(group <span style="color:#f92672">=</span> id, linetype <span style="color:#f92672">=</span> id)) <span style="color:#f92672">+</span> <span style="color:#a6e22e">geom_text</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>, hjust <span style="color:#f92672">=</span> <span style="color:#ae81ff">1.5</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">aes</span>(label <span style="color:#f92672">=</span> value)) <span style="color:#f92672">+</span> <span style="color:#a6e22e">theme_bw</span>() <span style="color:#f92672">+</span> <span style="color:#a6e22e">opts</span>(panel.grid.major <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>            panel.grid.minor <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), axis.text.x <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), axis.text.y <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>            axis.title.x <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), axis.title.y <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), axis.ticks <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>            panel.border <span style="color:#f92672">=</span> <span style="color:#a6e22e">theme_blank</span>(), legend.position <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;none&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        p  <span style="color:#75715e"># return graph</span>
</span></span><span style="display:flex;"><span>    } <span style="color:#66d9ef">else</span> <span style="color:#a6e22e">stop</span>(<span style="color:#a6e22e">paste</span>(<span style="color:#e6db74">&#34;do not recognize method = \&#34;&#34;</span>, method, <span style="color:#e6db74">&#34;\&#34;;\nmethods are \&#34;df\&#34; and \&#34;igraph\&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>        sep <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>))
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># Eg</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(NetIndices)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">data</span>(Takapoto)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">gggraph</span>(Takapoto, vplace <span style="color:#f92672">=</span> rnorm, method <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;df&#34;</span>, trophic <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;TRUE&#34;</span>, trophinames <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">8</span><span style="color:#f92672">:</span><span style="color:#ae81ff">10</span>),
</span></span><span style="display:flex;"><span>    import <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;CO2&#34;</span>, export <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;CO2&#34;</span>, <span style="color:#e6db74">&#34;Sedimentation&#34;</span>, <span style="color:#e6db74">&#34;Grazing&#34;</span>))
</span></span></code></pre></div><p><img loading="lazy" src="/gggraph1.png" alt="center"  />
</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>plants <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">round</span>(<span style="color:#a6e22e">rlnorm</span>(n <span style="color:#f92672">=</span> <span style="color:#ae81ff">5</span>, meanlog <span style="color:#f92672">=</span> <span style="color:#ae81ff">2</span>, sdlog <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>animals <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">round</span>(<span style="color:#a6e22e">rlnorm</span>(n <span style="color:#f92672">=</span> <span style="color:#ae81ff">5</span>, meanlog <span style="color:#f92672">=</span> <span style="color:#ae81ff">2</span>, sdlog <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>plants <span style="color:#f92672">&lt;-</span> plants <span style="color:#f92672">*</span> (<span style="color:#ae81ff">100</span><span style="color:#f92672">/</span><span style="color:#a6e22e">sum</span>(plants))
</span></span><span style="display:flex;"><span>animals <span style="color:#f92672">&lt;-</span> animals <span style="color:#f92672">*</span> (<span style="color:#ae81ff">100</span><span style="color:#f92672">/</span><span style="color:#a6e22e">sum</span>(animals))
</span></span><span style="display:flex;"><span>z <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">r2dtable</span>(<span style="color:#ae81ff">1</span>, animals, plants)  <span style="color:#75715e"># if errors, rerun again until no error</span>
</span></span><span style="display:flex;"><span>z <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.data.frame</span>(z[[1]])
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">rownames</span>(z) <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;a&#34;</span>, <span style="color:#e6db74">&#34;b&#34;</span>, <span style="color:#e6db74">&#34;c&#34;</span>, <span style="color:#e6db74">&#34;d&#34;</span>, <span style="color:#e6db74">&#34;e&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">gggraph</span>(z, vplace <span style="color:#f92672">=</span> rnorm, method <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;df&#34;</span>, trophic <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;FALSE&#34;</span>)
</span></span></code></pre></div><p><img loading="lazy" src="/gggraph2.png" alt="center"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>basic ggplot2 network graphs</title>
      <link>http://localhost:1313/2011/03/basic-ggplot2-network-graphs/</link>
      <pubDate>Thu, 17 Mar 2011 08:35:00 -0500</pubDate>
      <guid>http://localhost:1313/2011/03/basic-ggplot2-network-graphs/</guid>
      <description>I have been looking around on the web and have not found anything yet related to using ggplot2 for making graphs/networks. I put together a few functions to make very simple graphs. The bipartite function especially is not ideal, as of course we only want to allow connections between unlike nodes, not all nodes. These functions do not, obviously, take full advantage of the power of ggplot2, but it’s a start.</description>
      <content:encoded><![CDATA[<p>I have been looking around on the web and have not found anything yet related to using ggplot2 for making graphs/networks. I put together a few functions to make very simple graphs. The bipartite function especially is not ideal, as of course we only want to allow connections between unlike nodes, not all nodes. These functions do not, obviously, take full advantage of the power of ggplot2, but it’s a start.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># ggplot network graphics functions</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># g = an igraph graph object, any igraph graph object</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># vplace = type of vertex placement assignment, one of rnorm, runif, etc.</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>gggraph <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(g, vplace <span style="color:#f92672">=</span> rnorm) {
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> <span style="color:#a6e22e">require</span>(ggplot2)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> g_ <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">get.edgelist</span>(g)
</span></span><span style="display:flex;"><span> g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.data.frame</span>(g_)
</span></span><span style="display:flex;"><span> g_df<span style="color:#f92672">$</span>id <span style="color:#f92672">&lt;-</span> <span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#a6e22e">length</span>(g_df[,<span style="color:#ae81ff">1</span>])
</span></span><span style="display:flex;"><span> g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">melt</span>(g_df, id<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>)
</span></span><span style="display:flex;"><span> xy_s <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(value <span style="color:#f92672">=</span> <span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value), 
</span></span><span style="display:flex;"><span>  x <span style="color:#f92672">=</span> <span style="color:#a6e22e">vplace</span>(<span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value))), 
</span></span><span style="display:flex;"><span>  y <span style="color:#f92672">=</span> <span style="color:#a6e22e">vplace</span>(<span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value))))
</span></span><span style="display:flex;"><span> g_df2 <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">merge</span>(g_df, xy_s, by <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;value&#34;</span>) 
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> p <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ggplot</span>(g_df2, <span style="color:#a6e22e">aes</span>(x, y)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">geom_point</span>() <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">geom_line</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.3</span>, <span style="color:#a6e22e">aes</span>(group <span style="color:#f92672">=</span> id, linetype <span style="color:#f92672">=</span> id)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">geom_text</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>, hjust <span style="color:#f92672">=</span> <span style="color:#ae81ff">1.5</span>, <span style="color:#a6e22e">aes</span>(label <span style="color:#f92672">=</span> value)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">theme_bw</span>() <span style="color:#f92672">+</span> 
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">opts</span>(panel.grid.major<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(), 
</span></span><span style="display:flex;"><span>   panel.grid.minor<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(), 
</span></span><span style="display:flex;"><span>   axis.text.x<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   axis.text.y<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   axis.title.x<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   axis.title.y<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   axis.ticks<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   panel.border<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   legend.position<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;none&#34;</span>)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> p
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>ggbigraph <span style="color:#f92672">&lt;-</span> <span style="color:#66d9ef">function</span>(g) {
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> <span style="color:#a6e22e">require</span>(ggplot2) 
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> g_ <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">get.edgelist</span>(g)
</span></span><span style="display:flex;"><span> g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">as.data.frame</span>(g_)
</span></span><span style="display:flex;"><span> g_df<span style="color:#f92672">$</span>id <span style="color:#f92672">&lt;-</span> <span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#a6e22e">length</span>(g_df[,<span style="color:#ae81ff">1</span>])
</span></span><span style="display:flex;"><span> g_df <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">melt</span>(g_df, id<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>)
</span></span><span style="display:flex;"><span> xy_s <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">data.frame</span>(value <span style="color:#f92672">=</span> <span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value), 
</span></span><span style="display:flex;"><span>  x <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">rep</span>(<span style="color:#ae81ff">2</span>, <span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value))<span style="color:#f92672">/</span><span style="color:#ae81ff">2</span>), <span style="color:#a6e22e">rep</span>(<span style="color:#ae81ff">4</span>, <span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value))<span style="color:#f92672">/</span><span style="color:#ae81ff">2</span>)),
</span></span><span style="display:flex;"><span>  y <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#a6e22e">seq</span>(<span style="color:#ae81ff">1</span>, <span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(g_df<span style="color:#f92672">$</span>value))<span style="color:#f92672">/</span><span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">1</span>), <span style="color:#ae81ff">2</span>))
</span></span><span style="display:flex;"><span> g_df2 <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">merge</span>(g_df, xy_s, by <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;value&#34;</span>) 
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> p <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ggplot</span>(g_df2, <span style="color:#a6e22e">aes</span>(x, y)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">geom_point</span>() <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">geom_line</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.3</span>, <span style="color:#a6e22e">aes</span>(group <span style="color:#f92672">=</span> id, linetype <span style="color:#f92672">=</span> id)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">geom_text</span>(size <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>, hjust <span style="color:#f92672">=</span> <span style="color:#ae81ff">1.5</span>, <span style="color:#a6e22e">aes</span>(label <span style="color:#f92672">=</span> value)) <span style="color:#f92672">+</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">theme_bw</span>() <span style="color:#f92672">+</span> 
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">opts</span>(panel.grid.major<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(), 
</span></span><span style="display:flex;"><span>   panel.grid.minor<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(), 
</span></span><span style="display:flex;"><span>   axis.text.x<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   axis.text.y<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   axis.title.x<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   axis.title.y<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   axis.ticks<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   panel.border<span style="color:#f92672">=</span><span style="color:#a6e22e">theme_blank</span>(),
</span></span><span style="display:flex;"><span>   legend.position<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;none&#34;</span>)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> p
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>Created by Pretty R at inside<span style="color:#f92672">-</span>R.org
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>g <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">erdos.renyi.game</span>(<span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">5</span>, type<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;gnm&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">gggraph</span>(g, rnorm)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>g <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">barabasi.game</span>(<span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">gggraph</span>(g, rnorm)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>g <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">grg.game</span>(<span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">0.45</span>, torus<span style="color:#f92672">=</span><span style="color:#66d9ef">FALSE</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">gggraph</span>(g, rnorm)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>g <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">growing.random.game</span>(<span style="color:#ae81ff">20</span>, citation<span style="color:#f92672">=</span><span style="color:#66d9ef">FALSE</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">gggraph</span>(g, rnorm)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>g <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">watts.strogatz.game</span>(<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">5</span>, <span style="color:#ae81ff">0.05</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">gggraph</span>(g, rnorm)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># A bipartite graphs</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>g <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">grg.game</span>(<span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">0.45</span>, torus<span style="color:#f92672">=</span><span style="color:#66d9ef">FALSE</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ggbigraph</span>(g)
</span></span></code></pre></div><!-- raw HTML omitted -->
<p><img loading="lazy" src="/gggraph/erdos.jpeg" alt=""  />

<img loading="lazy" src="/gggraph/barabasi.jpeg" alt=""  />

<img loading="lazy" src="/gggraph/grg.jpeg" alt=""  />

<img loading="lazy" src="/gggraph/growing.jpeg" alt=""  />

<img loading="lazy" src="/gggraph/watts.jpeg" alt=""  />

<img loading="lazy" src="/gggraph/grg-bipartite.jpeg" alt=""  />
</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
