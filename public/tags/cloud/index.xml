<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cloud on Recology</title>
    <link>http://localhost:1313/tags/cloud/</link>
    <description>Recent content in Cloud on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Oct 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>analogsea - an R client for the Digital Ocean API</title>
      <link>http://localhost:1313/2015/10/analogsea-cran/</link>
      <pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2015/10/analogsea-cran/</guid>
      <description><![CDATA[<p><code>analogsea</code> is now on CRAN. We started developing the pkg back in <a href="https://github.com/sckott/analogsea/commit/b129164dd87969d2fc6bcf3b51576fe1da932fdb">May 2014</a>, but just
now getting the first version on CRAN. It&rsquo;s a collaboration with <a href="https://had.co.nz/">Hadley</a> and <a href="https://github.com/wch/">Winston Chang</a>.</p>
<p>Most of <code>analogsea</code> package is for interacting with the <a href="https://developers.digitalocean.com/documentation/v2/">Digital Ocean API</a>, including:</p>
<ul>
<li>Manage domains</li>
<li>Manage ssh keys</li>
<li>Get actions</li>
<li>Manage images</li>
<li>Manage droplets (servers)</li>
</ul>
<p>A number of convenience functions are included for doing tasks (e.g., resizing
a droplet) that aren&rsquo;t supported by Digital Ocean&rsquo;s API out of the box (i.e.,
there&rsquo;s no API route for it).</p>
<p>In addition to wrapping their API routes, we provide other functionality, e.g.:</p>
<ul>
<li>execute shell commands on a droplet (server)</li>
<li>execute R commands on a droplet</li>
<li>install R</li>
<li>install RStudio server</li>
<li>install Shiny server</li>
</ul>
<p>Other functionality we&rsquo;re working on, not yet available:</p>
<ul>
<li>install OpenCPU</li>
<li>use <code>packrat</code> to move projects from local to server, and vice versa</li>
</ul>
<p>See also: two previous blog posts on this package <a href="https://recology.info/2014/05/analogsea/">https://recology.info/2014/05/analogsea/</a> and <a href="https://recology.info/2014/06/analogsea-v01/">https://recology.info/2014/06/analogsea-v01/</a></p>
<h2 id="install">Install</h2>
<p>Binaries are not yet on CRAN, but you can install from source.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#75715e"># install.packages(&#34;analogsea&#34;) # when binaries available</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">install.packages</span>(<span style="color:#e6db74">&#34;analogsea&#34;</span>, repos <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;https://cran.r-project.org&#34;</span>, type <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;source&#34;</span>)
</span></span></code></pre></div><p>Or install development version from GitHub</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>devtools<span style="color:#f92672">::</span><span style="color:#a6e22e">install_github</span>(<span style="color:#e6db74">&#34;sckott/analogsea&#34;</span>)
</span></span></code></pre></div><p>Load <code>analogsea</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(<span style="color:#e6db74">&#34;analogsea&#34;</span>)
</span></span></code></pre></div><h2 id="etc">Etc.</h2>
<p>As this post is mostly to announce that this pkg is on CRAN now, I won&rsquo;t go through examples, but instead point you to the package <a href="https://github.com/sckott/analogsea/blob/master/README.md">README</a> and <a href="https://github.com/sckott/analogsea/blob/master/vignettes/doapi.Rmd">vignette</a> in which we cover
creating a Digital Ocean account, authenticating, and have many examples.</p>
<h2 id="feedback">Feedback</h2>
<p>Let us know what you think. We&rsquo;d love to hear about any problems, use cases, feature requests.</p>
]]></description>
    </item>
    <item>
      <title>analogsea - v0.1 notes</title>
      <link>http://localhost:1313/2014/06/analogsea-v01/</link>
      <pubDate>Wed, 18 Jun 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/06/analogsea-v01/</guid>
      <description><![CDATA[<p>My <a href="http://recology.info/2014/05/analogsea/">last blog </a> post introduced the R package I&rsquo;m working on <code>analogsea</code>, an R client for the Digital Ocean API.</p>
<p>Things have changed a bit, including fillig out more functions for all API endpoints, and incorparting feedback from Hadley and Karthik. The package is as <code>v0.1</code> now, so I thought I&rsquo;d say a few things about how it works.</p>
<p>Note that Digital Ocean&rsquo;s v2 API is in beta stage now, so the current version of <code>analogsea</code> at <code>v0.1</code> works with their v1 API. The <a href="https://github.com/sckott/analogsea/tree/v2">v2 branch of analogsea</a> is being developed for their v2 API.</p>
<p>If you sign up for an account with Digital Ocean use this referral link: <a href="https://www.digitalocean.com/?refcode=0740f5169634">https://www.digitalocean.com/?refcode=0740f5169634</a> so I can earn some credits. thx :)</p>
<p>First, installation</p>
<p>Note: I did try to submit to CRAN, but Ripley complained about the package name so I&rsquo;d rather not waste my time esp since people using this likely will already know about <code>install_github()</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>devtools<span style="color:#f92672">::</span><span style="color:#a6e22e">install_github</span>(<span style="color:#e6db74">&#34;sckott/analogsea&#34;</span>)
</span></span></code></pre></div><p>Load the library</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(<span style="color:#e6db74">&#34;analogsea&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>## Loading required package: magrittr
</code></pre><p>Authenticate has changed a bit. Whereas auth details were stored as environment variables before, I&rsquo;m just using R&rsquo;s options. <code>do_auth()</code> will ask for your Digital Ocean details. You can enter them each R session, or store them in your <code>.Rprofile</code> file. After successful authentication, each function simply looks for your auth details with <code>getOption()</code>.  You don&rsquo;t have to use this function first, though if you don&rsquo;t your first call to another function will ask for auth details.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">do_auth</span>()
</span></span></code></pre></div><p><code>sizes</code>, <code>images</code>, and <code>keys</code> functions have changed a bit, by default outputting a <code>data.frame</code> now.</p>
<p>List available regions</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">regions</span>()
</span></span></code></pre></div><pre tabindex="0"><code>##   id            name slug
## 1  3 San Francisco 1 sfo1
## 2  4      New York 2 nyc2
## 3  5     Amsterdam 2 ams2
## 4  6     Singapore 1 sgp1
</code></pre><p>List available sizes</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">sizes</span>()
</span></span></code></pre></div><pre tabindex="0"><code>##   id  name  slug memory cpu disk cost_per_hour cost_per_month
## 1 66 512MB 512mb    512   1   20       0.00744            5.0
## 2 63   1GB   1gb   1024   1   30       0.01488           10.0
## 3 62   2GB   2gb   2048   2   40       0.02976           20.0
## 4 64   4GB   4gb   4096   2   60       0.05952           40.0
## 5 65   8GB   8gb   8192   4   80       0.11905           80.0
## 6 61  16GB  16gb  16384   8  160       0.23810          160.0
## 7 60  32GB  32gb  32768  12  320       0.47619          320.0
## 8 70  48GB  48gb  49152  16  480       0.71429          480.0
## 9 69  64GB  64gb  65536  20  640       0.95238          640.0
</code></pre><p>List available images</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">head</span>(<span style="color:#a6e22e">images</span>())
</span></span></code></pre></div><pre tabindex="0"><code>##        id                  name             slug distribution public sfo1
## 1 3209452 rstudioserverssh_snap             &lt;NA&gt;       Ubuntu  FALSE    1
## 2    1601        CentOS 5.8 x64   centos-5-8-x64       CentOS   TRUE    1
## 3    1602        CentOS 5.8 x32   centos-5-8-x32       CentOS   TRUE    1
## 4   12573        Debian 6.0 x64   debian-6-0-x64       Debian   TRUE    1
## 5   12575        Debian 6.0 x32   debian-6-0-x32       Debian   TRUE    1
## 6   14097      Ubuntu 10.04 x64 ubuntu-10-04-x64       Ubuntu   TRUE    1
##   nyc1 ams1 nyc2 ams2 sgp1
## 1   NA   NA   NA   NA   NA
## 2    1    1    1    1    1
## 3    1    1    1    1    1
## 4    1    1    1    1    1
## 5    1    1    1    1    1
## 6    1    1    1    1    1
</code></pre><p>List ssh keys</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">keys</span>()
</span></span></code></pre></div><pre tabindex="0"><code>## $ssh_keys
## $ssh_keys[[1]]
## $ssh_keys[[1]]$id
## [1] 89103
##
## $ssh_keys[[1]]$name
## [1] &#34;Scott Chamberlain&#34;
</code></pre><p>One change that&rsquo;s of interest is that most of the various <code>droplets_*()</code> functions take in the outputs of other <code>droplets_*()</code> functions. This means that we can pipe outputs of one <code>droplets_*()</code> function to another, including non-<code>droplet_*</code> functions (see examples).</p>
<p>Let&rsquo;s create a droplet:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>(res <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">droplets_new</span>(name<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;foo&#34;</span>, size_slug <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;512mb&#39;</span>, image_slug <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;ubuntu-14-04-x64&#39;</span>, region_slug <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;sfo1&#39;</span>, ssh_key_ids <span style="color:#f92672">=</span> <span style="color:#ae81ff">89103</span>))
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>id
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">1880805</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>name
</span></span><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;foo&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>image_id
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">3240036</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>size_id
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">66</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>event_id
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">26711810</span>
</span></span></code></pre></div><p>List my droplets</p>
<p>This function used to be <code>do_droplets_get()</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">droplets</span>()
</span></span></code></pre></div><pre tabindex="0"><code>## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets[[1]]
## $droplets[[1]]$id
## [1] 1880805
##
## $droplets[[1]]$name
## [1] &#34;foo&#34;
##
## $droplets[[1]]$image_id
## [1] 3240036
##
## $droplets[[1]]$size_id
## [1] 66
##
## $droplets[[1]]$region_id
## [1] 3
##
## $droplets[[1]]$backups_active
## [1] FALSE
##
## $droplets[[1]]$ip_address
## [1] &#34;162.243.152.56&#34;
##
## $droplets[[1]]$private_ip_address
## NULL
##
## $droplets[[1]]$locked
## [1] FALSE
##
## $droplets[[1]]$status
## [1] &#34;active&#34;
##
## $droplets[[1]]$created_at
## [1] &#34;2014-06-18T14:15:35Z&#34;
##
##
##
## $event_id
## NULL
</code></pre><p>As mentioned above we can now pipe output of <code>droplet*()</code> functions to other <code>droplet*()</code> functions.</p>
<p>Here, pipe output of lising droplets <code>droplets()</code> to the <code>events()</code> function</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">droplets</span>() <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">events</span>()
</span></span></code></pre></div><pre tabindex="0"><code>## Error: No event id found
</code></pre><p>In this case there were no event ids to get event data on.</p>
<p>Here, we&rsquo;ll get details for the droplet we just created, then pipe that to <code>droplets_power_off()</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">droplets</span>(<span style="color:#ae81ff">1880805</span>) <span style="color:#f92672">%&gt;%</span> droplets_power_off
</span></span></code></pre></div><pre tabindex="0"><code>## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets$droplet_ids
## [1] 1880805
##
## $droplets$droplets
## $droplets$droplets$id
## [1] 1880805
##
## $droplets$droplets$name
## [1] &#34;foo&#34;
##
## $droplets$droplets$image_id
## [1] 3240036
##
## $droplets$droplets$size_id
## [1] 66
##
## $droplets$droplets$region_id
## [1] 3
##
## $droplets$droplets$backups_active
## [1] FALSE
##
## $droplets$droplets$ip_address
## [1] &#34;162.243.152.56&#34;
##
## $droplets$droplets$private_ip_address
## NULL
##
## $droplets$droplets$locked
## [1] FALSE
##
## $droplets$droplets$status
## [1] &#34;active&#34;
##
## $droplets$droplets$created_at
## [1] &#34;2014-06-18T14:15:35Z&#34;
##
## $droplets$droplets$backups
## list()
##
## $droplets$droplets$snapshots
## list()
##
##
## $droplets$event_id
## NULL
##
##
## $event_id
## [1] 26714109
</code></pre><p>Then pipe it again to <code>droplets_power_on()</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">droplets</span>(<span style="color:#ae81ff">1880805</span>) <span style="color:#f92672">%&gt;%</span>
</span></span><span style="display:flex;"><span>  droplets_power_on
</span></span></code></pre></div><pre tabindex="0"><code>## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets$droplet_ids
## [1] 1880805
##
## $droplets$droplets
## $droplets$droplets$id
## [1] 1880805
##
## $droplets$droplets$name
## [1] &#34;foo&#34;
##
## $droplets$droplets$image_id
## [1] 3240036
##
## $droplets$droplets$size_id
## [1] 66
##
## $droplets$droplets$region_id
## [1] 3
##
## $droplets$droplets$backups_active
## [1] FALSE
##
## $droplets$droplets$ip_address
## [1] &#34;162.243.152.56&#34;
##
## $droplets$droplets$private_ip_address
## NULL
##
## $droplets$droplets$locked
## [1] FALSE
##
## $droplets$droplets$status
## [1] &#34;off&#34;
##
## $droplets$droplets$created_at
## [1] &#34;2014-06-18T14:15:35Z&#34;
##
## $droplets$droplets$backups
## list()
##
## $droplets$droplets$snapshots
## list()
##
##
## $droplets$event_id
## NULL
##
##
## $event_id
## [1] 26714152
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">Sys.sleep</span>(<span style="color:#ae81ff">6</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">droplets</span>(<span style="color:#ae81ff">1880805</span>)<span style="color:#f92672">$</span>droplets<span style="color:#f92672">$</span>status
</span></span></code></pre></div><pre tabindex="0"><code>## [1] &#34;off&#34;
</code></pre><p>Why not use more pipes?</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">droplets</span>(<span style="color:#ae81ff">1880805</span>) <span style="color:#f92672">%&gt;%</span>
</span></span><span style="display:flex;"><span>  droplets_power_off <span style="color:#f92672">%&gt;%</span>
</span></span><span style="display:flex;"><span>  droplets_power_on <span style="color:#f92672">%&gt;%</span>
</span></span><span style="display:flex;"><span>  events
</span></span></code></pre></div><hr>
<p>Last time I talked about installing R, RStudio, etc. on a droplet. I&rsquo;m still working out bugs in that stuff, but do test out so it can get better faster. See <code>do_install()</code>.</p>
]]></description>
    </item>
    <item>
      <title>analogsea - an R client for the Digital Ocean API</title>
      <link>http://localhost:1313/2014/05/analogsea/</link>
      <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/05/analogsea/</guid>
      <description><![CDATA[<p>I think this package name is my best yet. Maybe it doesn&rsquo;t make sense though? At least it did at the time&hellip;</p>
<p>Anyway, the main motivation for this package was to be able to automate spinning up Linux boxes to do cloud R/RStudio work. Of course if you are a command line native this is all easy for you, but if you are afraid of the command line and/or just don&rsquo;t want to deal with it, this tool will hopefully help.</p>
<p>Most of the functions in this package wrap the Digital Ocean API. So you can do things like create a new <em>droplet</em>, get information on your droplets, <em>destroy</em> droplets, get information on available images, make snapshots, etc. Basically everything you can do from their website you can do here. Note that all functions are prefixed with <code>do_</code> (for Digital Ocean).</p>
<p>The droplet creation part is what we can leverage to spin up a cloud machine to then install R on, and optionally RStudio server, and even RStudio Shiny server. This allows you to stay within R entirely, not having to go to <code>ssh</code> into the Linux machine itself or go to the Digital Ocean website (after initial setup of course).</p>
<p>If you try this, I recommend using this on R on the command line as you can more easily kill the R session if something goes wrong, and quickly open a new tab/window to <code>ssh</code> into the Linux machine if you want.</p>
<p>First, installation</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>devtools<span style="color:#f92672">::</span><span style="color:#a6e22e">install_github</span>(<span style="color:#e6db74">&#34;sckott/analogsea&#34;</span>)
</span></span></code></pre></div><p>Load the library</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">library</span>(<span style="color:#e6db74">&#34;analogsea&#34;</span>)
</span></span></code></pre></div><p>Firt, authenticate. This will ask for your Digital Ocean details. You can enter them each R session, or store them in your <code>.Renviron</code> file. After successful authentication, each function simply looks for your auth details with <code>Sys.getenv()</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">do_auth</span>()
</span></span></code></pre></div><p>List available regions</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">sapply</span>(<span style="color:#a6e22e">do_regions</span>()<span style="color:#f92672">$</span>regions, <span style="color:#e6db74">&#34;[[&#34;</span>, <span style="color:#e6db74">&#34;name&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>## [1] &#34;San Francisco 1&#34; &#34;New York 2&#34;      &#34;Amsterdam 2&#34;     &#34;Singapore 1&#34;
</code></pre><p>List available images</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">sapply</span>(<span style="color:#a6e22e">do_images</span>()<span style="color:#f92672">$</span>images, <span style="color:#e6db74">&#34;[[&#34;</span>, <span style="color:#e6db74">&#34;name&#34;</span>)
</span></span></code></pre></div><pre tabindex="0"><code>##  [1] &#34;rstudioserverssh_snap&#34;                          
##  [2] &#34;CentOS 5.8 x64&#34;                                 
##  [3] &#34;CentOS 5.8 x32&#34;                                 
##  [4] &#34;Debian 6.0 x64&#34;                                 
##  [5] &#34;Debian 6.0 x32&#34;                                 
##  [6] &#34;Ubuntu 10.04 x64&#34;                               
##  [7] &#34;Ubuntu 10.04 x32&#34;                               
##  [8] &#34;Arch Linux 2013.05 x64&#34;                         
##  [9] &#34;Arch Linux 2013.05 x32&#34;                         
## [10] &#34;CentOS 6.4 x32&#34;                                 
## [11] &#34;CentOS 6.4 x64&#34;                                 
## [12] &#34;Ubuntu 12.04.4 x32&#34;                             
## [13] &#34;Ubuntu 12.04.4 x64&#34;                             
## [14] &#34;Ubuntu 13.10 x32&#34;                               
## [15] &#34;Ubuntu 13.10 x64&#34;                               
## [16] &#34;Fedora 19 x32&#34;                                  
## [17] &#34;Fedora 19 x64&#34;                                  
## [18] &#34;MEAN on Ubuntu 12.04.4&#34;                         
## [19] &#34;Ghost 0.4.2 on Ubuntu 12.04&#34;                    
## [20] &#34;Wordpress on Ubuntu 13.10&#34;                      
## [21] &#34;Ruby on Rails on Ubuntu 12.10 (Nginx + Unicorn)&#34;
## [22] &#34;Redmine on Ubuntu 12.04&#34;                        
## [23] &#34;Ubuntu 14.04 x32&#34;                               
## [24] &#34;Ubuntu 14.04 x64&#34;                               
## [25] &#34;Fedora 20 x32&#34;                                  
## [26] &#34;Fedora 20 x64&#34;                                  
## [27] &#34;Dokku v0.2.3 on Ubuntu 14.04&#34;                   
## [28] &#34;Debian 7.0 x64&#34;                                 
## [29] &#34;Debian 7.0 x32&#34;                                 
## [30] &#34;CentOS 6.5 x64&#34;                                 
## [31] &#34;CentOS 6.5 x32&#34;                                 
## [32] &#34;Docker 0.11.1 on Ubuntu 13.10 x64&#34;              
## [33] &#34;Django on Ubuntu 14.04&#34;                         
## [34] &#34;LAMP on Ubuntu 14.04&#34;                           
## [35] &#34;node-v0.10.28 on Ubuntu 14.04&#34;                  
## [36] &#34;GitLab 6.9.0 CE&#34;
</code></pre><p>List available sizes</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">do.call</span>(rbind, <span style="color:#a6e22e">do_sizes</span>()<span style="color:#f92672">$</span>sizes)
</span></span></code></pre></div><pre tabindex="0"><code>##       id name    slug    memory cpu disk cost_per_hour cost_per_month
##  [1,] 66 &#34;512MB&#34; &#34;512mb&#34; 512    1   20   0.00744       &#34;5.0&#34;         
##  [2,] 63 &#34;1GB&#34;   &#34;1gb&#34;   1024   1   30   0.01488       &#34;10.0&#34;        
##  [3,] 62 &#34;2GB&#34;   &#34;2gb&#34;   2048   2   40   0.02976       &#34;20.0&#34;        
##  [4,] 64 &#34;4GB&#34;   &#34;4gb&#34;   4096   2   60   0.05952       &#34;40.0&#34;        
##  [5,] 65 &#34;8GB&#34;   &#34;8gb&#34;   8192   4   80   0.1191        &#34;80.0&#34;        
##  [6,] 61 &#34;16GB&#34;  &#34;16gb&#34;  16384  8   160  0.2381        &#34;160.0&#34;       
##  [7,] 60 &#34;32GB&#34;  &#34;32gb&#34;  32768  12  320  0.4762        &#34;320.0&#34;       
##  [8,] 70 &#34;48GB&#34;  &#34;48gb&#34;  49152  16  480  0.7143        &#34;480.0&#34;       
##  [9,] 69 &#34;64GB&#34;  &#34;64gb&#34;  65536  20  640  0.9524        &#34;640.0&#34;
</code></pre><p>Let&rsquo;s create a droplet:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span>(res <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">do_droplets_new</span>(name<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;foo&#34;</span>, size_slug <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;512mb&#39;</span>, image_slug <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;ubuntu-14-04-x64&#39;</span>, region_slug <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;sfo1&#39;</span>, ssh_key_ids <span style="color:#f92672">=</span> <span style="color:#ae81ff">89103</span>))
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#f92672">$</span>status
</span></span><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;OK&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>id
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">1733336</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>name
</span></span><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;foo&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>image_id
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">3240036</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>size_id
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">66</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>event_id
</span></span><span style="display:flex;"><span>[1] <span style="color:#ae81ff">25278892</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">attr</span>(,<span style="color:#e6db74">&#34;class&#34;</span>)
</span></span><span style="display:flex;"><span>[1] <span style="color:#e6db74">&#34;dodroplet&#34;</span>
</span></span></code></pre></div><p>List my droplets</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">do_droplets_get</span>()
</span></span></code></pre></div><pre tabindex="0"><code>## $status
## [1] &#34;OK&#34;
## 
## $droplets
## $droplets[[1]]
## $droplets[[1]]$id
## [1] 1733336
## 
## $droplets[[1]]$name
## [1] &#34;foo&#34;
## 
## $droplets[[1]]$image_id
## [1] 3240036
## 
## $droplets[[1]]$size_id
## [1] 66
## 
## $droplets[[1]]$region_id
## [1] 3
## 
## $droplets[[1]]$backups_active
## [1] FALSE
## 
## $droplets[[1]]$ip_address
## [1] &#34;107.170.211.252&#34;
## 
## $droplets[[1]]$private_ip_address
## NULL
## 
## $droplets[[1]]$locked
## [1] FALSE
## 
## $droplets[[1]]$status
## [1] &#34;active&#34;
## 
## $droplets[[1]]$created_at
## [1] &#34;2014-05-28T05:59:22Z&#34;
</code></pre><p>Cool, we have a new Linux box with 512 mb RAM, running Ubuntu 14.04 in the SF region. Notice that I&rsquo;m using my SSH key here. If you don&rsquo;t use your SSH key, Digital Ocean will email you a password, which you then use. We just have to wait a bit (sometimes 20 seconds, sometimes a few minutes) for it to spin up.</p>
<p>Now we can install stuff. Here, I&rsquo;ll install R, and RStudio Server. This step prints out the progress as you would see if you did <code>ssh</code> into the box itself outside of R. The RStudio Server instance will pop up in your default browser when this operation is done.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">do_install</span>(res<span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>id, what<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;rstudio&#39;</span>, usr<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;hey&#39;</span>, pwd<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;there&#39;</span>)
</span></span></code></pre></div><p><img loading="lazy" src="/rstudioinstance.png" alt=""  />
</p>
<p>You can install some things like the <code>libcurl</code> and <code>libxml</code> libraries too with the <code>deps</code> parameter.</p>
<p>When you&rsquo;re done, you can destroy your droplet from R too</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#a6e22e">do_droplets_destroy</span>(res<span style="color:#f92672">$</span>droplet<span style="color:#f92672">$</span>id)
</span></span></code></pre></div><pre tabindex="0"><code>## $status
## [1] &#34;OK&#34;
## 
## $event_id
## [1] 25279124
</code></pre><p>Let me know if you have any thoughts :)</p>
]]></description>
    </item>
  </channel>
</rss>
