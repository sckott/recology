<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Recology</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Recology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shiny file inputs</title>
      <link>http://localhost:1313/2024/03/shiny-file-inputs/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/03/shiny-file-inputs/</guid>
      <description>I wrote the other day about overcoming an issue with Shiny.
Another issue I ran into concurrently was about file inputs. The issue was that file inputs (i.e., shiny::fileInput) was difficult to clear. That is, after a user uploads a file, it was easy to get some of the various parts cleared/cleaned up, but not others:
(Not Easy) The UI components of fileInput (the text of the file name, the loading display) (Not Easy) The data behind the fileInput handler (Easy) Displaying some feedback in the UI after handling file input Load libraries</description>
    </item>
    <item>
      <title>Shiny button weirdness</title>
      <link>http://localhost:1313/2024/03/shiny-events/</link>
      <pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/03/shiny-events/</guid>
      <description>I&amp;rsquo;ve been working on Shiny app at work for the past few months. One of the many frustrating things about Shiny lately has been around buttons. Well, it wasn&amp;rsquo;t really about buttons, but that&amp;rsquo;s where it started.
Load libraries
library(shiny) library(bslib) library(crul) Helper function, returned a random UUID from an httpbin server
httpbin_uuid &amp;lt;- function(...) { con &amp;lt;- crul::HttpClient$new(&amp;#34;https://hb.opencpu.org&amp;#34;) res &amp;lt;- con$get(&amp;#34;uuid&amp;#34;) jsonlite::fromJSON(res$parse(&amp;#34;UTF-8&amp;#34;))$uuid } A bslib ui component
ui &amp;lt;- page_sidebar( title = &amp;#34;My dashboard&amp;#34;, sidebar = list( actionButton(&amp;#34;submit&amp;#34;, &amp;#34;Submit&amp;#34;), actionButton(&amp;#34;reset&amp;#34;, &amp;#34;Reset&amp;#34;) ), textInput(inputId = &amp;#34;name&amp;#34;, &amp;#34;Your name&amp;#34;), textOutput(&amp;#34;uuid&amp;#34;) ) Here&amp;rsquo;s the server part that was giving me trouble.</description>
    </item>
    <item>
      <title>Avoiding the word footgun(s)</title>
      <link>http://localhost:1313/2024/03/foot-guns/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/03/foot-guns/</guid>
      <description>I recently opened an issue in a repository for a package I&amp;rsquo;m working on to think about potential footguns and how to avoid them. That word &amp;ldquo;footguns&amp;rdquo; got me thinking; does using phrases/metaphors for a certain topic in a way lend credibility to it? For example, we use a lot of sports metaphors in the US, especially baseball (swing for the fences, anything related to bases, curveballs, heavy hitter, etc.), and that says something about the place of baseball in our culture.</description>
    </item>
    <item>
      <title>Weird thoughts</title>
      <link>http://localhost:1313/2023/10/weird-thoughts/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2023/10/weird-thoughts/</guid>
      <description>My parents just found this email they had printed out from me from May 19, 2006, when I was 26. I chatted about some family stuff, then had this rambling string of weird thoughts below. I thought others might appreciate a good cringe - or cringy laugh - at my expense. It&amp;rsquo;s especially funny because I&amp;rsquo;m most def an atheist. I don&amp;rsquo;t know, those Tucson sunsets really are transformative.
â€¦ Actually, some deep thoughts:</description>
    </item>
    <item>
      <title>Job searching notes</title>
      <link>http://localhost:1313/2023/10/job-searching/</link>
      <pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2023/10/job-searching/</guid>
      <description>notes to self for next job hunt (some of which may be generally useful):
don&amp;rsquo;t apply to general tech companies anymore for many reasons. heard back from very very few but that may be b/c I don&amp;rsquo;t know many people at general tech companies never been able to get through interviews; they&amp;rsquo;re presumably looking for computer science grads (not me) most of their missions are probably not stuff I&amp;rsquo;d be happy about at the end of the day.</description>
    </item>
    <item>
      <title>Working at Fred Hutchinson Cancer Center</title>
      <link>http://localhost:1313/2023/10/fred-hutch/</link>
      <pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2023/10/fred-hutch/</guid>
      <description>Soooo, my last job at Deck was amazing. I loved it. I was doing data engineer stuff there, mostly maintaining infrastructure for data pipelines. Everyone was great and the mission was amazing: helping Democrats win. Yet the company was shut down about a month ago, sending me on another job search, the 3rd since early/mid 2021.
I&amp;rsquo;m super thrilled to have landed a job (Software and Reproducibility Software Developer) at the Fred Hutch Data Science Lab (DASL), headed up by Jeff Leek, working with Sean Kross, Amy Paguirigan, and Monica Gerber, among many other amazing folks.</description>
    </item>
    <item>
      <title>Python, ast, and redbaron</title>
      <link>http://localhost:1313/2023/04/python-ast/</link>
      <pubDate>Tue, 18 Apr 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2023/04/python-ast/</guid>
      <description>I recently had a use case at work where I wanted to check that file paths given in a Python script actually existed. These paths were in various GitHub repositories, so all I had to do was pull out the paths and check if they exist on GitHub.
There were a few catches though.
First, I couldn&amp;rsquo;t simply get any string out of each Python script - they needed to be strings specficied by a specific function parameter, and match a regex (e.</description>
    </item>
    <item>
      <title>CRAN Checks API and Badges</title>
      <link>http://localhost:1313/2022/06/cran-checks-badges/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2022/06/cran-checks-badges/</guid>
      <description>TL;DR In 6 months (end of November 2022) the CRAN Checks API https://cranchecks.info/ will be gone You can still get badges at https://badges.cranchecks.info You can use the new badges like: [![cran checks](https://badges.cranchecks.info/worst/dplyr.svg)](https://cran.r-project.org/web/checks/check_results_dplyr.html) Find more details at https://github.com/sckott/cchecksbadges
Sunsetting the CRAN Checks API If you contribute an R package to CRAN, you may use badges from the CRAN checks API at https://cranchecks.info/. The CRAN Checks API has been operating since about September 2017 (I think).</description>
    </item>
    <item>
      <title>List comprehension vs. filter vs. key lookup</title>
      <link>http://localhost:1313/2022/04/lookup-vs-filter/</link>
      <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2022/04/lookup-vs-filter/</guid>
      <description>I was working on a work task last week, and needed to filter out one instance of a class from a list of class instances. No matter how you do this speed doesn&amp;rsquo;t matter too much if you&amp;rsquo;re doing this operation once or a few times.
However, I this operation needs to be done about 100K times each time the script runs - so speed definitely does matter in this case.</description>
    </item>
    <item>
      <title>Notes on Python</title>
      <link>http://localhost:1313/2022/02/python-notes/</link>
      <pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2022/02/python-notes/</guid>
      <description>It&amp;rsquo;s been interesting switching jobs with respect to programming languages. I used to write 95% R - now I write 95% Python.
I have been using Python for many years, but not seriously or getting paid either. I&amp;rsquo;ve learned alot in the first 6 months.
Some Python things learned:
Functions and methods I used to think functions and methods were the same thing. But during the last 6 months I learned that functions and methods are not the same.</description>
    </item>
  </channel>
</rss>
